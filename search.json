[{"title":"Centos8 安装web console(cockpit)","url":"/2020/08/03/Centos8-%E5%AE%89%E8%A3%85web-console/","content":"<p>有些时候我们不想登录上centos的服务器执行一些操作这个时候就需要一个图形化界面</p>\n<span id=\"more\"></span>\n\n<h5 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h5><pre><code>dnf -y install cockpit\n</code></pre>\n<h5 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h5><pre><code>systemctl start cockpit\n</code></pre>\n<h5 id=\"开机自动启动\"><a href=\"#开机自动启动\" class=\"headerlink\" title=\"开机自动启动\"></a>开机自动启动</h5><pre><code>systemctl enable cockpit\n</code></pre>\n<h5 id=\"访问\"><a href=\"#访问\" class=\"headerlink\" title=\"访问\"></a>访问</h5><p>在浏览器中输入&lt;服务器的IP:9090&gt;即可登录到web界面</p>\n<p>输入账号密码后进去如类似下界面</p>\n<p><img src=\"/images/pasted-2.png\" alt=\"upload successful\"></p>\n<blockquote>\n<p>端口号可以在 <code>/usr/lib/systemd/system/cockpit.socket</code>中修改</p>\n</blockquote>\n","categories":["运维"],"tags":["linux"]},{"title":"Docker镜像分析工具dive","url":"/2020/09/29/Docker%E9%95%9C%E5%83%8F%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7dive/","content":"<p>通过可视化分析docker镜像</p>\n<span id=\"more\"></span>\n\n<h5 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h5><h6 id=\"MacOs\"><a href=\"#MacOs\" class=\"headerlink\" title=\"MacOs\"></a>MacOs</h6><pre><code>brew install dive\n</code></pre>\n<p>其他平台查看官方文档:<a href=\"https://github.com/wagoodman/dive#installation\">https://github.com/wagoodman/dive#installation</a></p>\n<h5 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h5><p>一般我们查看镜像可以使用<code>docker inspect</code>命令查看镜像的信息</p>\n<p>使用<code>dive &lt;image:tage&gt;</code>来查看一个镜像，默认tag为<code>latest</code>没有镜像则会下载</p>\n<p><img src=\"/images/pasted-3.png\" alt=\"upload successful\"></p>\n<p>如图之所示左边显示阶段和执行的命令，右边是文件系统，&lt;tab&gt;键切换到右边的文件系统，↑↓键则启动光标</p>\n","categories":["运维"],"tags":["docker"]},{"title":"GO环境变量","url":"/2020/09/14/GO%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/","content":"<p>go 有很多的环境变量记录一下常用的变量</p>\n<span id=\"more\"></span>\n\n<h4 id=\"查看环境变量\"><a href=\"#查看环境变量\" class=\"headerlink\" title=\"查看环境变量\"></a>查看环境变量</h4><ul>\n<li><p>go env 查看所有变量</p>\n</li>\n<li><p>go env xxx 查看执行环境变量</p>\n</li>\n<li><p>go help environment 查看各个环境变量的作用</p>\n</li>\n</ul>\n<h4 id=\"修改环境变量\"><a href=\"#修改环境变量\" class=\"headerlink\" title=\"修改环境变量\"></a>修改环境变量</h4><ul>\n<li><p>go 1.13以上推荐使用 go env -w NAME=VALUE 来设置环境变量</p>\n</li>\n<li><p>go env -w 设置的变量根据<code>os.UserConfigDir()</code>返回的值来确定存在哪</p>\n<ul>\n<li>Linux在$HOME/.config</li>\n<li>Darwin在$HOME/Library/Application Support</li>\n<li>Windows在%AppData%</li>\n</ul>\n</li>\n<li><p>go 1.13以下使用export NAME=VALUE 写profile来设置，如.bashrc,.zshrc等</p>\n</li>\n</ul>\n<h4 id=\"常用变量说明\"><a href=\"#常用变量说明\" class=\"headerlink\" title=\"常用变量说明\"></a>常用变量说明</h4><table>\n<thead>\n<tr>\n<th>环境变量</th>\n<th>说明</th>\n<th>默认</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>GOROOT</td>\n<td>go的安装位置</td>\n<td>/usr/local/bin</td>\n<td>-</td>\n</tr>\n<tr>\n<td>GOARCH</td>\n<td>架构类型</td>\n<td>当前机器架构类型</td>\n<td>-</td>\n</tr>\n<tr>\n<td>GOOS</td>\n<td>编译出文件的类型</td>\n<td>当前系统</td>\n<td>通过改变GOOS来设置交叉编译</td>\n</tr>\n<tr>\n<td>GOPATH</td>\n<td>go的项目存放目录</td>\n<td>$HOME/go</td>\n<td>在没使用gomod的时候安装的代码就存放在此</td>\n</tr>\n<tr>\n<td>GOBIN</td>\n<td><code>go instlal</code>安装的文件目录</td>\n<td>-</td>\n<td>一般将此目录加入PATH,<code>export PATH=$PATH:$GOBIN&gt;$HOME/.zshrc</code></td>\n</tr>\n<tr>\n<td>GO111MODULE</td>\n<td>go mod 开关</td>\n<td>自动</td>\n<td>-</td>\n</tr>\n<tr>\n<td>GOPROXY</td>\n<td>go mod的代理地址</td>\n<td>-</td>\n<td>国内推荐使用<a href=\"https://goproxy.cn,direct/\">https://goproxy.cn,direct</a></td>\n</tr>\n</tbody></table>\n","categories":["开发"],"tags":["go"]},{"title":"Go资源内嵌embed","url":"/2021/03/19/Go%E8%B5%84%E6%BA%90%E5%86%85%E5%B5%8Cembed/","content":"<p>Go官方在1.16版本发布了官方内嵌资源到二进制的功能，使得部署更加简单</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>在开发web的时候往往会有一些web文件，而部署的时候需要部署一个二进制还要部署web文件比较繁琐，在go1.16之前也有很多包实现了内嵌资源文件到二进制中如<a href=\"https://github.com/gobuffalo/packr\">https://github.com/gobuffalo/packr</a>，而如今go官方实现了这个特性</p>\n</blockquote>\n<h4 id=\"基本用法\"><a href=\"#基本用法\" class=\"headerlink\" title=\"基本用法\"></a>基本用法</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token boolean\">_</span> <span class=\"token string\">\"embed\"</span>\n\t<span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">//go:embed Dockerfile</span>\n<span class=\"token keyword\">var</span> f <span class=\"token builtin\">string</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>上面的例子就是将当前目录的dockerfile内容内嵌到变量f中,编译之后即使这个文件不存在也能打印出内容</p>\n<h4 id=\"嵌入文件夹\"><a href=\"#嵌入文件夹\" class=\"headerlink\" title=\"嵌入文件夹\"></a>嵌入文件夹</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"embed\"</span>\n    <span class=\"token string\">\"fmt\"</span>\n    <span class=\"token string\">\"path/filepath\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">//go:embed foo</span>\n<span class=\"token keyword\">var</span> fs embed<span class=\"token punctuation\">.</span>FS\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    files<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">ReadDir</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> file <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> files <span class=\"token punctuation\">&#123;</span>\n        d<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">ReadFile</span><span class=\"token punctuation\">(</span>filepath<span class=\"token punctuation\">.</span><span class=\"token function\">Join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">Name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n            fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"文件名:\"</span><span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">Name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"内容:\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>上面的代码将目录下的foo目录内嵌到fs这个变量中，然后打印出这个文件夹里文字的名字和内容</p>\n</blockquote>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">$ tree foo \nfoo\n├── test\n└── test2\n\n0 directories, 2 files\n\n# 编译\n$ go build -o test .\n\n# 执行\n$ .&#x2F;test                \n文件名: test 内容: hahah\n文件名: test2 内容: testest<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h4><ul>\n<li>路径默认是从mod的目录为根目录</li>\n<li>会忽略”.“开头和”_“开头的文件</li>\n<li>不管是win还是linux都使用”/“</li>\n<li>支持匹配如，<code>//go:embed foo/*.yaml</code></li>\n<li>可以同时导入多个目录 如<code>//go:embed foo test</code></li>\n</ul>\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://www.cnblogs.com/apocelipes/p/13907858.html\">https://www.cnblogs.com/apocelipes/p/13907858.html</a></p>\n","categories":["开发"]},{"title":"Iptables","url":"/2020/12/03/Iptables/","content":"<p>Iptables是大多数发型版本中支持的防火墙</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>iptables是个前端其真正的后端是linux的netfilter框架,一些发行版略有区别，centos8中则使用nftables来代替</p>\n</blockquote>\n<h4 id=\"链\"><a href=\"#链\" class=\"headerlink\" title=\"链\"></a>链</h4><blockquote>\n<p>在linuxn内核中的五个钩子(hook)，iptable中还可以自定义链，自定义只能被默认链引用才能使用</p>\n</blockquote>\n<ul>\n<li>INPUT 发送到用户空间的钩子</li>\n<li>OUTPUT 从用户空间发发出的钩子</li>\n<li>PREROUTING 路由前的钩子</li>\n<li>FORWARD 转发的钩子</li>\n<li>POSTROUTING 路由后的钩子</li>\n</ul>\n<h4 id=\"表\"><a href=\"#表\" class=\"headerlink\" title=\"表\"></a>表</h4><blockquote>\n<p>一些相近功能规则的组</p>\n</blockquote>\n<ul>\n<li>filter表：负责过滤功能，内核模块：iptables_filter</li>\n<li>nat表：网络地址转换功能；内核模块：iptable_nat</li>\n<li>mangle表：拆解报文，做出修改并重新封装的功能；内核模块：iptable_mangle</li>\n<li>raw表：关闭nat表上启用的连接追踪机制；iptable_raw</li>\n</ul>\n<h4 id=\"链表关系\"><a href=\"#链表关系\" class=\"headerlink\" title=\"链表关系\"></a>链表关系</h4><p><img src=\"/images/pasted-11.png\" alt=\"images\"></p>\n<h4 id=\"查看规则\"><a href=\"#查看规则\" class=\"headerlink\" title=\"查看规则\"></a>查看规则</h4><p><img src=\"/images/pasted-10.png\" alt=\"images\"></p>\n<h5 id=\"命令说明\"><a href=\"#命令说明\" class=\"headerlink\" title=\"命令说明\"></a>命令说明</h5><ul>\n<li>-L 列出规则,L后面可也接受指定链</li>\n<li>-v 可以查看更多的信息</li>\n<li>-n 不对地址做名称反解 直接显示原来的IP地址</li>\n<li>-t 执行表名，默认为<code>filter</code>表</li>\n<li>–line-numbers 显示规则序列号,缩写为–line</li>\n<li>-x 精确数值</li>\n</ul>\n<h5 id=\"返回说明\"><a href=\"#返回说明\" class=\"headerlink\" title=\"返回说明\"></a>返回说明</h5><ul>\n<li>红色部分：<ul>\n<li>chain：链名，括号里的policy默认策略这里是drop</li>\n<li>packets：默认策略匹配到的包的数量</li>\n<li>bytes：当前链默认策略匹配到的所有包的大小总和</li>\n</ul>\n</li>\n<li>绿色部分：<ul>\n<li>bytes:对应匹配到的报文包的大小总和</li>\n<li>target:规则对应的target，往往表示规则对应的”动作”，即规则匹配成功后需要采取的措施</li>\n<li>prot:表示规则对应的协议，是否只针对某些协议应用此规则</li>\n<li>opt:表示规则对应的选项</li>\n<li>in:表示数据包由哪个接口(网卡)流入</li>\n<li>out:表示数据包由哪个接口(网卡)流出</li>\n<li>source:表示规则对应的源头IP或网段</li>\n<li>destination:表示规则对应的目标IP或网段</li>\n</ul>\n</li>\n<li>黄色部分：规则序列号</li>\n</ul>\n<h5 id=\"查看所有规则\"><a href=\"#查看所有规则\" class=\"headerlink\" title=\"查看所有规则\"></a>查看所有规则</h5><p>查看所有链所有表的规则</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">iptables --line-numbers -nvL<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"查看指定规则\"><a href=\"#查看指定规则\" class=\"headerlink\" title=\"查看指定规则\"></a>查看指定规则</h5><p>查看指定表，默认链</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"># iptables --line-numbers -nvL -t &lt;表&gt;\niptables --line-numbers -nvL -t nat<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>查看INPUT链的nat表</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"># iptables --line-numbers -nvL &lt;链&gt; -t &lt;表&gt;\n# iptables --line-numbers -nv -L &lt;链&gt; -t &lt;表&gt;\niptables --line-numbers -nv -L INPUT -t nat<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>查看INPUT链的nat表的序列号是3的规则</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"># iptables --line-numbers -nvL &lt;链&gt; 3-t &lt;表&gt;\n# iptables --line-numbers -nv -L &lt;链&gt; 3 -t &lt;表&gt;\niptables --line-numbers -nv -L INPUT 3 -t nat<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"增加规则\"><a href=\"#增加规则\" class=\"headerlink\" title=\"增加规则\"></a>增加规则</h4><blockquote>\n<p>iptables是自上而下匹配规则的所以顺序很重要 <br>-A 尾部增加 <br>-I 头部增加 后面加上序列号则是指定序列号位置</p>\n</blockquote>\n<h5 id=\"尾部增加规则\"><a href=\"#尾部增加规则\" class=\"headerlink\" title=\"尾部增加规则\"></a>尾部增加规则</h5><p>在 filter表INPUT链中<code>尾部</code>增加一条丢弃从192.168.1.1发送过来数据的规则</p>\n<pre class=\"line-numbers language-Shell\" data-language=\"Shell\"><code class=\"language-Shell\"># iptables -t &lt;表名&gt; -A &lt;链名&gt; &lt;匹配条件&gt; -j &lt;动作&gt;\niptables -t filter -A INPUT -s 192.168.1.1 -j DROP<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h5 id=\"头部增加规则\"><a href=\"#头部增加规则\" class=\"headerlink\" title=\"头部增加规则\"></a>头部增加规则</h5><p>在 filter表INPUT链中<code>头部</code>增加一条丢弃从192.168.1.2发送过来数据的规则</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"># iptables -t &lt;表名&gt; -I &lt;链名&gt; &lt;匹配条件&gt; -j &lt;动作&gt;\niptables -t filter -I INPUT -s 192.168.1.2 -j DROP<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h5 id=\"指定位置增加规则\"><a href=\"#指定位置增加规则\" class=\"headerlink\" title=\"指定位置增加规则\"></a>指定位置增加规则</h5><p>在 filter表INPUT链中<code>指定位置</code>增加一条丢弃从192.168.1.3发送过来数据的规则</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"># iptables -t &lt;表名&gt; -I &lt;链名&gt; &lt;规则序号&gt;  &lt;匹配条件&gt; -j &lt;动作&gt;\niptables -t filter -I INPUT  3 -s 192.168.1.2 -j DROP<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"修改规则\"><a href=\"#修改规则\" class=\"headerlink\" title=\"修改规则\"></a>修改规则</h4><p>将序列号为2的规则的动作修改为accept</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"># iptables -t &lt;表名&gt; -R &lt;链名&gt; &lt;规则序号&gt; &lt;原本的匹配条件&gt; -j &lt;动作&gt;\niptables -t filter -R INPUT 2 -s 192.168.1.146 -j ACCEPT<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h5 id=\"修改默认规则\"><a href=\"#修改默认规则\" class=\"headerlink\" title=\"修改默认规则\"></a>修改默认规则</h5><p>将INPUT链默认策略设置为DROP,注意不要在生产环境执行此规则会断网</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"># iptables -t &lt;表&gt; -P &lt;链&gt; &lt;动作&gt;\n# iptables  -P &lt;链&gt; &lt;动作&gt; 表可省略\niptables -t filter -P INPUT DROP<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"删除规则\"><a href=\"#删除规则\" class=\"headerlink\" title=\"删除规则\"></a>删除规则</h4><h5 id=\"按照规则序号删除规则\"><a href=\"#按照规则序号删除规则\" class=\"headerlink\" title=\"按照规则序号删除规则\"></a>按照规则序号删除规则</h5><pre class=\"line-numbers language-Shell\" data-language=\"Shell\"><code class=\"language-Shell\"># iptables -t &lt;表名&gt; -D &lt;链名&gt; &lt;规则序号&gt;\niptables -t filter -D INPUT 3<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h5 id=\"按照具体的匹配条件与动作删除规则\"><a href=\"#按照具体的匹配条件与动作删除规则\" class=\"headerlink\" title=\"按照具体的匹配条件与动作删除规则\"></a>按照具体的匹配条件与动作删除规则</h5><pre class=\"line-numbers language-Shell\" data-language=\"Shell\"><code class=\"language-Shell\"># iptables -t &lt;表名&gt; -D &lt;链名&gt; &lt;匹配条件&gt; -j &lt;动作&gt;\niptables -t filter -D INPUT -s 192.168.1.2 -j DROP<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h5 id=\"删除所有规则\"><a href=\"#删除所有规则\" class=\"headerlink\" title=\"删除所有规则\"></a>删除所有规则</h5><blockquote>\n<p>谨慎操作！！！</p>\n</blockquote>\n<p>清除filter表</p>\n<pre class=\"line-numbers language-Shell\" data-language=\"Shell\"><code class=\"language-Shell\"># iptables -t &lt;表名&gt; -F\niptables -t filter -F<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"处理动作\"><a href=\"#处理动作\" class=\"headerlink\" title=\"处理动作\"></a>处理动作</h4><blockquote>\n<p>处理动作在iptables中被称为target，动作也可以分为基本动作和扩展动作默认动作如下</p>\n</blockquote>\n<ul>\n<li>ACCEPT：允许数据包通过</li>\n<li>DROP：丢弃数据包,客户端会等待</li>\n<li>REJECT：拒绝数据包通过，客户端会立即发现拒绝</li>\n<li>SNAT：源地址转换</li>\n<li>MASQUERADE：是SNAT的一种特殊形式，适用于动态的、临时会变的ip上</li>\n<li>DNAT：目标地址转换</li>\n<li>REDIRECT：在本机做端口映射</li>\n<li>LOG：在/var/log/messages文件中记录日志信息，然后传给下一条</li>\n</ul>\n<h4 id=\"条件匹配\"><a href=\"#条件匹配\" class=\"headerlink\" title=\"条件匹配\"></a>条件匹配</h4><blockquote>\n<p>如果有多个规则，则规则时间是<code>与</code>关系</p>\n</blockquote>\n<h5 id=\"源地址匹配\"><a href=\"#源地址匹配\" class=\"headerlink\" title=\"源地址匹配\"></a>源地址匹配</h5><blockquote>\n<p>-s 用于匹配报文的源地址,可以同时指定多个源地址，每个IP之间用逗号隔开，也可以指定为一个网段。</p>\n</blockquote>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"># 丢弃从192.168.1.1和192.168.1.2发送过来的数据\niptables -t filter -I INPUT -s 192.168.1.1,192.168.1.2 -j DROP\n# 允许从192.168.1.0&#x2F;24发送过来的数据\niptables -t filter -I INPUT -s 192.168.1.0&#x2F;24 -j ACCEPT\n# 允许除了192.168.1.0&#x2F;24发送过来的数据\niptables -t filter -I INPUT ! -s 192.168.1.0&#x2F;24 -j ACCEPT<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"目的地址匹配\"><a href=\"#目的地址匹配\" class=\"headerlink\" title=\"目的地址匹配\"></a>目的地址匹配</h5><blockquote>\n<p>-d 用于匹配报文的目标地址,和源地址匹配一样可以同时指定多个目标地址，每个IP之间用逗号隔开，也可以指定为一个网段。</p>\n</blockquote>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"># 丢弃发送到192.168.1.1和192.168.1.2的数据\niptables -t filter -I OUTPUT -s 192.168.1.1,192.168.1.2 -j DROP\n# 允许发送数据到192.168.1.0&#x2F;24\niptables -t filter -I INPUT -s 192.168.1.0&#x2F;24 -j ACCEPT\n# 允许发送除了192.168.1.0&#x2F;24数据\niptables -t filter -I INPUT ! -s 192.168.1.0&#x2F;24 -j ACCEPT<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"端口匹配\"><a href=\"#端口匹配\" class=\"headerlink\" title=\"端口匹配\"></a>端口匹配</h5><blockquote>\n<p>-p 匹配报文的协议类型,可以匹配的协议类型tcp、udp、icmp等</p>\n</blockquote>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"># 允许发送数据到192.168.1.1的tcp协议\niptables -t filter -I INPUT -p tcp -s 192.168.1.1 -j ACCEPT\n# 允许发送数据到192.168.1.1的udp协议\niptables -t filter -I INPUT ! -p udp -s 192.168.1.1 -j ACCEPT<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"网卡流入匹配\"><a href=\"#网卡流入匹配\" class=\"headerlink\" title=\"网卡流入匹配\"></a>网卡流入匹配</h5><blockquote>\n<p>-i 匹配报文是从哪个网卡接口流入本机的，由于匹配条件只是用于匹配报文流入的网卡，所以在OUTPUT链与POSTROUTING链中不能使用此选项。</p>\n</blockquote>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">#\niptables -t filter -I INPUT -p icmp -i enp0s3 -j DROP\n#\niptables -t filter -I INPUT -p icmp ! -i enp0s3 -j DROP<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"网卡流出匹配\"><a href=\"#网卡流出匹配\" class=\"headerlink\" title=\"网卡流出匹配\"></a>网卡流出匹配</h5><blockquote>\n<p>-o 匹配报文将要从哪个网卡接口流出本机，于匹配条件只是用于匹配报文流出的网卡，所以在INPUT链与PREROUTING链中不能使用此选项。</p>\n</blockquote>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"># 丢弃从enp0s3网卡流出的icmp协议\niptables -t filter -I OUTPUT -p icmp -o enp0s3 -j DROP\n# 丢弃除enp0s3网卡流出的icmp协议\niptables -t filter -I OUTPUT -p icmp ! -o enp0s3 -j DROP<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"自定义链\"><a href=\"#自定义链\" class=\"headerlink\" title=\"自定义链\"></a>自定义链</h4><blockquote>\n<p>在规则比较多时方便管理规则，自定义链需要被默认链引用才能生效</p>\n</blockquote>\n<h5 id=\"创建自定义链\"><a href=\"#创建自定义链\" class=\"headerlink\" title=\"创建自定义链\"></a>创建自定义链</h5><blockquote>\n<p>创建一个filter表名字叫TEST的链</p>\n</blockquote>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"># iptables -t &lt;表&gt; -N &lt;链名&gt;\niptables -t filter -N TEST<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h5 id=\"引用自定义链\"><a href=\"#引用自定义链\" class=\"headerlink\" title=\"引用自定义链\"></a>引用自定义链</h5><blockquote>\n<p>引用的时候只需要将动作使用自定义链名 <br>在默认链INPUT中插入一条目标端口是80协议是tcp动作是自定义链TEST的规则</p>\n</blockquote>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">iptables -t filter -I INPUT -p tcp --dport 80 -j TEST<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"重命名自定义链\"><a href=\"#重命名自定义链\" class=\"headerlink\" title=\"重命名自定义链\"></a>重命名自定义链</h5><blockquote>\n<p>将TEST自定义链改为TEST2</p>\n</blockquote>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"># iptables -E &lt;原自定义链名&gt; &lt;目标自定义链名&gt;\niptables -E TEST TEST2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h5 id=\"删除自定义链\"><a href=\"#删除自定义链\" class=\"headerlink\" title=\"删除自定义链\"></a>删除自定义链</h5><blockquote>\n<p>删除TEST2的自定义链名</p>\n</blockquote>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"># iptables -X &lt;自定义链名&gt;\niptables -X TEST2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"规则保存导出和还原\"><a href=\"#规则保存导出和还原\" class=\"headerlink\" title=\"规则保存导出和还原\"></a>规则保存导出和还原</h4><h5 id=\"保存规则\"><a href=\"#保存规则\" class=\"headerlink\" title=\"保存规则\"></a>保存规则</h5><blockquote>\n<p>centos7以上没有安装<code>iptables-services</code></p>\n</blockquote>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"># 安装iptables-services\nyum install -y iptables-services\n\n# 保存规则\nservice iptables save<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"导出规则\"><a href=\"#导出规则\" class=\"headerlink\" title=\"导出规则\"></a>导出规则</h5><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">iptables-restore &gt; iptable<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"还原规则\"><a href=\"#还原规则\" class=\"headerlink\" title=\"还原规则\"></a>还原规则</h5><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">iptables-save &lt; iptable<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"http://www.zsythink.net/archives/category/%e8%bf%90%e7%bb%b4%e7%9b%b8%e5%85%b3/iptables/\">朱双印个人博客</a></p>\n","categories":["运维"],"tags":["linux","网络"]},{"title":"Hexo搭建博客","url":"/2020/09/16/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/","content":"<p>记录一下用hexo搭建博客的过程和一些坑</p>\n<span id=\"more\"></span>\n\n<h4 id=\"安装-Node-js\"><a href=\"#安装-Node-js\" class=\"headerlink\" title=\"安装 Node.js\"></a>安装 Node.js</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">brew <span class=\"token function\">install</span> node<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>当前版本的hexo在node14中会有告警，建议安装12并使用nvm管理node版本</p>\n<h4 id=\"安装-Hexo\"><a href=\"#安装-Hexo\" class=\"headerlink\" title=\"安装 Hexo\"></a>安装 Hexo</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-cli -g<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"初始化Hexo\"><a href=\"#初始化Hexo\" class=\"headerlink\" title=\"初始化Hexo\"></a>初始化Hexo</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> blog <span class=\"token operator\">&amp;&amp;</span><span class=\"token builtin class-name\">cd</span> blog <span class=\"token comment\"># 创建文件夹并进入</span>\nhexo init            <span class=\"token comment\"># 初始化 hexo</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>这个时候执行<code>hexo g &amp;&amp; hexo s</code>就可以使用localhost:4000打开一个blog，此时这个主题是默认的</p>\n<h5 id=\"配置Hexo\"><a href=\"#配置Hexo\" class=\"headerlink\" title=\"配置Hexo\"></a>配置Hexo</h5><ul>\n<li>blog根目录目录下的<code>_config.yaml</code>是hexo的配置文件，自定义的相关设置需要修改此文件</li>\n</ul>\n<h4 id=\"安装-Next主题\"><a href=\"#安装-Next主题\" class=\"headerlink\" title=\"安装 Next主题\"></a>安装 Next主题</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-theme-next<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"配置Next主题\"><a href=\"#配置Next主题\" class=\"headerlink\" title=\"配置Next主题\"></a>配置Next主题</h5><ul>\n<li>配置主题为next，在<code>_config.yaml</code>中查找<code>theme</code>并修改为next</li>\n<li>配置文件中有详细的说明不再细说</li>\n</ul>\n<h4 id=\"Hexo-admin\"><a href=\"#Hexo-admin\" class=\"headerlink\" title=\"Hexo-admin\"></a>Hexo-admin</h4><p>hexo admin 是一个可以直接在网页上写文章且实时预览的插件</p>\n<p>执行<code>npm install --save hexo-admin</code>安装,访问<a href=\"http://localhost:4000/admin\">http://localhost:4000/admin</a></p>\n","categories":["运维"],"tags":["hexo"]},{"title":"K8s节点管理","url":"/2020/01/17/K8s%E8%8A%82%E7%82%B9%E7%AE%A1%E7%90%86/","content":"<p>节点管理</p>\n<span id=\"more\"></span>\n\n<h6 id=\"查看节点\"><a href=\"#查看节点\" class=\"headerlink\" title=\"查看节点\"></a>查看节点</h6><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token comment\">#查看节点基本信息</span>\nkubectl get nodes\n\n<span class=\"token comment\">#查看节点详细信息</span>\nkubectl get nodes <span class=\"token operator\">&lt;</span>节点名字<span class=\"token operator\">></span> -o wide\nkubectl describe nodes <span class=\"token operator\">&lt;</span>节点名字<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"节点调度\"><a href=\"#节点调度\" class=\"headerlink\" title=\"节点调度\"></a>节点调度</h6><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token comment\">#停止向此节点调度</span>\nkubectl cordon <span class=\"token operator\">&lt;</span>节点名字<span class=\"token operator\">></span>\n\n<span class=\"token comment\">#将此节点上的所有容器驱逐到其他节点</span>\nkubectl drain <span class=\"token operator\">&lt;</span>节点名字<span class=\"token operator\">></span>\n\n<span class=\"token comment\">#恢复向此节点调度pod</span>\nkubectl uncordon <span class=\"token operator\">&lt;</span>节点名字<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"标签\"><a href=\"#标签\" class=\"headerlink\" title=\"标签\"></a>标签</h6><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token comment\">#打标签</span>\nkubectl label nodes <span class=\"token operator\">&lt;</span>节点名字<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>标签key<span class=\"token operator\">></span><span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>标签val<span class=\"token operator\">></span>  \n\n<span class=\"token comment\">#删除节点标签</span>\nkubectl label nodes <span class=\"token operator\">&lt;</span>节点名字<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>标签key<span class=\"token operator\">></span>- <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"删除节点\"><a href=\"#删除节点\" class=\"headerlink\" title=\"删除节点\"></a>删除节点</h6><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token comment\"># 驱逐节点上的pod</span>\nkubectl drain <span class=\"token operator\">&lt;</span>节点<span class=\"token operator\">></span> --delete-local-data --force --ignore-daemonsets\n\n<span class=\"token comment\"># 删除节点</span>\nkubectl delete nodes <span class=\"token operator\">&lt;</span>节点<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","categories":["运维"],"tags":["k8s"]},{"title":"Kubectl插件管理工具krew","url":"/2021/04/18/Kubectl%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7krew/","content":"<p>krew是一个kubectl的插件管理系统</p>\n<span id=\"more\"></span>\n\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token punctuation\">(</span>\n  <span class=\"token builtin class-name\">set</span> -x<span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">cd</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span>mktemp -d<span class=\"token variable\">)</span></span>\"</span> <span class=\"token operator\">&amp;&amp;</span>\n  <span class=\"token assign-left variable\">OS</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">uname</span> <span class=\"token operator\">|</span> <span class=\"token function\">tr</span> <span class=\"token string\">'[:upper:]'</span> <span class=\"token string\">'[:lower:]'</span><span class=\"token variable\">)</span></span>\"</span> <span class=\"token operator\">&amp;&amp;</span>\n  <span class=\"token assign-left variable\">ARCH</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">uname</span> -m <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> -e <span class=\"token string\">'s/x86_64/amd64/'</span> -e <span class=\"token string\">'s/\\(arm\\)\\(64\\)\\?.*/<span class=\"token entity\" title=\"\\1\">\\1</span><span class=\"token entity\" title=\"\\2\">\\2</span>/'</span> -e <span class=\"token string\">'s/aarch64$/arm64/'</span><span class=\"token variable\">)</span></span>\"</span> <span class=\"token operator\">&amp;&amp;</span>\n  <span class=\"token function\">curl</span> -fsSLO <span class=\"token string\">\"https://github.com/kubernetes-sigs/krew/releases/latest/download/krew.tar.gz\"</span> <span class=\"token operator\">&amp;&amp;</span>\n  <span class=\"token function\">tar</span> zxvf krew.tar.gz <span class=\"token operator\">&amp;&amp;</span>\n  <span class=\"token assign-left variable\">KREW</span><span class=\"token operator\">=</span>./krew-<span class=\"token string\">\"<span class=\"token variable\">$&#123;OS&#125;</span>_<span class=\"token variable\">$&#123;ARCH&#125;</span>\"</span> <span class=\"token operator\">&amp;&amp;</span>\n  <span class=\"token string\">\"<span class=\"token variable\">$KREW</span>\"</span> <span class=\"token function\">install</span> krew\n<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>添加环境变量</p>\n</blockquote>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$&#123;KREW_ROOT<span class=\"token operator\">:-</span>$HOME<span class=\"token operator\">/</span>.krew&#125;</span>/bin:<span class=\"token environment constant\">$PATH</span>\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h5><ul>\n<li><p>kubectl krew install xxx 安装插件</p>\n</li>\n<li><p>kubectl krew uninstall xxx 卸载插件</p>\n</li>\n<li><p>kubectl krew list xxx 查看插件</p>\n</li>\n<li><p>kubectl krew update xxx 升级插件</p>\n</li>\n</ul>\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://krew.sigs.k8s.io/\">https://krew.sigs.k8s.io</a></p>\n","categories":["运维"],"tags":["k8s"]},{"title":"IP命令基本使用","url":"/2021/05/02/IP%E5%91%BD%E4%BB%A4/","content":"<p>ip 命令是linux中常用的网络配置命令</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>ip命令是iproute2包中的命令</p>\n</blockquote>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><blockquote>\n<p>一般发行版再带ip命令</p>\n</blockquote>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token comment\"># macos</span>\nbrew <span class=\"token function\">install</span> iproute2mac\n\n<span class=\"token comment\"># ubuntu</span>\n<span class=\"token function\">apt</span> <span class=\"token function\">install</span> iproute2\n\n<span class=\"token comment\"># centos</span>\nyum <span class=\"token function\">install</span> iproute2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"设备-device\"><a href=\"#设备-device\" class=\"headerlink\" title=\"设备(device)\"></a>设备(device)</h4><blockquote>\n<p>主要是配置OSI模型中的第二层数据链路层</p>\n</blockquote>\n<h5 id=\"查看设备\"><a href=\"#查看设备\" class=\"headerlink\" title=\"查看设备\"></a>查看设备</h5><pre class=\"line-numbers language-sehll\" data-language=\"sehll\"><code class=\"language-sehll\"># 显示所有\nip link show\n\n详细显示\nip -s  link show<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"操作设备\"><a href=\"#操作设备\" class=\"headerlink\" title=\"操作设备\"></a>操作设备</h5><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token comment\"># 开启网卡</span>\n<span class=\"token function\">ip</span> <span class=\"token function\">link</span> <span class=\"token builtin class-name\">set</span> ens33 up\n\n<span class=\"token comment\"># 关闭网卡</span>\n<span class=\"token function\">ip</span> <span class=\"token function\">link</span> <span class=\"token builtin class-name\">set</span> ens33 down\n\n<span class=\"token comment\"># 开启网卡的混合模式</span>\n<span class=\"token function\">ip</span> <span class=\"token function\">link</span> <span class=\"token builtin class-name\">set</span> ens33 promisc on\n\n<span class=\"token comment\"># 关闭网卡的混个模式</span>\n<span class=\"token function\">ip</span> <span class=\"token function\">link</span> <span class=\"token builtin class-name\">set</span> ens33 promisc offi\n\n<span class=\"token comment\"># 设置网卡队列长度</span>\n<span class=\"token function\">ip</span> <span class=\"token function\">link</span> <span class=\"token builtin class-name\">set</span> ens33 txqueuelen <span class=\"token number\">1200</span>\n\n<span class=\"token comment\"># 设置网卡最大传输单元</span>\n<span class=\"token function\">ip</span> <span class=\"token function\">link</span> <span class=\"token builtin class-name\">set</span> ens33 mtu <span class=\"token number\">1400</span>\n\n<span class=\"token comment\"># 修改名字</span>\n<span class=\"token function\">ip</span> <span class=\"token function\">link</span> <span class=\"token builtin class-name\">set</span> ens33 name eth0\n\n<span class=\"token comment\"># 修改网卡的MAC地址</span>\n<span class=\"token function\">ip</span> <span class=\"token function\">link</span> <span class=\"token builtin class-name\">set</span> ens33 address aa:aa:aa:aa:aa:aa<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"IP相关配置\"><a href=\"#IP相关配置\" class=\"headerlink\" title=\"IP相关配置\"></a>IP相关配置</h4><h5 id=\"查看IP\"><a href=\"#查看IP\" class=\"headerlink\" title=\"查看IP\"></a>查看IP</h5><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token comment\"># 显示所有IP地址</span>\n<span class=\"token function\">ip</span> address\n<span class=\"token comment\"># 简写</span>\n<span class=\"token function\">ip</span> addr \n\n<span class=\"token comment\"># 显示指定网卡的IP</span>\n<span class=\"token function\">ip</span> addr ens\n\n<span class=\"token comment\"># 详细显示指定网卡的IP</span>\n<span class=\"token function\">ip</span> -s addr ens33\n\n<span class=\"token number\">2</span>: ens33: <span class=\"token operator\">&lt;</span>BROADCAST,MULTICAST,UP,LOWER_UP<span class=\"token operator\">></span> mtu <span class=\"token number\">1500</span> qdisc fq_codel state UP group default qlen <span class=\"token number\">1000</span>\n    link/ether 00:0c:29:d9:89:c8 brd ff:ff:ff:ff:ff:ff\n    inet <span class=\"token number\">192.168</span>.32.132/24 brd <span class=\"token number\">192.168</span>.32.255 scope global noprefixroute ens33\n       valid_lft forever preferred_lft forever\n    inet6 fe80::20c:29ff:fed9:89c8/64 scope <span class=\"token function\">link</span>\n       valid_lft forever preferred_lft forever<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>broadcast：设定广播位址，如果设定值是 + 表示让系统自动计算；</li>\n<li>label：该设备的别名，例如eth0:0；</li>\n<li>scope：这个设备的领域，默认global，通常是以下几个大类：</li>\n<li>global：允许来自所有来源的连线；<ul>\n<li>site：仅支持IPv6 ，仅允许本主机的连接；</li>\n<li>link：仅允许本设备自我连接；</li>\n<li>host：仅允许本主机内部的连接；</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"增加IP\"><a href=\"#增加IP\" class=\"headerlink\" title=\"增加IP\"></a>增加IP</h5><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token comment\"># 设置ens33网卡IP地址192.168.1.1</span>\n<span class=\"token function\">ip</span> addr <span class=\"token function\">add</span> <span class=\"token number\">192.168</span>.1.1/24 dev ens33 <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h5 id=\"删除IP\"><a href=\"#删除IP\" class=\"headerlink\" title=\"删除IP\"></a>删除IP</h5><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"> <span class=\"token comment\"># 删除ens33网卡IP地址</span>\n<span class=\"token function\">ip</span> addr del <span class=\"token number\">192.168</span>.1.1/24 dev ens33<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"路由相关配置\"><a href=\"#路由相关配置\" class=\"headerlink\" title=\"路由相关配置\"></a>路由相关配置</h4><h5 id=\"查看路由\"><a href=\"#查看路由\" class=\"headerlink\" title=\"查看路由\"></a>查看路由</h5><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token comment\"># 显示系统路由</span>\n<span class=\"token function\">ip</span> route show\n\n<span class=\"token comment\">#简写</span>\n<span class=\"token function\">ip</span> r\n\ndefault via <span class=\"token number\">192.168</span>.32.2 dev ens33 proto static metric <span class=\"token number\">100</span>                      \n<span class=\"token number\">169.254</span>.0.0/16 dev ens33 scope <span class=\"token function\">link</span> metric <span class=\"token number\">1000</span>                                 \n<span class=\"token number\">172.16</span>.1.0/24 dev docker0 proto kernel scope <span class=\"token function\">link</span> src <span class=\"token number\">172.16</span>.1.1                \n<span class=\"token number\">192.168</span>.32.0/24 dev ens33 proto kernel scope <span class=\"token function\">link</span> src <span class=\"token number\">192.168</span>.32.132 metric <span class=\"token number\">100</span> \n<span class=\"token number\">192.168</span>.49.0/24 dev br-e6a94a27c143 proto kernel scope <span class=\"token function\">link</span> src <span class=\"token number\">192.168</span>.49.1    \n<span class=\"token number\">192.168</span>.122.0/24 dev virbr0 proto kernel scope <span class=\"token function\">link</span> src <span class=\"token number\">192.168</span>.122.1 linkdown  \n\n<span class=\"token comment\">#显示vip这个路由表的路由</span>\n<span class=\"token function\">ip</span> route show table vip\n\n<span class=\"token comment\"># 查看某个地址走那条路由</span>\n<span class=\"token function\">ip</span> route get <span class=\"token number\">114.114</span>.114.114<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>proto：此路由的路由协定，主要有redirect,kernel,boot,static,ra等，其中kernel是直接由核心判断自动设定。</li>\n<li>scope：路由的范围，主要是link，是与本设备有关的直接连接。</li>\n</ul>\n<h5 id=\"增加-修改路由\"><a href=\"#增加-修改路由\" class=\"headerlink\" title=\"增加/修改路由\"></a>增加/修改路由</h5><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token comment\"># 设置192.168.1.0网段的网关为192.168.1.1数据走eth0接口</span>\n<span class=\"token function\">ip</span> route <span class=\"token function\">add</span> <span class=\"token number\">192.168</span>.1.0/24 via <span class=\"token number\">192.168</span>.1.1 dev eth0\n\n<span class=\"token comment\"># 设置默认网关为192.168.1.1</span>\n<span class=\"token function\">ip</span> route <span class=\"token function\">add</span> default via <span class=\"token number\">192.168</span>.1.1 dev eth0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"删除路由\"><a href=\"#删除路由\" class=\"headerlink\" title=\"删除路由\"></a>删除路由</h5><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token comment\"># 删除192.168.1.0网段的网关</span>\n<span class=\"token function\">ip</span> route del <span class=\"token number\">192.168</span>.1.0/24\n\n<span class=\"token comment\"># 删除默认路由</span>\n<span class=\"token function\">ip</span> route del default\n\n<span class=\"token comment\"># 删除路由</span>\n<span class=\"token function\">ip</span> route delete <span class=\"token number\">192.168</span>.1.0/24 dev eth0 <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"网络命名空间\"><a href=\"#网络命名空间\" class=\"headerlink\" title=\"网络命名空间\"></a>网络命名空间</h4><h5 id=\"查看\"><a href=\"#查看\" class=\"headerlink\" title=\"查看\"></a>查看</h5><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token function\">ip</span> netns\n<span class=\"token function\">ip</span> netns show<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h5 id=\"增加\"><a href=\"#增加\" class=\"headerlink\" title=\"增加\"></a>增加</h5><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token comment\"># 增加一个叫test的网络命名空间</span>\n<span class=\"token function\">ip</span> netns <span class=\"token function\">add</span> <span class=\"token builtin class-name\">test</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h5 id=\"删除\"><a href=\"#删除\" class=\"headerlink\" title=\"删除\"></a>删除</h5><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token comment\"># 删除一个叫test的网络命名空间</span>\n<span class=\"token function\">ip</span> netns del <span class=\"token builtin class-name\">test</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://wangchujiang.com/linux-command/c/ip.html\">https://wangchujiang.com/linux-command/c/ip.html</a><br><a href=\"https://www.jianshu.com/p/7466862382c4\">https://www.jianshu.com/p/7466862382c4</a></p>\n","categories":["运维"]},{"title":"Kvm","url":"/2021/05/22/Kvm/","content":"<p>kvm基于linux内核的虚拟化</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>kvm是基于硬件的完全虚拟化，集成在内核中，qemu主要外部设备的虚拟化两者各发挥所长</p>\n</blockquote>\n<h4 id=\"检查硬件是否支持\"><a href=\"#检查硬件是否支持\" class=\"headerlink\" title=\"检查硬件是否支持\"></a>检查硬件是否支持</h4><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token function\">apt</span> <span class=\"token function\">install</span> cpu-checker\n\nkvm-ok\nINFO: /dev/kvm exists\nKVM acceleration can be used<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>虚拟机中需要打开虚拟化嵌套支持</p>\n</blockquote>\n<p><img src=\"/images/pasted-12.png\" alt=\"upload successful\"></p>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils virtinst virt-manager<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>qemu-kvm -为KVM管理程序提供硬件仿真的软件。</li>\n<li>libvirt-daemon-system -用于将libvirt守护程序作为系统服务运行的配置文件。</li>\n<li>libvirt-clients -用于管理虚拟化平台的软件。</li>\n<li>bridge-utils -一组用于配置以太网桥的命令行工具。</li>\n<li>virtinst -一组用于创建虚拟机的命令行工具。</li>\n<li>virt-manager -易于使用的GUI界面和支持命令行工具，用于通过libvirt管理虚拟机。</li>\n</ul>\n<p>查看运行状态</p>\n<pre class=\"line-numbers language-sehll\" data-language=\"sehll\"><code class=\"language-sehll\">sudo systemctl status libvirtd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"图形化安装操作系统\"><a href=\"#图形化安装操作系统\" class=\"headerlink\" title=\"图形化安装操作系统\"></a>图形化安装操作系统</h4><blockquote>\n<p>找到虚拟系统管理器</p>\n</blockquote>\n<p><img src=\"/images/pasted-13.png\" alt=\"upload successful\"></p>\n<blockquote>\n<p>点击新建，剩下的和vmware很像</p>\n</blockquote>\n<p><img src=\"/images/pasted-14.png\" alt=\"upload successful\"></p>\n<blockquote>\n<p>选择安装类型</p>\n</blockquote>\n<p><img src=\"/images/pasted-15.png\" alt=\"upload successful\"></p>\n<blockquote>\n<p>指定安装的iso镜像文件</p>\n</blockquote>\n<p><img src=\"/images/pasted-16.png\" alt=\"upload successful\"></p>\n<blockquote>\n<p>自动选择系统类型有问题，无法识别，这里改为通用默认类型</p>\n</blockquote>\n<p><img src=\"/images/pasted-17.png\" alt=\"upload successful\"></p>\n<blockquote>\n<p>启动成功进入了安装界面剩下的不做过多介绍</p>\n</blockquote>\n<p><img src=\"/images/pasted-18.png\" alt=\"upload successful\"></p>\n<h5 id=\"其他界面说明\"><a href=\"#其他界面说明\" class=\"headerlink\" title=\"其他界面说明\"></a>其他界面说明</h5><blockquote>\n<p>系统启动引导界面</p>\n</blockquote>\n<p><img src=\"/images/pasted-19.png\" alt=\"upload successful\"></p>\n<blockquote>\n<p>这里可以看到磁盘的信息</p>\n</blockquote>\n<p><img src=\"/images/pasted-20.png\" alt=\"upload successful\"></p>\n<blockquote>\n<p>这里选择可图形服务器</p>\n</blockquote>\n<p><img src=\"/images/pasted-21.png\" alt=\"upload successful\"></p>\n<blockquote>\n<p>网卡配置界面</p>\n</blockquote>\n<p><img src=\"/images/pasted-22.png\" alt=\"upload successful\"></p>\n<h4 id=\"命令行创建\"><a href=\"#命令行创建\" class=\"headerlink\" title=\"命令行创建\"></a>命令行创建</h4><blockquote>\n<p>创建一个磁盘容量为15g，类型为qcow2，名字叫centos7.qcow2的虚拟磁盘</p>\n</blockquote>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">qemu-img create -f qcow2 centos7.qcow2 15G<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<blockquote>\n<p>创建虚拟机</p>\n</blockquote>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> virt-install <span class=\"token punctuation\">\\</span>\n --name<span class=\"token operator\">=</span>centos7 <span class=\"token punctuation\">\\</span>\n --disk <span class=\"token assign-left variable\">path</span><span class=\"token operator\">=</span>/home/centos7.qcow2 <span class=\"token punctuation\">\\</span>\n --vcpus<span class=\"token operator\">=</span><span class=\"token number\">1</span> --ram<span class=\"token operator\">=</span><span class=\"token number\">1024</span> <span class=\"token punctuation\">\\</span>\n --cdrom<span class=\"token operator\">=</span>/home/CentOS-7-x86_64-Minimal-2003.iso <span class=\"token punctuation\">\\</span>\n --network <span class=\"token assign-left variable\">bridge</span><span class=\"token operator\">=</span>virbr0 <span class=\"token punctuation\">\\</span>\n --graphics vnc,listen<span class=\"token operator\">=</span><span class=\"token number\">0.0</span>.0.0 <span class=\"token punctuation\">\\</span>\n --os-type<span class=\"token operator\">=</span>linux <span class=\"token punctuation\">\\</span>\n --os-variant<span class=\"token operator\">=</span><span class=\"token string\">\"centos7.0\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>此时可以通过vnc连接开始安装系统，也可以像图形化界面一样用虚拟机管理器安装</p>\n</blockquote>\n<p><img src=\"/images/pasted-23.png\" alt=\"upload successful\"></p>\n<h5 id=\"选项说明\"><a href=\"#选项说明\" class=\"headerlink\" title=\"选项说明\"></a>选项说明</h5><blockquote>\n<p>virt-install 中–os-variant可选值</p>\n</blockquote>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token comment\"># ubuntu</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> -y <span class=\"token function\">install</span> libosinfo-bin\n\n<span class=\"token comment\"># cengtos</span>\nyum -y <span class=\"token function\">install</span> libosinfo<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"virsh常用命令\"><a href=\"#virsh常用命令\" class=\"headerlink\" title=\"virsh常用命令\"></a>virsh常用命令</h5><table>\n<thead>\n<tr>\n<th>命令</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>virsh start xxx</td>\n<td>启动名字为x的非活动虚拟机</td>\n</tr>\n<tr>\n<td>virsh list  –all</td>\n<td>列出虚拟机</td>\n</tr>\n<tr>\n<td>virsh create xxx.xml</td>\n<td>创建虚拟机，没有持久化</td>\n</tr>\n<tr>\n<td>virsh suspend xxx</td>\n<td>暂停虚拟机</td>\n</tr>\n<tr>\n<td>virsh resume xxxx</td>\n<td>启动暂停的虚拟机</td>\n</tr>\n<tr>\n<td>virsh shutdown xxxx</td>\n<td>正常关闭虚拟机</td>\n</tr>\n<tr>\n<td>virsh destroy xxxx</td>\n<td>强制关闭虚拟机</td>\n</tr>\n<tr>\n<td>virsh undefine xxx</td>\n<td>删除虚拟机，只是从列表中删除，且不会删除活动的虚拟机</td>\n</tr>\n<tr>\n<td>virsh dominfo xxx</td>\n<td>显示虚拟机的基本信息</td>\n</tr>\n<tr>\n<td>virsh domname 2</td>\n<td>显示id号为2的虚拟机名</td>\n</tr>\n<tr>\n<td>virsh domid xxx</td>\n<td>显示虚拟机id号</td>\n</tr>\n<tr>\n<td>virsh domuuid xxx</td>\n<td>显示虚拟机的uuid</td>\n</tr>\n<tr>\n<td>virsh domstate xxx</td>\n<td>显示虚拟机的当前状态</td>\n</tr>\n<tr>\n<td>virsh dumpxml xxx</td>\n<td>显示虚拟机的当前配置文件（可能和定义虚拟机时的配置不同，因为当虚拟机启动时，需要给虚拟机 分配id号、uuid、vnc端口号等等）</td>\n</tr>\n<tr>\n<td>virsh setmem x 512000</td>\n<td>给不活动虚拟机设置内存大小</td>\n</tr>\n<tr>\n<td>virsh edit xxx</td>\n<td>编辑配置文件（一般是在刚定义完虚拟机之后）</td>\n</tr>\n</tbody></table>\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://www.iplayio.cn/post/92661051\">https://www.iplayio.cn/post/92661051</a><br><a href=\"https://www.cnblogs.com/saryli/p/11827903.html\">https://www.cnblogs.com/saryli/p/11827903.html</a></p>\n","categories":["运维"],"tags":["kvm","虚拟化"]},{"title":"Linux \"/proc/sys/kernel/sysrq\"魔法键","url":"/2020/09/29/Linux-proc-sys-kernel-sysrq%E9%AD%94%E6%B3%95%E9%94%AE/","content":"<p>利用<code>/proc/sys/kernel/sysrq</code>处理Linux系统不能正常响应用户请求，比如不能重启这时可以使用<br>强制重启<code>echo b &gt;/proc/sys/kernel/sysrq</code></p>\n<span id=\"more\"></span>\n<p>SysRq也称为魔法键，可以使用键盘快捷键的，但还是使用命令明确一些</p>\n<h6 id=\"检查当前状态\"><a href=\"#检查当前状态\" class=\"headerlink\" title=\"检查当前状态\"></a>检查当前状态</h6><p>  cat /proc/sys/kernel/sysrq</p>\n<p>各个数字对应的含义</p>\n<ul>\n<li>0 完全关闭</li>\n<li>1 开启sysrq所有功能</li>\n<li>&gt;1 允许的sysrq函数的位掩码 具体请看官方<a href=\"https://www.kernel.org/doc/html/v4.11/admin-guide/sysrq.html\">文档</a></li>\n</ul>\n<h6 id=\"更改SysRq\"><a href=\"#更改SysRq\" class=\"headerlink\" title=\"更改SysRq\"></a>更改SysRq</h6><p>可以使用下面你的命令设置</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token builtin class-name\">echo</span> <span class=\"token operator\">&lt;</span>number<span class=\"token operator\">></span> <span class=\"token operator\">></span>/proc/sys/kernel/sysrq<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>或者使用sysctl</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">sysctl -w kernel.sysrq<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>number<span class=\"token operator\">></span>\n``<span class=\"token variable\"><span class=\"token variable\">`</span>  \n\n<span class=\"token comment\">###### 使用SysRq</span>\n\n<span class=\"token variable\">`</span></span>``shell\n<span class=\"token builtin class-name\">echo</span> <span class=\"token operator\">&lt;</span>command<span class=\"token operator\">></span> <span class=\"token operator\">></span> /proc/sysrq-trigger<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>常用的command如下</p>\n<ul>\n<li>b 立即重启,但是不同步磁盘</li>\n<li>s 尝试同步磁盘</li>\n<li>其他的可以参考<a href=\"https://www.kernel.org/doc/html/v4.11/admin-guide/sysrq.html\">文档</a></li>\n</ul>\n","categories":["运维"],"tags":["linux"]},{"title":"Linux 删除文件之后磁盘没释放","url":"/2020/08/04/Linux-%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6%E4%B9%8B%E5%90%8E%E6%B2%A1%E9%87%8A%E6%94%BE/","content":"<p>记一下Linux删除文件之后磁盘没释放</p>\n<span id=\"more\"></span>\n\n<h4 id=\"linux-删除文件之后磁盘没释放\"><a href=\"#linux-删除文件之后磁盘没释放\" class=\"headerlink\" title=\"linux 删除文件之后磁盘没释放\"></a>linux 删除文件之后磁盘没释放</h4><blockquote>\n<p>原因则执行删除的时候是解除链接，如果文件是被打开的，进程会继续读取那个文件</p>\n</blockquote>\n<p>正确是置空文件，命令如下</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token function\">cat</span> /dev/null<span class=\"token operator\">></span>xxx.log<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>可以用下面的命令查找一下类似的文件然后重启对应的程序即可</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token function\">lsof</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> deleted<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n","categories":["运维"],"tags":["linux"]},{"title":"Linux登录欢迎页","url":"/2020/08/03/Linux%E7%99%BB%E5%BD%95%E6%AC%A2%E8%BF%8E%E9%A1%B5/","content":"<p>ssh每次登录的时候显示一些信息</p>\n<span id=\"more\"></span>\n<p>编辑<code>/etc/motd</code>中的内容，即可在登录的时候打印出来</p>\n<p><img src=\"/images/pasted-0.png\" alt=\"upload successful\"></p>\n<p>例如将下面的复制进去</p>\n<pre class=\"line-numbers language-string\" data-language=\"string\"><code class=\"language-string\">......................阿弥陀佛......................\n                      _oo0oo_\n                     o8888888o\n                     88&quot; . &quot;88\n                     (| -_- |)\n                     0\\  &#x3D;  &#x2F;0\n                   ___&#x2F;‘---’\\___\n                  .&#39; \\|       |&#x2F; &#39;.\n                 &#x2F; \\\\|||  :  |||&#x2F;&#x2F; \\\n                &#x2F; _||||| -卍-|||||_ \\\n               |   | \\\\\\  -  &#x2F;&#x2F;&#x2F; |   |\n               | \\_|  &#39;&#39;\\---&#x2F;&#39;&#39;  |_&#x2F; |\n               \\  .-\\__  &#39;-&#39;  ___&#x2F;-. &#x2F;\n             ___&#39;. .&#39;  &#x2F;--.--\\  &#39;. .&#39;___\n         .&quot;&quot; ‘&lt;  ‘.___\\_&lt;|&gt;_&#x2F;___.’&gt;’ &quot;&quot;.\n       | | :  ‘- \\‘.;‘\\ _ &#x2F;’;.’&#x2F; - ’ : | |\n         \\  \\ ‘_.   \\_ __\\ &#x2F;__ _&#x2F;   .-’ &#x2F;  &#x2F;\n    &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;‘-.____‘.___ \\_____&#x2F;___.-’___.-’&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\n                      ‘&#x3D;---&#x3D;’\n\n....................佛祖保佑 ,永无BUG...................<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","categories":["运维"],"tags":["linux"]},{"title":"Minikube安装使用","url":"/2020/09/14/Minikube%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/","content":"<p>在做k8s开发的时候受限于本地的性能以及复杂度不能搭建一个完整的k8s集群，这个时候需要minikube来搭建k8s开发环境</p>\n<span id=\"more\"></span>\n\n<h4 id=\"下载安装\"><a href=\"#下载安装\" class=\"headerlink\" title=\"下载安装\"></a>下载安装</h4><ul>\n<li>阿里云版本<a href=\"https://github.com/AliyunContainerService/minikube\">地址</a>,官方版本<a href=\"https://github.com/kubernetes/minikube\">地址</a>,推荐阿里云版本</li>\n</ul>\n<h5 id=\"下载阿里云版本二进制文件\"><a href=\"#下载阿里云版本二进制文件\" class=\"headerlink\" title=\"下载阿里云版本二进制文件\"></a>下载阿里云版本二进制文件</h5><h6 id=\"Macos\"><a href=\"#Macos\" class=\"headerlink\" title=\"Macos\"></a>Macos</h6><pre><code>curl -Lo minikube https://kubernetes.oss-cn-hangzhou.aliyuncs.com/minikube/releases/v1.13.0/minikube-darwin-amd64 &amp;&amp; chmod +x minikube &amp;&amp; sudo mv minikube /usr/local/bin/\n</code></pre>\n<h6 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h6><pre><code>curl -Lo minikube https://kubernetes.oss-cn-hangzhou.aliyuncs.com/minikube/releases/v1.14.2/minikube-linux-amd64 &amp;&amp; chmod +x minikube &amp;&amp; sudo mv minikube /usr/local/bin/\n</code></pre>\n<h5 id=\"验证安装\"><a href=\"#验证安装\" class=\"headerlink\" title=\"验证安装\"></a>验证安装</h5><p>执行<code>minikube version</code>验证安装</p>\n<h4 id=\"启动Minikube\"><a href=\"#启动Minikube\" class=\"headerlink\" title=\"启动Minikube\"></a>启动Minikube</h4><pre><code>minikube start --driver=docker --image-mirror-country cn\n</code></pre>\n<p>这样就启动一个使用docker作为驱动的minikube，稍等一会就会启动成功，并且将<code>kubectl</code>设置为minikube<br>再次启动是只需要执行<code>minikube start</code>即可</p>\n<h4 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h4><ul>\n<li><p>minikube start 启动集群</p>\n</li>\n<li><p>minikube stop 停止集群</p>\n</li>\n<li><p>minikube delete 删除集群</p>\n</li>\n<li><p>minikube dashboard 打开k8s报表</p>\n</li>\n<li><p>minikube status 查看minikube状态</p>\n</li>\n<li><p>minikube ssh 登录到minikube节点上</p>\n</li>\n</ul>\n","categories":["开发"],"tags":["minikube"]},{"title":"NodeJS基本使用","url":"/2020/09/22/NodeJs%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/","content":"<p>nodejS和相关组件常见的命令记录</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>中文官方：<a href=\"https://nodejs.org/zh-cn\">https://nodejs.org/zh-cn</a></p>\n</blockquote>\n<h5 id=\"安装Node-js\"><a href=\"#安装Node-js\" class=\"headerlink\" title=\"安装Node.js\"></a>安装Node.js</h5><ul>\n<li>CentOS<ul>\n<li>sudo yum install epel-release #安装epel源</li>\n<li>sudo yum install nodejs 安装nodeJs</li>\n</ul>\n</li>\n<li>MacOS<ul>\n<li>brew install node</li>\n<li>官网下载安装包</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"检查是否安装成功\"><a href=\"#检查是否安装成功\" class=\"headerlink\" title=\"检查是否安装成功\"></a>检查是否安装成功</h6><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">node --version<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"安装NVM管理Nodejs版本\"><a href=\"#安装NVM管理Nodejs版本\" class=\"headerlink\" title=\"安装NVM管理Nodejs版本\"></a>安装NVM管理Nodejs版本</h5><p>有些node代码有版本要求，nvm可以在各个版本时间切换</p>\n<p>执行下面的命令安装：</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token function\">curl</span> -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh <span class=\"token operator\">|</span> <span class=\"token function\">bash</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>安装确认：</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">nvm version<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"配置淘宝源\"><a href=\"#配置淘宝源\" class=\"headerlink\" title=\"配置淘宝源\"></a>配置淘宝源</h5><p>查看源</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> get registry<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>查看修改为淘宝</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> config <span class=\"token builtin class-name\">set</span> registry http://registry.npm.taobao.org/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"安装NCU检查模块更新\"><a href=\"#安装NCU检查模块更新\" class=\"headerlink\" title=\"安装NCU检查模块更新\"></a>安装NCU检查模块更新</h5><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g npm-check-updates<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h5><ul>\n<li>npm 命令<ul>\n<li>npm install xxx 安装到当前目录</li>\n<li>npm install -g xxx 安装全局模块</li>\n<li>npm uninstall xxx 卸载模块</li>\n<li>npm uninstall -g  xxx 卸载全局模块</li>\n<li>npm moudles npm list –depth=0 查看所有高级的模块</li>\n<li>npm list –depth=0 -global 查看所有全局安装的模块</li>\n</ul>\n</li>\n<li>nvm<ul>\n<li>nvm install xxx 安装指定版本的node</li>\n<li>nvm ls 查看现在node版本情况</li>\n<li>nvm use xxx 使用某个版本的node</li>\n<li>nvm use system 使用系统安装的node</li>\n<li>nvm uninstall xxx 卸载某个模块</li>\n</ul>\n</li>\n<li>ncu<ul>\n<li>ncu 插件模块是否有更新</li>\n<li>ncu -g 检查全局模块是否有更新</li>\n<li>ncu -u 更新到package.json</li>\n</ul>\n</li>\n</ul>\n","categories":["运维"],"tags":["node","web"]},{"title":"Nsenter命令使用","url":"/2021/04/26/Nsenter%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8/","content":"<p>nsenter在不同的命名空间中执行命令</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>namespace是linux中用于个隔离资源的特性，大名鼎鼎的docker就是基于此，而nsenter就是可以在不用<code>docker exec</code>的情况下进入别的namespace<br>常用的使用场景是很多容器都很精简，一些命令没有对于调试网络来说很麻烦，这个时候可以只进入改容器的网络命名空间，调试更加方便</p>\n</blockquote>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><p>一般linux发行版自带,位于util-linux包中</p>\n<h5 id=\"选项说明\"><a href=\"#选项说明\" class=\"headerlink\" title=\"选项说明\"></a>选项说明</h5><p>-t, –target pid：指定被进入命名空间的目标进程的pid<br>-m, –mount[=file]：进入mount命令空间。如果指定了file，则进入file的命令空间<br>-u, –uts[=file]：进入uts命令空间。如果指定了file，则进入file的命令空间<br>-i, –ipc[=file]：进入ipc命令空间。如果指定了file，则进入file的命令空间<br>-n, –net[=file]：进入net命令空间。如果指定了file，则进入file的命令空间<br>-p, –pid[=file]：进入pid命令空间。如果指定了file，则进入file的命令空间<br>-U, –user[=file]：进入user命令空间。如果指定了file，则进入file的命令空间<br>-G, –setgid gid：设置运行程序的gid<br>-S, –setuid uid：设置运行程序的uid<br>-r, –root[=directory]：设置根目录<br>-w, –wd[=directory]：设置工作目录</p>\n<h5 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h5><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token comment\"># 获取容器的pid</span>\ndocker inspect alpine -f <span class=\"token string\">'&#123;&#123;.State.Pid&#125;&#125;'</span>\n\n<span class=\"token comment\"># 进入pid对应的namespace的ns命名空间，这时可以执行节点的ip addr命令查看对应pid的网络情况</span>\n<span class=\"token function\">sudo</span> nsenter --target <span class=\"token variable\">$PID</span> --net\n\n<span class=\"token comment\"># 等同于 docker exec</span>\nnsenter --target <span class=\"token variable\">$PID</span> --mount --uts --ipc --net --pid <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://man7.org/linux/man-pages/man1/nsenter.1.html\">https://man7.org/linux/man-pages/man1/nsenter.1.html</a><br><a href=\"https://staight.github.io/2019/09/23/nsenter%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/\">https://staight.github.io/2019/09/23/nsenter%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B/</a></p>\n","categories":["运维"]},{"title":"Logrotate","url":"/2020/12/14/Logrotate/","content":"<p>Linux系统随着时间日志越来越大，我们需要日志转储和处理以免导致磁盘爆满</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>logrotate是一个日志转储工具，centos默认安装并且根据策略每天执行一次</p>\n</blockquote>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><blockquote>\n<p>一般cnetos都是默认安装如果没有安装执行：</p>\n</blockquote>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">yum <span class=\"token function\">install</span> <span class=\"token function\">logrotate</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"常用参数\"><a href=\"#常用参数\" class=\"headerlink\" title=\"常用参数\"></a>常用参数</h4><ul>\n<li>-d 调试 logrotate -d /etc/logrotate.conf</li>\n<li>-f 强制运行 logrotate -f /etc/logrotate.conf</li>\n<li>-s 启动备用备用状态文件默认文件在<code>/var/lib/logrotate/logrotate.status</code></li>\n<li>-v 详细模式</li>\n<li>指定logrotate的状态文件 logrotate -vf –s /var/log/logrotate-status /etc/logrotate.conf 日志文件</li>\n</ul>\n<h4 id=\"默认运行机制\"><a href=\"#默认运行机制\" class=\"headerlink\" title=\"默认运行机制\"></a>默认运行机制</h4><blockquote>\n<p>crontab执行<code>/etc/cron.daily</code>下的<code>logrotate</code>脚本,由脚本调用logrotate执行配置目录和配置文件下的任务</p>\n</blockquote>\n<h4 id=\"配置解释\"><a href=\"#配置解释\" class=\"headerlink\" title=\"配置解释\"></a>配置解释</h4><blockquote>\n<p>配置文件在<code>/etc/logrotate.conf</code>配置目录在<code>/etc/logrotate.d/</code><br>logrotate.d目录防止其他程序的配置文件比如syslog</p>\n</blockquote>\n<h5 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h5><pre class=\"line-numbers language-conf\" data-language=\"conf\"><code class=\"language-conf\"># see &quot;man logrotate&quot; for details                                      # 详细情况执行&#96;man logrotate\n# rotate log files weekly                                              # 日志文件每周转储一次（全局配置）\nweekly\n\n# keep 4 weeks worth of backlogs                                       # 保存4个转储周期\nrotate 4\n\n# create new (empty) log files after rotating old ones                 # 转储模式为create\ncreate\n\n# use date as a suffix of the rotated file                             # 转储的文件以日期最为后缀\ndateext\n\n# uncomment this if you want your log files compressed                 # 是否压缩\ncompress\n\n# RPM packages drop log rotation information into this directory       # 导入配置目录\ninclude &#x2F;etc&#x2F;logrotate.d\n\n# system-specific logs may be also be configured here.\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"配置目录\"><a href=\"#配置目录\" class=\"headerlink\" title=\"配置目录\"></a>配置目录</h5><blockquote>\n<p>配置目录<code>syslog</code>为例：</p>\n</blockquote>\n<pre class=\"line-numbers language-conf\" data-language=\"conf\"><code class=\"language-conf\">&#x2F;var&#x2F;log&#x2F;cron\n&#x2F;var&#x2F;log&#x2F;maillog\n&#x2F;var&#x2F;log&#x2F;messages\n&#x2F;var&#x2F;log&#x2F;secure\n&#x2F;var&#x2F;log&#x2F;spooler\n&#x2F;var&#x2F;log&#x2F;kern.log   # 目标日志文件\n&#123;\n    daily           # 执行周期还可以填写weekly,monthly，yearly\n    missingok       # 转储时忽略日志错误\n    sharedscripts   # 运行postrotate脚本，作用是在所有日志都轮转后统一执行一次脚本。如果没有配置这个，那么每个日志轮转后都会执行一次脚本\n    postrotate      # 脚本开始\n        &#x2F;usr&#x2F;bin&#x2F;systemctl kill -s HUP rsyslog.service &gt;&#x2F;dev&#x2F;null 2&gt;&amp;1 || true\n    endscript       # 脚本结束<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"其他重要参数说明\"><a href=\"#其他重要参数说明\" class=\"headerlink\" title=\"其他重要参数说明\"></a>其他重要参数说明</h6><ul>\n<li>compress                   通过gzip压缩日志</li>\n<li>nocompress                 不做gzip压缩处理</li>\n<li>copytruncate               用于还在打开中的日志文件，把当前日志备份并截断；是先拷贝再清空的方式，拷贝和清空之间有一个时间差，可能会丢失部分日志数据。</li>\n<li>nocopytruncate             备份日志文件不过不截断</li>\n<li>create mode owner group    轮转时指定创建新文件的属性，如create 0777 nobody nobody</li>\n<li>nocreate                   不建立新的日志文件</li>\n<li>delaycompress              和compress 一起使用时，转储的日志文件到下一次转储时才压缩</li>\n<li>nodelaycompress            覆盖 delaycompress 选项，转储同时压缩。</li>\n<li>missingok                  如果日志丢失，不报错继续滚动下一个日志</li>\n<li>errors address             专储时的错误信息发送到指定的Email 地址</li>\n<li>ifempty                    即使日志文件为空文件也做轮转，这个是logrotate的缺省选项。</li>\n<li>notifempty                 当日志文件为空时，不进行轮转</li>\n<li>mail address               把转储的日志文件发送到指定的E-mail 地址</li>\n<li>nomail                     转储时不发送日志文件</li>\n<li>olddir directory           转储后的日志文件放入指定的目录，必须和当前日志文件在同一个文件系统</li>\n<li>noolddir                   转储后的日志文件和当前日志文件放在同一个目录下</li>\n<li>sharedscripts              运行postrotate脚本，作用是在所有日志都轮转后统一执行一次脚本。如果没有配置这个，那么每个日志轮转后都会执行一次脚本</li>\n<li>prerotate                  在logrotate转储之前需要执行的指令，例如修改文件的属性等动作；必须独立成行</li>\n<li>postrotate                 在logrotate转储之后需要执行的指令，例如重新启动 (kill -HUP) 某个服务！必须独立成行</li>\n<li>daily                      指定转储周期为每天</li>\n<li>weekly                     指定转储周期为每周</li>\n<li>monthly                    指定转储周期为每月</li>\n<li>rotate count               指定日志文件删除之前转储的次数，0 指没有备份，5 指保留5 个备份</li>\n<li>dateext                    使用当期日期作为命名格式</li>\n<li>dateformat .%s             配合dateext使用，紧跟在下一行出现，定义文件转储后的文件名，配合dateext使用，只支持 %Y %m %d %s 这四个参数</li>\n<li>size(或minsize) log-size   日志文件超过多少之后就转储，可以是 100 100K  100M 100G这都是有效的</li>\n</ul>\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://wsgzao.github.io/post/logrotate\">https://wsgzao.github.io/post/logrotate</a><br><a href=\"https://www.cnblogs.com/kevingrace/p/6307298.html\">https://www.cnblogs.com/kevingrace/p/6307298.html</a><br><code>man logrotate</code></p>\n","categories":["运维"],"tags":["log"]},{"title":"OSquery","url":"/2021/05/23/OSquery/","content":"<p>osquery是一个由FaceBook开源用于对系统进行查询、监控以及分析的一款软件，其最意思的地方是使用sql来查询系统的一些信息</p>\n<span id=\"more\"></span>\n\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><h5 id=\"macos\"><a href=\"#macos\" class=\"headerlink\" title=\"macos\"></a>macos</h5><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">brew <span class=\"token function\">install</span> --cask osquery<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"ubuntu\"><a href=\"#ubuntu\" class=\"headerlink\" title=\"ubuntu\"></a>ubuntu</h5><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">OSQUERY_KEY</span><span class=\"token operator\">=</span>1484120AC4E9F8A1A577AEEE97A80C63C9D8B80B\n<span class=\"token function\">sudo</span> apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys <span class=\"token variable\">$OSQUERY_KEY</span>\n<span class=\"token function\">sudo</span> add-apt-repository <span class=\"token string\">'deb [arch=amd64] https://pkg.osquery.io/deb deb main'</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> osquery<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"centos\"><a href=\"#centos\" class=\"headerlink\" title=\"centos\"></a>centos</h5><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token function\">curl</span> -L https://pkg.osquery.io/rpm/GPG <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token function\">tee</span> /etc/pki/rpm-gpg/RPM-GPG-KEY-osquery\n<span class=\"token function\">sudo</span> yum-config-manager --add-repo https://pkg.osquery.io/rpm/osquery-s3-rpm.repo\n<span class=\"token function\">sudo</span> yum-config-manager --enable osquery-s3-rpm-repo\n<span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> osquer<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h4><blockquote>\n<p>osquery存在两种运行模式，分别是osqueryi(交互式模式类似sqllite)、osqueryd(后台进程模式)。</p>\n</blockquote>\n<h5 id=\"osqueryi\"><a href=\"#osqueryi\" class=\"headerlink\" title=\"osqueryi\"></a>osqueryi</h5><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token comment\"># 进入交互模式</span>\nosqueryi<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>查看所有的表</p>\n</blockquote>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token punctuation\">.</span><span class=\"token keyword\">table</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<blockquote>\n<p>查看dns这个图表的所有内容</p>\n</blockquote>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token punctuation\">.</span><span class=\"token keyword\">all</span> dns_resolvers\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> dns_resolvers<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>查看dns这个图表的所有内容</p>\n</blockquote>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">dns_resolvers<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<blockquote>\n<p>查看表结构</p>\n</blockquote>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token punctuation\">.</span><span class=\"token keyword\">schema</span> dns_resolvers<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<blockquote>\n<p>设置显示模式</p>\n</blockquote>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token punctuation\">.</span>mod csv<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<blockquote>\n<p>查看帮助</p>\n</blockquote>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token punctuation\">.</span>help<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"常用sql\"><a href=\"#常用sql\" class=\"headerlink\" title=\"常用sql\"></a>常用sql</h5><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\"># 负载</span>\n<span class=\"token keyword\">select</span> period<span class=\"token punctuation\">,</span>average <span class=\"token keyword\">from</span> load_average<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\"># 内存</span>\n<span class=\"token keyword\">select</span> memory_total<span class=\"token punctuation\">,</span>memory_free<span class=\"token punctuation\">,</span>swap_cached<span class=\"token punctuation\">,</span>active <span class=\"token keyword\">from</span> memory_info<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\"># 磁盘</span>\n<span class=\"token keyword\">select</span> path<span class=\"token punctuation\">,</span><span class=\"token keyword\">type</span><span class=\"token punctuation\">,</span>blocks<span class=\"token punctuation\">,</span>blocks_free <span class=\"token keyword\">from</span> mounts <span class=\"token keyword\">where</span> blocks<span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\"># 查询监听0.0.0.0的进程的名字，端口和pid</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">DISTINCT</span> processes<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> listening_ports<span class=\"token punctuation\">.</span>port<span class=\"token punctuation\">,</span> processes<span class=\"token punctuation\">.</span>pid\n  <span class=\"token keyword\">FROM</span> listening_ports <span class=\"token keyword\">JOIN</span> processes <span class=\"token keyword\">USING</span> <span class=\"token punctuation\">(</span>pid<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">WHERE</span> listening_ports<span class=\"token punctuation\">.</span>address <span class=\"token operator\">=</span> <span class=\"token string\">'0.0.0.0'</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://osquery.io/\">https://osquery.io/</a></p>\n<p><a href=\"http://blog.spoock.com/2018/11/26/osquery-intro/\">Spoock’s Blog | osquery初识</a></p>\n","categories":["运维"]},{"title":"POD管理","url":"/2020/01/17/POD%E7%AE%A1%E7%90%86/","content":"<p>k8s pod常见操作</p>\n<span id=\"more\"></span>\n\n<h6 id=\"一键删除pod状态为Terminating的POD\"><a href=\"#一键删除pod状态为Terminating的POD\" class=\"headerlink\" title=\"一键删除pod状态为Terminating的POD\"></a>一键删除pod状态为Terminating的POD</h6><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">kubectl get pods <span class=\"token operator\">|</span><span class=\"token function\">grep</span> Terminating <span class=\"token operator\">|</span><span class=\"token function\">awk</span> -F <span class=\"token string\">\" \"</span> <span class=\"token string\">'&#123;print<span class=\"token variable\">$1</span>&#125;'</span><span class=\"token operator\">|</span><span class=\"token function\">xargs</span> -n <span class=\"token number\">1</span> kubectl delete pods --force --grace-period <span class=\"token number\">0</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h6 id=\"横向扩容\"><a href=\"#横向扩容\" class=\"headerlink\" title=\"横向扩容\"></a>横向扩容</h6><p>横向扩容有两种方式，使用命令或yaml文件</p>\n<h6 id=\"手动扩容\"><a href=\"#手动扩容\" class=\"headerlink\" title=\"手动扩容\"></a>手动扩容</h6><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">kubectl scale <span class=\"token operator\">&lt;</span>资源类型<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>资源名字<span class=\"token operator\">></span> --replicas <span class=\"token operator\">&lt;</span>副本数量<span class=\"token operator\">></span> 将pod的副本书保持到指定数量<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>例子：kubectl scale deployment webhook –replicas 2 将test的副本数扩容到2  </p>\n<p>自动横向扩容（HPA）</p>\n<h6 id=\"命令行\"><a href=\"#命令行\" class=\"headerlink\" title=\"命令行\"></a>命令行</h6><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">kubectl autoscale <span class=\"token operator\">&lt;</span>资源类型<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>资源名字<span class=\"token operator\">></span> --min<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>最小副本<span class=\"token operator\">></span> --max<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>最大副本<span class=\"token operator\">></span> --cpu-percent<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>CPU阈值<span class=\"token operator\">></span> -n <span class=\"token operator\">&lt;</span>namespace<span class=\"token operator\">></span>\n\nkubectl get hpa\n\nkubectl describe hpa <span class=\"token operator\">&lt;</span>hpa名字<span class=\"token operator\">></span>\n\nkubectl deleted hpa <span class=\"token operator\">&lt;</span>hpa名字<span class=\"token operator\">></span>  删除hpa<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"配置文件形式\"><a href=\"#配置文件形式\" class=\"headerlink\" title=\"配置文件形式\"></a>配置文件形式</h6><pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> autoscaling/v2beta1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> HorizontalPodAutoscaler\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> productpage<span class=\"token punctuation\">-</span>v1 <span class=\"token comment\"># hpa名字</span>\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> default\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">scaleTargetRef</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1beta1\n    <span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Deployment\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> productpage<span class=\"token punctuation\">-</span>v1\n  <span class=\"token key atrule\">minReplicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token key atrule\">maxReplicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8</span>\n  <span class=\"token key atrule\">metrics</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> Resource\n    <span class=\"token key atrule\">resource</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> memory\n      <span class=\"token key atrule\">targetAverageUtilization</span><span class=\"token punctuation\">:</span> <span class=\"token number\">50</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> Resource\n    <span class=\"token key atrule\">resource</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> cpu\n      <span class=\"token key atrule\">targetAverageUtilization</span><span class=\"token punctuation\">:</span> <span class=\"token number\">50</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","categories":["运维"],"tags":["k8s"]},{"title":"RPM包构建","url":"/2020/11/16/RPM%E5%8C%85%E6%9E%84%E5%BB%BA/","content":"<p>RPM（Redhat Package Manager）是Rhel，Centos，Fedora等系统的软件包管理格式</p>\n<span id=\"more\"></span>\n\n<h5 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h5><blockquote>\n<p>在centos等使用rpm的系统中安装</p>\n</blockquote>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">yum <span class=\"token function\">install</span> -y rpm-build rpmlint yum-utils rpmdevtools<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"生成目录结构\"><a href=\"#生成目录结构\" class=\"headerlink\" title=\"生成目录结构\"></a>生成目录结构</h5><p>初始化目录结构：</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">rpmdev-setuptree<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在<code>home</code>目录下生成目录结构如下</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">rpmbuild\n├── BUILD\n├── BUILDROOT\n├── RPMS\n├── SOURCES\n├── SPECS\n└── SRPMS<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<table>\n<thead>\n<tr>\n<th>目录位置</th>\n<th>宏代码</th>\n<th>说明</th>\n<th>用途</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>BUILD</td>\n<td>%_builddir</td>\n<td>编译目录</td>\n<td><code>%build</code>阶段在此目录执行编译</td>\n</tr>\n<tr>\n<td>BUILDROOT</td>\n<td>%_buildrootdir</td>\n<td>安装虚拟目录</td>\n<td><code>%install</code>阶段在此目录执行安装脚本</td>\n</tr>\n<tr>\n<td>RPMS</td>\n<td>%_rpmdir</td>\n<td>rpm目录</td>\n<td>生成的rpm包所在目录</td>\n</tr>\n<tr>\n<td>SOURCES</td>\n<td>%_sourcedir</td>\n<td>源码\b目录</td>\n<td>源码包目录,<code>%prep</code>阶段从此目录找需要解压的包</td>\n</tr>\n<tr>\n<td>SRPMS</td>\n<td>%_srcrpmdir</td>\n<td>源码rpm目录</td>\n<td>生成的rpm源码包所在目录</td>\n</tr>\n<tr>\n<td>SPECS</td>\n<td>%_specdir</td>\n<td>Spec目录</td>\n<td>spec文件存放的目录</td>\n</tr>\n</tbody></table>\n<h5 id=\"编写spec文件\"><a href=\"#编写spec文件\" class=\"headerlink\" title=\"编写spec文件\"></a>编写spec文件</h5><pre class=\"line-numbers language-spec\" data-language=\"spec\"><code class=\"language-spec\">%global debug_package %&#123;nil&#125;\n\nName:           &#123;&#123;.project&#125;&#125;\nVersion:        %&#123;_version&#125;\nRelease:        1%&#123;?dist&#125;\nSummary:        &#123;&#123;.ShortDescribe&#125;&#125;\n\nGroup:          Application&#x2F;WebServer\nLicense:        Apache 2.0\nURL:            http:&#x2F;&#x2F;www.baidu.com\nSource0:        %&#123;name&#125;.tar.gz\n\n# 构建依赖\nBuildRequires:  git\nBuildRequires:  make\n\n# 详细描述\n%description\n\n&#123;&#123;.LongDescribe&#125;&#125;\n\n# 构建之前执行的脚本，一般为解压缩将在source目录的压缩包解压到build目录\n%prep\n\n# %setup 不加任何选项，仅将软件包打开。\n# %setup -a 切换目录前，解压指定 Source 文件，例如 &quot;-a 0&quot; 表示解压 &quot;Source0&quot;\n# %setup -n newdir 将软件包解压在newdir目录。\n# %setup -c 解压缩之前先产生目录。\n# %setup -b num 将第 num 个 source 文件解压缩。\n# %setup -D 解压前不删除目录\n# %setup -T 不使用default的解压缩操作。\n# %setup -q 不显示解包过程\n# %setup -T -b 0 将第 0 个源代码文件解压缩。\n# %setup -c -n newdir 指定目录名称 newdir，并在此目录产生 rpm 套件。\n# %setup -q 不打印解压日志\n\n%setup -q -c -n src -a 0\n\n# 编译脚本\n%build\n\ncd &#123;&#123;.project&#125;&#125; &amp;&amp; make\n\n# 检查\n%check\n\n&#123;&#123;.project&#125;&#125;&#x2F;bin&#x2F;&#123;&#123;.project&#125;&#125; version\n\n# 安装脚本,将build目录产生的可执行文件复制到buildroot虚拟目录中\n%install\n\ninstall -D  -p  -m 0755 $&#123;RPM_BUILD_DIR&#125;&#x2F;src&#x2F;&#123;&#123;.project&#125;&#125;&#x2F;bin&#x2F;&#123;&#123;.project&#125;&#125; $&#123;RPM_BUILD_ROOT&#125;%&#123;_bindir&#125;&#x2F;&#123;&#123;.project&#125;&#125;\ninstall -D -m 0644 $&#123;RPM_BUILD_DIR&#125;&#x2F;src&#x2F;&#123;&#123;.project&#125;&#125;&#x2F;&#123;&#123;.project&#125;&#125;.service $&#123;RPM_BUILD_ROOT&#125;%&#123;_unitdir&#125;&#x2F;&#123;&#123;.project&#125;&#125;.service\n\n# 说明%&#123;buildroot&#125;中那些文件和目录需要打包到rpm中\n%files\n\n%&#123;_bindir&#125;&#x2F;&#123;&#123;.project&#125;&#125;\n%&#123;_unitdir&#125;&#x2F;&#123;&#123;.project&#125;&#125;.service\n\n# 变更记录\n%changelog<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>将上面的文件保存到<code>rpmbuild/SPECS</code>目录</p>\n<h5 id=\"构建\"><a href=\"#构建\" class=\"headerlink\" title=\"构建\"></a>构建</h5><p>将上面的spec文件保存为test.spec到<code>~/rpmbuild/SPECS/</code>中执行</p>\n<pre class=\"line-numbers language-sehll\" data-language=\"sehll\"><code class=\"language-sehll\">rpmbuild -ba ~&#x2F;rpmbuild&#x2F;SPECS&#x2F;test.spec<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>脚本如果没有问题的话在<code>~/rpmbuild/RPMS</code>目录下生成rpm文件<code>~/rpmbuild/SRPMS</code>为rpm源码包</p>\n<h6 id=\"常用选项\"><a href=\"#常用选项\" class=\"headerlink\" title=\"常用选项\"></a>常用选项</h6><ul>\n<li>-ba 表示构建二进制包和源码包</li>\n<li>-bb 只构建二进制包</li>\n<li>–clean 构建完成后清理</li>\n<li>–define=”k v” 定义spec中的变量</li>\n<li>–help 查看帮助</li>\n</ul>\n<h5 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h5><p><a href=\"https://www.cnblogs.com/michael-xiang/p/10480809.html\">https://www.cnblogs.com/michael-xiang/p/10480809.html</a><br><a href=\"https://www.cnblogs.com/jing99/p/9672295.html\">https://www.cnblogs.com/jing99/p/9672295.html</a></p>\n","categories":["运维"],"tags":["rpm"]},{"title":"SSH隧道","url":"/2020/11/12/SSH%E9%9A%A7%E9%81%93/","content":"<p>通过ssh端口转发，穿透内网或绕过防火墙，以及tcp流量加密保护</p>\n<span id=\"more\"></span>\n<h4 id=\"SSH隧道\"><a href=\"#SSH隧道\" class=\"headerlink\" title=\"SSH隧道\"></a>SSH隧道</h4><p>端口转发默认是开启如果没开启则需要<code>AllowTcpForwarding=yes</code></p>\n<h5 id=\"本地端口转发\"><a href=\"#本地端口转发\" class=\"headerlink\" title=\"本地端口转发\"></a>本地端口转发</h5><p><img src=\"/images/pasted-8.png\" alt=\"upload successful\"></p>\n<blockquote>\n<p>在192.168.1.1上执行下面的命令<br>通过192.168.1.2的22号端口将本地的3306端口代理到192.168.1.1的3306端口</p>\n</blockquote>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token function\">ssh</span> -g -f -N -L <span class=\"token number\">3306</span>:192.168.1.2:3306 root@172.16.1.2 -p <span class=\"token number\">22</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"远程端口转发\"><a href=\"#远程端口转发\" class=\"headerlink\" title=\"远程端口转发\"></a>远程端口转发</h5><p><img src=\"/images/pasted-9.png\" alt=\"upload successful\"></p>\n<blockquote>\n<p>在192.168.1.1上执行下面的命令<br>则表示将192.168.1.2的3306端口转发到1.1.1.1的3306端口上，这样1.1.1.1就能访问192.168.1.2上3306端口的服务了</p>\n</blockquote>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token function\">ssh</span> -f -N -R <span class=\"token number\">3306</span>:192.168.1.2:3306 root@1.1.1.1 -p <span class=\"token number\">22</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"本地转发和远程转发\"><a href=\"#本地转发和远程转发\" class=\"headerlink\" title=\"本地转发和远程转发\"></a>本地转发和远程转发</h5><p><code>ssh -f -N -&lt;L|R&gt; &lt;映射IP&gt;:&lt;映射端口&gt;:&lt;转发IP&gt;:&lt;转发端口&gt; &lt;服务账号&gt;@&lt;服务IP&gt; -p &lt;服务端口&gt;</code></p>\n<ul>\n<li>不管是本地转发和转成转都是转发端口</li>\n<li>远程和本地是相对于执行ssh隧道命令的位置来说的</li>\n<li>本地转发将映射端口映射到ssh客户端，也就是上面命令中的映射IP和映射端口在本地，映射IP可以省略默认为localhost且映射IP只能写本地拥有的IP，-g选项可以将绑定变为0.0.0.0,转发IP和转发端口则是服务端需要转发的地址和端口</li>\n<li>远程转发则将映射端口映射到ssh服务端，也就是将映射IP和映射端口放在了ssh服务端,转发ip和转发端口是通过ssh客户端执行的</li>\n</ul>\n<h5 id=\"选项解释\"><a href=\"#选项解释\" class=\"headerlink\" title=\"选项解释\"></a>选项解释</h5><ul>\n<li>“-L选项”：表示使用本地端口转发创建ssh隧道</li>\n<li>“-R选项”：表示使用远程端口转发创建ssh隧道</li>\n<li>“-N选项”：表示创建隧道以后不连接到sshServer端，通常与”-f”选项连用</li>\n<li>“-f选项”：表示在后台运行ssh隧道，通常与”-N”选项连用</li>\n<li>“-g选项”：表示ssh隧道对应的转发端口将监听在主机的所有IP中，不使用”-g选项”时，转发端口默认只监听在主机的本地回环地址中，”-g”表示开启网关模式，远程端口转发中，无法开启网关功能</li>\n</ul>\n","categories":["运维"],"tags":["ssh","内网穿透"]},{"title":"Syslog","url":"/2020/12/08/Syslog/","content":"<p>syslog是linux系统中常见得日志系统配合systemd-Journal使用</p>\n<span id=\"more\"></span>\n<p>rsyslogd是syslog的改进版本，可以将日志通过<code>syslog</code>协议发送到日志服务器</p>\n<h4 id=\"查看log\"><a href=\"#查看log\" class=\"headerlink\" title=\"查看log\"></a>查看log</h4><blockquote>\n<p><code>/var/log/</code>下各个文件,根据配置文件设置使用<code>grep</code>查找 <br>某些路径可以通过配置文件修改</p>\n</blockquote>\n<ul>\n<li>boot.log 系统启动日志</li>\n<li>message 包含整个系统的信息，mail, cron, daemon, kern, auth等相关的日志信息</li>\n<li>dmesg 开机启动内核缓冲日志，可以使用<code>dmesg</code>命令直接查看</li>\n<li>maillog mail.log 邮件服务日志</li>\n<li>yum.log yum安装的日志</li>\n<li>dnf.log centos8中使用dnf来代替yum</li>\n<li>cron crontab定时任务的日志</li>\n<li>btmp 尝试登录失败的信息，也可以使用<code>last -f /var/log/btmp</code></li>\n<li>wtmp 登录信息，使用<code>last -f /var/log/wtmp</code>查看</li>\n<li>lastlog 最近用户登录信息，不是文本文件使用命令<code>lastlog</code>直接查看</li>\n<li>spooler linux 新闻群组方面的日志，内容一般是空的</li>\n<li>sssd 系统守护进程安全日志</li>\n<li>tuned 系统调优工具tuned的日志</li>\n<li>anaconda.log 存储安装相关的信息</li>\n<li>journal systemd-journal日志，使用journalctl查看</li>\n</ul>\n<h4 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h4><blockquote>\n<p>syslog的配置目录在<code>/etc/rsyslog.conf</code>和<code>/etc/rsyslog.d/</code>之中，<code>/etc/rsyslog.conf</code>是默认配置的文件<br>下面以<code>centos8</code>为例解释</p>\n</blockquote>\n<pre class=\"line-numbers language-conf\" data-language=\"conf\"><code class=\"language-conf\">#### MODULES ####                                                                                      # 模块设置\n\nmodule(load&#x3D;&quot;imuxsock&quot; # provides support for local system logging (e.g. via logger command)           # 提供对本地命令支持如：logger\n       SysSock.Use&#x3D;&quot;off&quot;) # Turn off message reception via local log socket;                           # 关闭本地套接字接受\n# local messages are retrieved through imjournal now.                                                  # 从systemd-journal获取消息\nmodule(load&#x3D;&quot;imjournal&quot; # provides access to the systemd journal                                       \n       StateFile&#x3D;&quot;imjournal.state&quot;) # File to store the position in the journal                        #\n#module(load&#x3D;&quot;imklog&quot;) # reads kernel messages (the same are read from journald)                       # 读取内核消息，有一些来自journald\n#module(load&#x3D;&quot;immark&quot;) # provides --MARK-- message capability                                          # MARK消息\n\n# Provides UDP syslog reception                                                                        # 接受udp syslog消息\n# for parameters see http:&#x2F;&#x2F;www.rsyslog.com&#x2F;doc&#x2F;imudp.html\n#module(load&#x3D;&quot;imudp&quot;) # needs to be done just once                                                     # 只需要做一次\n#input(type&#x3D;&quot;imudp&quot; port&#x3D;&quot;514&quot;)\n\n# Provides TCP syslog reception                                                                        # 接受tpc syslog消息\n# for parameters see http:&#x2F;&#x2F;www.rsyslog.com&#x2F;doc&#x2F;imtcp.html\n#module(load&#x3D;&quot;imtcp&quot;) # needs to be done just once\n#input(type&#x3D;&quot;imtcp&quot; port&#x3D;&quot;514&quot;)\n\n#### GLOBAL DIRECTIVES ####                                                                            # 全局目录设置\n\n# Where to place auxiliary files                                                                       # 在那放辅助文件\nglobal(workDirectory&#x3D;&quot;&#x2F;var&#x2F;lib&#x2F;rsyslog&quot;)\n\n# Use default timestamp format                                                                         # 使用默认的时间戳格式\nmodule(load&#x3D;&quot;builtin:omfile&quot; Template&#x3D;&quot;RSYSLOG_TraditionalFileFormat&quot;)\n\n# Include all config files in &#x2F;etc&#x2F;rsyslog.d&#x2F;                                                          # 导入目录下的所有文件\ninclude(file&#x3D;&quot;&#x2F;etc&#x2F;rsyslog.d&#x2F;*.conf&quot; mode&#x3D;&quot;optional&quot;)\n\n#### RULES ####                                                                                        # 规则文件\n\n# Log all kernel messages to the console.                                                              # 收集内核日志到控制台\n# Logging much else clutters up the screen.                                                            # 日志太多会把屏幕弄乱\n#kern.*                                                 &#x2F;dev&#x2F;console\n\n# Log anything (except mail) of level info or higher.                                                  # 记录任何除了邮件的日志\n# Don&#39;t log private authentication messages!                                                           # 不要记录认真消息\n*.info;mail.none;authpriv.none;cron.none                &#x2F;var&#x2F;log&#x2F;messages\n\n# The authpriv file has restricted access.                                                             # 认证相关的消息存放的路径\nauthpriv.*                                              &#x2F;var&#x2F;log&#x2F;secure\n\n# Log all the mail messages in one place.                                                              # 所有的右键消息存放位置，- 表示异步因为数据库比较多\nmail.*                                                  -&#x2F;var&#x2F;log&#x2F;maillog\n\n\n# Log cron stuff                                                                                       # 定时任务的日志\ncron.*                                                  &#x2F;var&#x2F;log&#x2F;cron\n\n# Everybody gets emergency messages                                                                    # 记录所有的大于等于emerg级别信息, 以wall方式发送给每个登录到系统的人\n*.emerg                                                 :omusrmsg:*\n\n# Save news errors of level crit and higher in a special file.                                         # 记录uucp,news.crit等存放在&#x2F;var&#x2F;log&#x2F;spooler\nuucp,news.crit                                          &#x2F;var&#x2F;log&#x2F;spooler\n\n# Save boot messages also to boot.log                                                                  # 启动相关的消息\nlocal7.*                                                &#x2F;var&#x2F;log&#x2F;boot.log\n\n# ### sample forwarding rule ###                                                                       # 转发规则\n#action(type&#x3D;&quot;omfwd&quot;  \n# An on-disk queue is created for this action. If the remote host is                                   # 为此操作创建一个磁盘队列。 如果远程主机是down掉，消息被假脱机到磁盘，并在重新启动时发送。\n# down, messages are spooled to disk and sent when it is up again.\n#queue.filename&#x3D;&quot;fwdRule1&quot;       # unique name prefix for spool files                                  # 假脱机文件的唯一名称前缀\n#queue.maxdiskspace&#x3D;&quot;1g&quot;         # 1gb space limit (use as much as possible)                           # 最多1gb的空间(尽可能多的使用)\n#queue.saveonshutdown&#x3D;&quot;on&quot;       # save messages to disk on shutdown                                   # 关机是保存消息到磁盘\n#queue.type&#x3D;&quot;LinkedList&quot;         # run asynchronously                                                  # 使用链接列表模式\n#action.resumeRetryCount&#x3D;&quot;-1&quot;    # infinite retries if host is down                                    # 主机关机则无限重试\n# Remote Logging (we use TCP for reliable delivery)                                                    # 远程日志，（使用可靠的tcp）\n# remote_host is: name&#x2F;ip, e.g. 192.168.0.1, port optional e.g. 10514                                  # 远程机器是名字&#x2F;ip\n#Target&#x3D;&quot;remote_host&quot; Port&#x3D;&quot;XXX&quot; Protocol&#x3D;&quot;tcp&quot;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"常见操作\"><a href=\"#常见操作\" class=\"headerlink\" title=\"常见操作\"></a>常见操作</h4><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token comment\"># 查看状态</span>\nsystemctl status rsyslog\n<span class=\"token comment\"># 重启</span>\nsystemctl restart rsyslog\n<span class=\"token comment\"># 停止</span>\nsystemctl stop rsyslog<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://www.debugger.wiki/article/html/1563278670670182\">https://www.debugger.wiki/article/html/1563278670670182</a><br><a href=\"https://www.cnblogs.com/bonelee/p/9477544.html\">https://www.cnblogs.com/bonelee/p/9477544.html</a></p>\n","categories":["运维"],"tags":["日志"]},{"title":"kubectl多集群管理","url":"/2020/09/14/kubectl%E5%A4%9A%E9%9B%86%E7%BE%A4%E7%AE%A1%E7%90%86/","content":"<p>大部分情况我们不只一个k8s集群，这个时候我们需要快速的在各个集群之间进行切换。且省去每次都要申明namespace</p>\n<span id=\"more\"></span>\n<h4 id=\"使用kubectx\"><a href=\"#使用kubectx\" class=\"headerlink\" title=\"使用kubectx\"></a>使用kubectx</h4><p>kubectx是个可以快速的切换集群且能设置namespace的官方<a href=\"https://github.com/ahmetb/kubectx\">地址</a></p>\n<h5 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h5><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">brew <span class=\"token function\">install</span> kubectx<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>为了能够使用模糊推查找荐安装<a href=\"https://github.com/junegunn/fzf\">fzf</a></p>\n<h5 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h5><ul>\n<li>kubectx 可以看到所有环境，通过模糊查找可快速选择集群</li>\n<li>kubens 可以看到当前环境所有的namespace，可以快速选择NS，选择NS之后执行的命令就是在当前NS中执行了，比如执行kubectl get pods 显示的就是当前NS所有的pod，不需要加上-n xxxx</li>\n</ul>\n<h4 id=\"多集群的管理\"><a href=\"#多集群的管理\" class=\"headerlink\" title=\"多集群的管理\"></a>多集群的管理</h4><p>kubectx 所有解决了多个环境和命名空间的问题，但是没能解决快速添加集群<br>利用kubectl的环境变量拿到所有的环境然后通过<code>kubectl config view --raw</code>合并成为一个config文件，脚本如下：</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token shebang important\">#! /bin/bash</span>\n<span class=\"token comment\"># 合并$HOME/.kube/configs目录下的文件到$HOME/.kube/config</span>\n<span class=\"token comment\"># 配合kubectx工具进行环境切换</span>\n\n<span class=\"token assign-left variable\">CONFIGPATH</span><span class=\"token operator\">=</span><span class=\"token environment constant\">$HOME</span>/.kube/configs\n\n<span class=\"token assign-left variable\">FILEPATH</span><span class=\"token operator\">=</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">C</span> <span class=\"token keyword\">in</span> <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">ls</span> $CONFIGPATH/*yaml<span class=\"token variable\">`</span></span><span class=\"token punctuation\">;</span><span class=\"token keyword\">do</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"找到配置文件:\"</span><span class=\"token variable\">$C</span>\n    <span class=\"token assign-left variable\">FILEPATH</span><span class=\"token operator\">=</span><span class=\"token variable\">$FILEPATH</span><span class=\"token variable\">$C</span><span class=\"token builtin class-name\">:</span>\n<span class=\"token keyword\">done</span>\n\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">KUBECONFIG</span><span class=\"token operator\">=</span><span class=\"token variable\">$FILEPATH</span>\n\nkubectl config view --raw <span class=\"token operator\">></span> <span class=\"token environment constant\">$HOME</span>/.kube/config\n\n<span class=\"token builtin class-name\">unset</span> KUBECONFIG<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>添加集群就只需要把集群的config文件保存到<code>$HOME/.kube/configs</code>下，名字为xxx.yaml，然后执行脚本，删除同理只需要将该集群的yaml文件从<code>$HOME/.kube/configs</code>中移除在执行脚本</p>\n","categories":["运维"],"tags":["k8s"]},{"title":"kubectl格式化输出","url":"/2020/07/21/kubectl%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA/","content":"<p>有时候需要输出一些k8s的资源信息为一个表格比如统计资源你的数量</p>\n<span id=\"more\"></span>\n<p>将下面你的模板保存为template.txt</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">>></span> template.txt</span>\n名字       数量            保留内存              保留cpu        最大内存  最大cpu\nmetadata.name  spec.replicas   spec.template.spec.containers[*].resources.requests.memory  spec.template.spec.containers[*].resources.requests.memory   spec.template.spec.containers[*].resources.limits.memory  spec.template.spec.containers[*].resources.limits.cpu\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>然后执行</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">kubectl get deployment  -o custom-columns-file<span class=\"token operator\">=</span>template.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>除了用模板文件还可以用</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">kubectl get deployment  -o custom-columns<span class=\"token operator\">=</span>名字:.metadata.name,数量:.spec.replicas<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n","categories":["运维"],"tags":["k8s"]},{"title":"基于web的远程客户端Apache Guacamole","url":"/2020/10/29/%E5%9F%BA%E4%BA%8Eweb%E7%9A%84%E8%BF%9C%E7%A8%8B%E5%AE%A2%E6%88%B7%E7%AB%AFApache-Guacamole/","content":"<p>Apache Guacamole是一个基于web的远程终端支持ssh,vnc,rdp等协议</p>\n<span id=\"more\"></span>\n\n<h4 id=\"架构图如下\"><a href=\"#架构图如下\" class=\"headerlink\" title=\"架构图如下\"></a>架构图如下</h4><p>官网地址：<a href=\"http://guacamole.apache.org/\">http://guacamole.apache.org</a></p>\n<p><img src=\"/images/pasted-4.png\" alt=\"guac-arch\"></p>\n<blockquote>\n<p>从图中可看出分为guacamole服务和guacd服务，guacd服务负责连接远程的vpc，rdp，ssh等服务器</p>\n</blockquote>\n<h4 id=\"安装部署\"><a href=\"#安装部署\" class=\"headerlink\" title=\"安装部署\"></a>安装部署</h4><p>这里使用k8s部署，注意本安装仅用于测试使用，由于mysql没做持久化重启之后数据会丢失</p>\n<h5 id=\"部署guacamole\"><a href=\"#部署guacamole\" class=\"headerlink\" title=\"部署guacamole\"></a>部署guacamole</h5><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">|</span> kubectl apply -f -</span>\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: guacamole\nspec:\n  selector:\n    matchLabels:\n      app: guacamole\n  template:\n    metadata:\n      labels:\n        app: guacamole\n    spec:\n      containers:\n      - env:\n        - name: GUACD_HOSTNAME # guacd地址\n          value: guacamole-guacd\n        - name: MYSQL_DATABASE # mysql数据库\n          value: guacamole\n        - name: MYSQL_HOSTNAME # mysql地址\n          value: guacamole-mysql\n        - name: MYSQL_PASSWORD # mysql密码\n          value: root\n        - name: MYSQL_USER # mysql用户\n          value: root\n        image: guacamole/guacamole:latest # 这里使用了最新版\n        name: guacamole\n        ports:\n        - containerPort: 8080\n          name: 8080tcp02\n          protocol: TCP\n        resources: &#123;&#125;\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: guacamole\nspec:\n  ports:\n  - port: 8080\n    protocol: TCP\n    targetPort: 8080\n  selector:\n    app: guacamole\n  type: NodePort # 使用nodeport进行访问，也可以用ingress\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"部署guacd\"><a href=\"#部署guacd\" class=\"headerlink\" title=\"部署guacd\"></a>部署guacd</h5><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">|</span> kubectl apply -f -</span>\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: guacamole-guacd\nspec:\n  selector:\n    matchLabels:\n      app: guacamole-guacd\n  template:\n    metadata:\n      labels:\n        app: guacamole-guacd\n    spec:\n      containers:\n      - name: guacamole-guacd\n        image: guacamole/guacd:latest\n        resources: &#123;&#125;\n        ports:\n        - containerPort: 4822\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: guacamole-guacd\nspec:\n  selector:\n    app: guacamole-guacd\n  ports:\n  - port: 4822\n    targetPort: 4822\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"部署mysql\"><a href=\"#部署mysql\" class=\"headerlink\" title=\"部署mysql\"></a>部署mysql</h5><blockquote>\n<p>mysql可以使用已经有的,且以下资源未做持久化重启之后数据会丢失不要用于生产！！！</p>\n</blockquote>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">|</span> kubectl apply -f -</span>\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: guacamole-mysql\nspec:\n  selector:\n    matchLabels:\n      app: guacamole-mysql\n  template:\n    metadata:\n      labels:\n        app: guacamole-mysql\n    spec:\n      containers:\n      - name: guacamole-mysql\n        image: mysql:latest\n        env:\n        - name: MYSQL_ROOT_PASSWORD\n          value: root\n        resources: &#123;&#125;\n        ports:\n        - containerPort: 3306\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: guacamole-mysql\nspec:\n  selector:\n    app: guacamole-mysql\n  ports:\n  - port: 3306\n    targetPort: 3306\nEOF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"初始化mysql\"><a href=\"#初始化mysql\" class=\"headerlink\" title=\"初始化mysql\"></a>初始化mysql</h5><ol>\n<li><p>将guacamole的Entrypoint改为<code>sleep 1h</code>以方便进入容器</p>\n</li>\n<li><p>容器里执行<code>/opt/guacamole/bin/initdb.sh --mysql &gt; initdb.sql</code> 导出mysql的表结构</p>\n</li>\n<li><p><code>apt update &amp;&amp; apt install mysql-client</code>安装mysql客户端</p>\n</li>\n<li><p><code>mysql -h guacamole-mysql -uroot -proot</code>登录mysql数据库</p>\n<ul>\n<li>如果出现 ERROR 2059 (HY000): Authentication plugin ‘caching_sha2_password’ cannot be loaded 错误则需要在guacamole-mysql容器里登录数据库执行<br><code>ALTER USER &#39;root&#39;@&#39;%&#39; IDENTIFIED WITH mysql_native_password BY &#39;root&#39;;</code></li>\n</ul>\n</li>\n<li><p><code>create database guacamole;</code> 创建数据库</p>\n</li>\n<li><p><code>use guacamole;</code> 进入数据库， <code>source initdb.sql</code>导入表结构</p>\n</li>\n</ol>\n<h5 id=\"登录\"><a href=\"#登录\" class=\"headerlink\" title=\"登录\"></a>登录</h5><ul>\n<li>因为是nodeport所有可以使用 &lt;nodePort&gt;/guacamole</li>\n<li>默认账号密码为guacadmin/guacadmin</li>\n</ul>\n<h5 id=\"添加链接\"><a href=\"#添加链接\" class=\"headerlink\" title=\"添加链接\"></a>添加链接</h5><p><img src=\"/images/pasted-5.png\" alt=\"upload successful\"></p>\n<p>进入配置界面配置根据目标主机的情况填写</p>\n<p><img src=\"/images/pasted-6.png\" alt=\"upload successful\"></p>\n<p>这个时候首页就出现了可以连接的机器，点击即可连接此机器</p>\n<p><img src=\"/images/pasted-7.png\" alt=\"upload successful\"></p>\n<p>Ctrl + Alt + Shift 可以打开控制面板，复制文件也可以直接拖进去</p>\n","categories":["运维"],"tags":["终端"]},{"title":"部署Rancher","url":"/2020/11/02/%E9%83%A8%E7%BD%B2Rancher/","content":"<p>rancer是一个多k8s集群管理工具</p>\n<span id=\"more\"></span>\n\n<h5 id=\"在k8s集群里安装\"><a href=\"#在k8s集群里安装\" class=\"headerlink\" title=\"在k8s集群里安装\"></a>在k8s集群里安装</h5><blockquote>\n<p>直接部署在k8s中具备高可用 <br>中文官方<a href=\"https://www.rancher.cn/\">https://www.rancher.cn</a>英文官网<a href=\"https://rancher.com/\">https://rancher.com</a></p>\n</blockquote>\n<h6 id=\"rancher需要cert-manager\"><a href=\"#rancher需要cert-manager\" class=\"headerlink\" title=\"rancher需要cert-manager\"></a>rancher需要cert-manager</h6><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token comment\"># 添加helm仓库</span>\nhelm repo <span class=\"token function\">add</span> jetstack https://charts.jetstack.io\n\n<span class=\"token comment\"># 更新仓库</span>\nhelm repo update\n\n<span class=\"token comment\"># 创建cert-manager的namespace</span>\nkubectl create namespace cert-manager\n\n<span class=\"token comment\"># 使用helm安装cert-manager</span>\nhelm <span class=\"token function\">install</span> <span class=\"token punctuation\">\\</span>\n cert-manager jetstack/cert-manager <span class=\"token punctuation\">\\</span>\n --namespace cert-manager <span class=\"token punctuation\">\\</span>\n --version v1.0.3 <span class=\"token punctuation\">\\</span>\n --set <span class=\"token assign-left variable\">installCRDs</span><span class=\"token operator\">=</span>true<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"使用helm安装rancher\"><a href=\"#使用helm安装rancher\" class=\"headerlink\" title=\"使用helm安装rancher\"></a>使用helm安装rancher</h6><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token comment\"># 添加rancher的repo仓库，这里是用latest，生产环境推荐使用stable，尝鲜使用alpha</span>\nhelm repo <span class=\"token function\">add</span> rancher-latest http://rancher-mirror.oss-cn-beijing.aliyuncs.com/server-charts/latest\n\n<span class=\"token comment\"># 为rancher创建namespace</span>\nkubectl create namespace cattle-system\n\n<span class=\"token comment\"># 安装rancher</span>\nhelm <span class=\"token function\">install</span> rancher rancher-latest/rancher <span class=\"token punctuation\">\\</span>\n --namespace cattle-system <span class=\"token punctuation\">\\</span>\n --set <span class=\"token assign-left variable\">hostname</span><span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>域名<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"单节点安装\"><a href=\"#单节点安装\" class=\"headerlink\" title=\"单节点安装\"></a>单节点安装</h5><blockquote>\n<p>作为一个单独的程序管理其他的集群</p>\n</blockquote>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">docker run -d --restart<span class=\"token operator\">=</span>unless-stopped <span class=\"token punctuation\">\\</span>\n  -p <span class=\"token number\">80</span>:80 -p <span class=\"token number\">443</span>:443 <span class=\"token punctuation\">\\</span>\n  -v /data/rancher:/var/lib/rancher/ <span class=\"token punctuation\">\\</span>\n  -v /data/rancher/log/auditlog:/var/log/auditlog <span class=\"token punctuation\">\\</span>\n  -e <span class=\"token assign-left variable\">CATTLE_SYSTEM_CATALOG</span><span class=\"token operator\">=</span>bundled <span class=\"token punctuation\">\\</span>\n  -e <span class=\"token assign-left variable\">AUDIT_LEVEL</span><span class=\"token operator\">=</span><span class=\"token number\">3</span> <span class=\"token punctuation\">\\</span>\n rancher/rancher:stable --no-cacerts<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","categories":["运维"],"tags":["k8s","rancher"]},{"title":"Ansible基本使用","url":"/2020/12/16/Ansible%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/","content":"<p>Ansible是一个自动化运维工具，可以实现批量配置，部署，命令等功能</p>\n<span id=\"more\"></span>\n\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><p>yum 安装</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">yum -y <span class=\"token function\">install</span> ansible<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>pip安装</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">pip <span class=\"token function\">install</span> ansible<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"配置路径\"><a href=\"#配置路径\" class=\"headerlink\" title=\"配置路径\"></a>配置路径</h4><p>默认读取<code>/etc/ansible/</code>目录下的<code>主机清单</code>和<code>规则</code></p>\n<h4 id=\"主机清单\"><a href=\"#主机清单\" class=\"headerlink\" title=\"主机清单\"></a>主机清单</h4><blockquote>\n<p>记录ansible需要执行操作的目标机器文件，默认读取<code>/etc/ansible/hosts</code>，一般通过 <code>-i</code>参数指定,也可以分类写到一个文件夹下</p>\n</blockquote>\n<ul>\n<li>#开头为注释</li>\n<li>忽略空行</li>\n<li>组由[组名]定义</li>\n<li>主机名和域名都可以</li>\n<li>一个ip或域名可以是组的成员</li>\n<li>没有分组的主机写在任意的一个组的前面</li>\n</ul>\n<h5 id=\"连续IP\"><a href=\"#连续IP\" class=\"headerlink\" title=\"连续IP\"></a>连续IP</h5><pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\"><span class=\"token comment\"># 等价于 192.168.1.1 192.168.1.2 192.168.1.2 192.168.1.3 192.168.1.4等等</span>\n192.168.1.[1:4]\n\n<span class=\"token comment\"># 等价于 server1.example.com server2.example.com server3.example.com等等</span>\nserver[1:3].example.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"参数\"></a>参数</h5><pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\">192.168.1.1 ansible_ssh_user<span class=\"token attr-value\"><span class=\"token punctuation\">=</span>root ansible_ssh_pass=root</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h6 id=\"常用参数\"><a href=\"#常用参数\" class=\"headerlink\" title=\"常用参数\"></a>常用参数</h6><ul>\n<li>ansible_ssh_host              目标主机地址</li>\n<li>ansible_ssh_port              目标主机端口，默认22</li>\n<li>ansible_ssh_user              目标主机用户</li>\n<li>ansible_ssh_pass              目标主机ssh密码</li>\n<li>ansible_sudo_pass             sudo密码</li>\n<li>ansible_sudo_exe</li>\n<li>ansible_connection            与主机的连接类型，比如：local,ssh或者paramiko</li>\n<li>ansible_ssh_private_key_file  私钥地址</li>\n<li>ansible_shell_type            目标系统的shell类型</li>\n<li>ansible_python_interpreter    python版本</li>\n</ul>\n<h5 id=\"别名\"><a href=\"#别名\" class=\"headerlink\" title=\"别名\"></a>别名</h5><pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\">test1 ansible_ssh_port<span class=\"token attr-value\"><span class=\"token punctuation\">=</span>22 ansible_ssh_host=192.168.1.1 ansible_ssh_user=root  　　# 别名test1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"主机组\"><a href=\"#主机组\" class=\"headerlink\" title=\"主机组\"></a>主机组</h5><pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\"><span class=\"token selector\">[foo]</span>\n192.168.1.1\n192.168.2.1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"主机组嵌套\"><a href=\"#主机组嵌套\" class=\"headerlink\" title=\"主机组嵌套\"></a>主机组嵌套</h5><pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\"><span class=\"token selector\">[db]</span>\n192.168.1.1\n\n<span class=\"token selector\">[server]</span>\n192.168.2.1\n\n<span class=\"token selector\">[all:children]</span>\ndb\nserver<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"主机组参数\"><a href=\"#主机组参数\" class=\"headerlink\" title=\"主机组参数\"></a>主机组参数</h5><pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\"><span class=\"token selector\">[test]</span>\nname1 ansible_ssh_host<span class=\"token attr-value\"><span class=\"token punctuation\">=</span>192.168.1.[1:3]</span>\n\n<span class=\"token selector\">[test:vars]</span>\n<span class=\"token constant\">ansible_ssh_user</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>root</span>\n<span class=\"token constant\">ansible_ssh_pass</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>\"root\"</span>\n<span class=\"token constant\">testvar</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>\"test\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"模块\"><a href=\"#模块\" class=\"headerlink\" title=\"模块\"></a>模块</h4><blockquote>\n<p>ansible的功能都是通过模块来完成的 <br><code>ansible-doc -s &lt;模块名&gt;</code>查看模块的参数 <br><code>ansible-doc -l</code> 查看所有模块</p>\n</blockquote>\n<h5 id=\"常用模块\"><a href=\"#常用模块\" class=\"headerlink\" title=\"常用模块\"></a>常用模块</h5><blockquote>\n<p>参数中的<code>free_form</code>是各个模块的命令或args，并不是一个存在的参数</p>\n</blockquote>\n<h6 id=\"command\"><a href=\"#command\" class=\"headerlink\" title=\"command\"></a>command</h6><blockquote>\n<p>在目标主机上执行命令</p>\n</blockquote>\n<ul>\n<li>参数：<ul>\n<li>free_form              必选表在目标机器上执行的命令</li>\n<li>chdir                  在目标主机的哪里执行命令</li>\n<li>creates                文件存在时就不执行此命令</li>\n<li>removes                和creates相反存在时就执行</li>\n</ul>\n</li>\n<li>例子：ansible test -m command -a “chdir=/var/log removes=kern.log cat kern.log” /var/log下kern.log存在就查看kern.log</li>\n</ul>\n<h6 id=\"shell\"><a href=\"#shell\" class=\"headerlink\" title=\"shell\"></a>shell</h6><blockquote>\n<p>和command一样不过command不支持重定向等管道操作，shell会调用<code>/bin/sh</code>执行</p>\n</blockquote>\n<ul>\n<li>参数：  <ul>\n<li>free_form:             执行的命令</li>\n<li>chdir:                 改变运行执行的目录</li>\n<li>creates:               文件存在则不就不执行命令</li>\n<li>executable:            改变命令说用的shell解释器，默认为/bin/sh</li>\n<li>removes:               和creates相反存在时就执行</li>\n</ul>\n</li>\n<li>例子：ansible  test -m shell -a “cat /etc/hosts”</li>\n</ul>\n<h6 id=\"script\"><a href=\"#script\" class=\"headerlink\" title=\"script\"></a>script</h6><blockquote>\n<p>在目标主机上执行本地主机的脚本</p>\n</blockquote>\n<ul>\n<li>参数：<ul>\n<li>free_form:             需要执行的脚本路径</li>\n<li>chdir:                 执行脚本的目录</li>\n<li>creates:               目标机器的文件存在则不执行</li>\n<li>removes:               目标机器的文件存在则不执行</li>\n</ul>\n</li>\n<li>例子： ansible test -m script -a “test.sh”</li>\n</ul>\n<h6 id=\"copy\"><a href=\"#copy\" class=\"headerlink\" title=\"copy\"></a>copy</h6><blockquote>\n<p>复制本地文件或文件夹到目标主机上</p>\n</blockquote>\n<ul>\n<li>参数：<ul>\n<li>src：                   指定需要copy的文件或目录</li>\n<li>dest：                  文件将被拷贝到目标主机的哪个目录中，dest为必须参数</li>\n<li>content                 不适用src时用此参数写入内容</li>\n<li>force:                  目标主机路径已经有文件且内容不相同时是否覆盖</li>\n<li>backup:                 目标主机已经有文件且内容不同时是否备份</li>\n<li>owner:                  拷贝到目标主机后的所有者</li>\n<li>group:                  拷贝到目标主机后的属组</li>\n<li>mode:                   拷贝到目标主机后的权限</li>\n</ul>\n</li>\n<li>例子： ansible test -m copy -a “src=/root/test.sh dest=/tmp”</li>\n</ul>\n<h6 id=\"file\"><a href=\"#file\" class=\"headerlink\" title=\"file\"></a>file</h6><blockquote>\n<p>对目标主机的文件管理</p>\n</blockquote>\n<ul>\n<li>参数：<ul>\n<li>path：                  指定目标目录或文件</li>\n<li>state：<ul>\n<li>directory：           如果目录不存在，创建目录</li>\n<li>file：                即使文件不存在，也不会被创建</li>\n<li>link：                创建软连接</li>\n<li>hard：                创建硬连接</li>\n<li>touch：               如果文件不存在，则会创建一个新的文件，如果文件或目录已存在，则更新其最后修改时</li>\n<li>absent：              删除目录、文件或者取消链接文</li>\n</ul>\n</li>\n<li>src：                   当state设置为link或者hard时，需要操作的源文件</li>\n<li>force:                  需要在两种情况下强制创建软连接，一种是源文件不存在但之后会建立的情况下；另一种是目标连接已存在，需要先取消之前的软连接，有两个选项：yes|no</li>\n<li>owner：                 指定被操作文件的所有者，</li>\n<li>group：                 指定被操作文件的所属组</li>\n<li>mode：                  权限</li>\n<li>recurse：               文件为目录时，递归目录</li>\n</ul>\n</li>\n<li>例子：<ul>\n<li>设置权限为777所属组为minikube所有者为：ansible test -m file -a “path=/tmp/test.sh  mode=777 owner=minikube group=minikube”</li>\n<li>创建<code>/etc/hosts</code>的软连接到home目录：ansible test -m file -a “path=/root/hosts  src=/etc/hosts state=link”</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"blockinfile\"><a href=\"#blockinfile\" class=\"headerlink\" title=\"blockinfile\"></a>blockinfile</h6><blockquote>\n<p>在指定的文件里修改一段文本</p>\n</blockquote>\n<ul>\n<li>参数：<ul>\n<li>path：                 必须参数，指定要操作的文件</li>\n<li>block：                指定要操作的一段文本</li>\n<li>marker：               ansibel默认修改时会添加一个以#开头标记，可以改为自定义</li>\n<li>state:                 present为插入或者更新;absent删除</li>\n<li>insertafter：          默认会将文本插入到指定的位置的后面</li>\n<li>insertbefore：         默认会将文本插入到指定的位置的前面</li>\n<li>backup：               是否在修改文件之前对文件进行备份。</li>\n<li>create：               当要操作的文件并不存在时，是否创建对应的文件。</li>\n</ul>\n</li>\n<li>例子：<ul>\n<li>在目标主机的/tmp/test文件中插入ansible-test且标记内容为teststart：ansible localhost -m blockinfile -a “path=/tmp/test block=ansible-test marker=’#{mark}teststart’”</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"lineinfile\"><a href=\"#lineinfile\" class=\"headerlink\" title=\"lineinfile\"></a>lineinfile</h6><blockquote>\n<p>和<code>blockinfile</code>相似不过是一行还可以使用正则表达式</p>\n</blockquote>\n<ul>\n<li>参数：<ul>\n<li>path：                  必须参数，指定要操作的文件</li>\n<li>line:                   要指定的文本内容</li>\n<li>regexp：                正则匹配对应的行，当替换文本时，如果有多行文本都能被匹配，则只有最后面被匹配到的那行文本才会被替换，当删除文本时，如果有多行文本都能被匹配，这么这些行都会被删除</li>\n<li>state：                 absent为删除，state的默认值为present</li>\n<li>backrefs：              在使用正则匹配时如果没有匹配到默认会在文件的末尾插入要替换的文本，设置为yes则不会</li>\n<li>insertafter：           默认会将文本插入到指定的位置的后面</li>\n<li>insertbefore：          默认会将文本插入到指定的位置的前面</li>\n<li>backup：                是否在修改文件之前对文件进行备份</li>\n<li>create：                当要操作的文件并不存在时，是否创建对应的文件</li>\n</ul>\n</li>\n<li>例子：<ul>\n<li>将/tmp/test的文件中#kern开头行换成kern.* /var/log/kern.log:ansible localhost -m lineinfile -a ‘path=/tmp/test regexp=”^#kern” line=”kern.* /var/log/kern.log”‘</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"replace\"><a href=\"#replace\" class=\"headerlink\" title=\"replace\"></a>replace</h6><blockquote>\n<p>文本替换模块</p>\n</blockquote>\n<ul>\n<li>参数：<ul>\n<li>path：                 必须参数，指定要操作的文件，2.3版本之前，只能使用dest, destfile, name指定要操作的文件，2.4版本中，仍然可以使用这些参数名，这些参数名作为path参数的别名使用。</li>\n<li>regexp:                必须参数，指定一个python正则表达式，文件中与正则匹配的字符串将会被替换。</li>\n<li>replace：              指定最终要替换成的字符串。</li>\n<li>backup：               是否在修改文件之前对文件进行备份，最好设置为yes。</li>\n</ul>\n</li>\n<li>例子：将/etc/test文件中所有的<code>localhost</code>换成<code>FOO</code>: ansible localhost -m replace -a ‘path=/tmp/test  regexp=”localhost” replace=foo’</li>\n</ul>\n<h6 id=\"systemd\"><a href=\"#systemd\" class=\"headerlink\" title=\"systemd\"></a>systemd</h6><blockquote>\n<p>运行systemd相关的命令</p>\n</blockquote>\n<ul>\n<li>参数：<ul>\n<li>enabled:               是否设置为开机启动</li>\n<li>name:                  systemd模块名字</li>\n<li>state:                 想要设置的状态，比如<code>restartd</code>重启<code>started</code>启动、<code>stopped</code>停止、<code>reloaded</code>重新加载</li>\n<li>daemon_reload:         运行daemon-reload命令</li>\n<li>daemon_reexec:         运行daemon_reexec命令</li>\n</ul>\n</li>\n<li>例子：ansible test -m systemd -a “name=rsyslog state=restarted”</li>\n</ul>\n<h6 id=\"yum\"><a href=\"#yum\" class=\"headerlink\" title=\"yum\"></a>yum</h6><blockquote>\n<p>yum包管理</p>\n</blockquote>\n<ul>\n<li>参数：<ul>\n<li>action: yum</li>\n<li>conf_file              yum的配置文件</li>\n<li>disable_gpg_check      关闭gpg_check</li>\n<li>disablerepo            不启用某个源</li>\n<li>enablerepo             启用某个源</li>\n<li>name                   指定要安装的包，如果有多个版本需要指定版本，否则安装最新的包</li>\n<li>state                  安装:<code>present</code>，安装最新版:<code>latest</code>，卸载程序包:<code>absent</code></li>\n</ul>\n</li>\n<li>例子: 安装最新版psree命令：ansible localhost -m yum -a “name=psmisc state=latest”</li>\n</ul>\n<h6 id=\"cron\"><a href=\"#cron\" class=\"headerlink\" title=\"cron\"></a>cron</h6><blockquote>\n<p>定时模块</p>\n</blockquote>\n<ul>\n<li>参数：<ul>\n<li>backup                 如果设置，创建一个crontab备份</li>\n<li>cron_file              如果指定, 使用这个文件cron.d，而不是单个用户crontab</li>\n<li>day                    日应该运行的工作( 1-31, *, */2, etc )</li>\n<li>hour                   小时 ( 0-23, *, */2, etc )</li>\n<li>job                    指明运行的命令是什么</li>\n<li>minute                 分钟( 0-59, *, */2, etc )</li>\n<li>month                  月( 1-12, *, */2, etc )</li>\n<li>name                   定时任务描述</li>\n<li>reboot                 任务在重启时运行，不建议使用，建议使用special_time</li>\n<li>special_time           特殊的时间范围，参数：reboot（重启时）,annually（每年）,monthly（每月）,weekly（每周）,daily（每天）,hourly（每小时）</li>\n<li>state                  指定状态，默认<code>prsent</code>添加定时任务，<code>absent</code>删除定时任务</li>\n<li>user                   以哪个用户的身份执行</li>\n<li>weekday                周 ( 0-6 for Sunday-Saturday, *, etc )</li>\n</ul>\n</li>\n<li>例子：<ul>\n<li>每天8点半执行cat /etc/hosts这个命令：ansible localhost -m cron -a “name=test minute=30 hour=8 day=* job=’cat /etc/hosts’”</li>\n<li>删除test这个cronjob：ansible localhost -m cron -a “name=test state=absent”</li>\n<li>重启时rm -rf /tmp命令： ansible test -m cron -a ‘name=”test” special_time=reboot job=”rm -rf /tmp”‘</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"执行命令\"><a href=\"#执行命令\" class=\"headerlink\" title=\"执行命令\"></a>执行命令</h4><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token comment\"># ansible &lt;主机> -m &lt;模块> -a &lt;模块参数></span>\nansible <span class=\"token operator\">&lt;</span>主机<span class=\"token operator\">></span> -m shell -a <span class=\"token string\">\"cat /etc/hosts\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h5 id=\"指定某些机器执行\"><a href=\"#指定某些机器执行\" class=\"headerlink\" title=\"指定某些机器执行\"></a>指定某些机器执行</h5><p>ansbile &lt;主机组&gt; -m &lt;模块&gt; -a &lt;参数&gt; –limit &lt;主机&gt;  指定执行主机<br>ansbile &lt;主机组&gt; -m &lt;模块&gt; -a &lt;参数&gt; –limit &lt;!主机&gt; 排除执行的主机<br>ansbile &lt;主机组&gt; -m &lt;模块&gt; -a &lt;参数&gt; –limit &lt;主机1：主机2&gt; 只在主机1和主机2中执行</p>\n<h5 id=\"一步一步的执行且确认\"><a href=\"#一步一步的执行且确认\" class=\"headerlink\" title=\"一步一步的执行且确认\"></a>一步一步的执行且确认</h5><p>在执行 剧本的时候加上 –step，每执行一个任务就询问一次</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">ansible-playbook  -i inventories test.yaml --step<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"playbook\"><a href=\"#playbook\" class=\"headerlink\" title=\"playbook\"></a>playbook</h4><blockquote>\n<p>剧本就是一系列ansible命令组合类似shell脚本和shell命令</p>\n</blockquote>\n<p>一个将内核日志输出到/var/log/kern.log的剧本</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> all                 <span class=\"token comment\"># 要执行的主机组</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 修改rsyslog配置文件 <span class=\"token comment\"># 任务名字</span>\n    <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> rsyslog            <span class=\"token comment\"># 任务标签</span>\n    <span class=\"token key atrule\">lineinfile</span><span class=\"token punctuation\">:</span>              <span class=\"token comment\"># 任务模块</span>\n       <span class=\"token key atrule\">dest</span><span class=\"token punctuation\">:</span> /etc/rsyslog.conf\n       <span class=\"token key atrule\">regexp</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123; item.regexp &#125;&#125;\"</span>\n       <span class=\"token key atrule\">line</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123; item.line &#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_items</span><span class=\"token punctuation\">:</span>              <span class=\"token comment\"># 循环执行</span>\n     <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token key atrule\">regexp</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'^#kern'</span><span class=\"token punctuation\">,</span><span class=\"token key atrule\">line</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'kern.* /var/log/kern.log'</span> <span class=\"token punctuation\">&#125;</span>\n     <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token key atrule\">regexp</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'^#\\$ModLoad imklog'</span><span class=\"token punctuation\">,</span><span class=\"token key atrule\">line</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'$ModLoad imklog'</span> <span class=\"token punctuation\">&#125;</span>\n     <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token key atrule\">regexp</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'^#\\$ModLoad imjournal'</span><span class=\"token punctuation\">,</span><span class=\"token key atrule\">line</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'$ModLoad imjournal'</span> <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 修改logrotate的syslog配置\n    <span class=\"token key atrule\">shell</span><span class=\"token punctuation\">:</span> sed <span class=\"token punctuation\">-</span>i '1i\\\\/var\\/log\\/kern.log' /etc/logrotate.d/syslog\n    <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> logrotate\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 重启rsyslog服务\n    <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> rsyslog\n    <span class=\"token key atrule\">systemd</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> rsyslog\n      <span class=\"token key atrule\">state</span><span class=\"token punctuation\">:</span> restarted\n      <span class=\"token key atrule\">enabled</span><span class=\"token punctuation\">:</span> yes<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"tags\"><a href=\"#tags\" class=\"headerlink\" title=\"tags\"></a>tags</h5><blockquote>\n<p>标签可以灵活的选择执行那些task或其他的对象</p>\n</blockquote>\n<p>特殊的标签：</p>\n<ul>\n<li>always 当把标签设置为always即使使用–tags指定tags任务也会执行，可以使用–skip-tags always跳过</li>\n<li>never  和always相反即使用–tags指定也不会执行</li>\n<li>tagged 只执行有标签的任务</li>\n<li>untagged 只执行未打标签的含有always也会执行</li>\n<li>all 所有都执行不用指定</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">remote_user</span><span class=\"token punctuation\">:</span> root\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 创建文件test1\n      <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> test1\n      <span class=\"token key atrule\">file</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /tmp/test1\n        <span class=\"token key atrule\">state</span><span class=\"token punctuation\">:</span> touch\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 创建文件test2\n      <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> always\n      <span class=\"token key atrule\">file</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /tmp/test2\n        <span class=\"token key atrule\">state</span><span class=\"token punctuation\">:</span> touch\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 创建文件test3\n      <span class=\"token key atrule\">file</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /tmp/test3\n        <span class=\"token key atrule\">state</span><span class=\"token punctuation\">:</span> touch<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h5><blockquote>\n<p>变量非常常用</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">remote_user</span><span class=\"token punctuation\">:</span> root\n  <span class=\"token key atrule\">vars</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /tmp/\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 创建文件test1\n      <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> test1\n      <span class=\"token key atrule\">file</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123; path &#125;&#125;test1\"</span>\n        <span class=\"token key atrule\">state</span><span class=\"token punctuation\">:</span> touch<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"DEBUG\"><a href=\"#DEBUG\" class=\"headerlink\" title=\"DEBUG\"></a>DEBUG</h6><blockquote>\n<p>调试打印</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">remote_user</span><span class=\"token punctuation\">:</span> root\n  <span class=\"token key atrule\">vars</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /tmp/\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 创建文件test1\n      <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> test1\n      <span class=\"token key atrule\">file</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123; path &#125;&#125;test1\"</span>\n        <span class=\"token key atrule\">state</span><span class=\"token punctuation\">:</span> touch\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> print var\n      <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">var</span><span class=\"token punctuation\">:</span> path\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> msg\n      <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> this is debug info<span class=\"token punctuation\">,</span>The test file has been touched<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"注册变量\"><a href=\"#注册变量\" class=\"headerlink\" title=\"注册变量\"></a>注册变量</h6><blockquote>\n<p>将模块运行的返回值进行赋值</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">remote_user</span><span class=\"token punctuation\">:</span> root\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> test shell\n    <span class=\"token key atrule\">shell</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"cat /etc/hosts\"</span>\n    <span class=\"token key atrule\">register</span><span class=\"token punctuation\">:</span> testvar\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> shell 模块返回值\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">var</span><span class=\"token punctuation\">:</span> testvar\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 指定shell模块的返回\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123;testvar.stdout&#125;&#125;\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"交互\"><a href=\"#交互\" class=\"headerlink\" title=\"交互\"></a>交互</h6><blockquote>\n<p>命令行交互输入的变脸类似c语言的scan函数</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">remote_user</span><span class=\"token punctuation\">:</span> root\n  <span class=\"token key atrule\">vars_prompt</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"user\"</span>\n      <span class=\"token key atrule\">prompt</span><span class=\"token punctuation\">:</span> \"请选择帐号 \\n\n      root \\n\n      poweruser \\n\n      test \\n\n      \"\n      <span class=\"token key atrule\">private</span><span class=\"token punctuation\">:</span> no <span class=\"token comment\"># 输入的字符显示出来</span>\n      <span class=\"token key atrule\">default</span><span class=\"token punctuation\">:</span> root <span class=\"token comment\"># 默认值</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"passwd\"</span>\n      <span class=\"token key atrule\">prompt</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"请输入密码\"</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n   <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 输出变量\n     <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> 你的帐号：<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>user<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>;你的密码：<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>passwd<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"命令行传值\"><a href=\"#命令行传值\" class=\"headerlink\" title=\"命令行传值\"></a>命令行传值</h6><blockquote>\n<p>通过命令行输入变量的值</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">remote_user</span><span class=\"token punctuation\">:</span> root\n  <span class=\"token key atrule\">vars</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">var2</span><span class=\"token punctuation\">:</span> default\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"通过命令行传值\"</span>\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> var的值是：<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>var<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>;var2的值： <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>var2<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>将上面的yaml保存为test.yaml然后执行 <code>ansible-playbook -i inventories test.yaml --extra-vars &quot;var=test&quot; -e &quot;var2=test2&quot;</code>,-e是–extra-vars的缩写，<code>命令行的值会覆盖默认值</code><br>还可以使用<code>@</code>传变量文件</p>\n<h6 id=\"主机-组-变量\"><a href=\"#主机-组-变量\" class=\"headerlink\" title=\"主机(组)变量\"></a>主机(组)变量</h6><blockquote>\n<p>为每个主机（组）设置的变量，当使用次主机时变量生效</p>\n</blockquote>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><code class=\"language-ini\"><span class=\"token selector\">[test]</span>\n\nlocalhost hostvar1<span class=\"token attr-value\"><span class=\"token punctuation\">=</span>test_host_var hostvar2=host_var_test</span>\n\n<span class=\"token selector\">[test:vars]</span>\n<span class=\"token constant\">groupvar</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>testgroupvar</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">remote_user</span><span class=\"token punctuation\">:</span> root\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"主机变量\"</span>\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> hostvar1的值是：<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>hostvar1<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>;hostvar2的值： <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>hostvar2<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"主机组变量\"</span>\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> test组的变量是：<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>groupvar<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"set-fact定义变量\"><a href=\"#set-fact定义变量\" class=\"headerlink\" title=\"set_fact定义变量\"></a>set_fact定义变量</h6><blockquote>\n<p>通过set_fact模块配置变量</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">remote_user</span><span class=\"token punctuation\">:</span> root\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">set_fact</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">testvasr</span><span class=\"token punctuation\">:</span> testvas\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 打印值\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123;testvasr&#125;&#125;\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"内置变量\"><a href=\"#内置变量\" class=\"headerlink\" title=\"内置变量\"></a>内置变量</h6><blockquote>\n<p>ansible有一些保留变量</p>\n</blockquote>\n<ul>\n<li>ansible_version</li>\n<li>hostvars</li>\n<li>inventory_hostname</li>\n<li>inventory_hostname_short</li>\n<li>play_hosts</li>\n<li>groups</li>\n<li>group_names</li>\n</ul>\n<h5 id=\"循环\"><a href=\"#循环\" class=\"headerlink\" title=\"循环\"></a>循环</h5><h6 id=\"with-items\"><a href=\"#with-items\" class=\"headerlink\" title=\"with_items\"></a>with_items</h6><blockquote>\n<p>以条目为单位循环with_items下的的元素</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 循环打印变量\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123;item&#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_items</span><span class=\"token punctuation\">:</span>\n     <span class=\"token punctuation\">-</span> <span class=\"token number\">1</span>\n     <span class=\"token punctuation\">-</span> <span class=\"token number\">2</span>\n     <span class=\"token punctuation\">-</span> <span class=\"token number\">3</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 循环打印kv变量\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"k的值是：&#123;&#123;item.k&#125;&#125;:v的值是：&#123;&#123;item.v&#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_items</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token key atrule\">k</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token key atrule\">v</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token key atrule\">k</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token key atrule\">v</span><span class=\"token punctuation\">:</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"with-list\"><a href=\"#with-list\" class=\"headerlink\" title=\"with_list\"></a>with_list</h6><blockquote>\n<p>以list为单位循环元素,也即是一次性答应出一个list而不是list里面的元素</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 循环打印变量\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123;item&#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_items</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span> <span class=\"token punctuation\">:</span> 循环打印list\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123;item&#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_items</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"with-flattened\"><a href=\"#with-flattened\" class=\"headerlink\" title=\"with_flattened\"></a>with_flattened</h6><blockquote>\n<p>和with_item很像将item一个元素一个元素的打印出来</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 循环打印item\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123;item&#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_items</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span> <span class=\"token punctuation\">:</span> 循环打印list\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123;item&#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_list</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span> <span class=\"token punctuation\">:</span> 循环打印flattened\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123;item&#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_flattened</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"with-together\"><a href=\"#with-together\" class=\"headerlink\" title=\"with_together\"></a>with_together</h6><blockquote>\n<p>将list的元素纵排打印</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 循环打印item\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123;item&#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_items</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span> <span class=\"token punctuation\">:</span> 循环打印together\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123;item&#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_together</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">]</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"with-cartesian\"><a href=\"#with-cartesian\" class=\"headerlink\" title=\"with_cartesian\"></a>with_cartesian</h6><blockquote>\n<p>将list的元素交叉打印出来</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span> <span class=\"token punctuation\">:</span> 循环打印with_cartesian\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123;item&#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_cartesian</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"with-indexed-items\"><a href=\"#with-indexed-items\" class=\"headerlink\" title=\"with_indexed_items\"></a>with_indexed_items</h6><blockquote>\n<p>将所有list变成一个大的list然后将这个大的list按顺序从0开始添加索引和值</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span> <span class=\"token punctuation\">:</span> 循环打印with_indexed_items\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123;item&#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_indexed_items</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"with-sequence\"><a href=\"#with-sequence\" class=\"headerlink\" title=\"with_sequence\"></a>with_sequence</h6><blockquote>\n<p>类似golang序言的for循环，定义步长开始值，结束值</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span> <span class=\"token punctuation\">:</span> with_sequence\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span> \n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123; item &#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_sequence</span><span class=\"token punctuation\">:</span> start=1 end=10 stride=2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"with-dict\"><a href=\"#with-dict\" class=\"headerlink\" title=\"with_dict\"></a>with_dict</h6><blockquote>\n<p>顾名思义是循环处理字典的</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">vars</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">account</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> root\n      <span class=\"token key atrule\">passwd</span><span class=\"token punctuation\">:</span> <span class=\"token number\">123456</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span> <span class=\"token punctuation\">:</span> with_dict\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span> \n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"键是：&#123;&#123; item.key &#125;&#125; ；值是：&#123;&#123; item.value &#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_dict</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123;account&#125;&#125;\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"with-subelements\"><a href=\"#with-subelements\" class=\"headerlink\" title=\"with_subelements\"></a>with_subelements</h6><blockquote>\n<p>也是对字典镜像操作，制定的字段作为key把其他字段作为value</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">vars</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">account</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">root</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> root\n        <span class=\"token key atrule\">passwd</span><span class=\"token punctuation\">:</span> <span class=\"token number\">123456</span>\n        <span class=\"token key atrule\">open</span><span class=\"token punctuation\">:</span> \n          <span class=\"token punctuation\">-</span> tmp\n          <span class=\"token punctuation\">-</span> server\n      <span class=\"token key atrule\">test</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> test\n        <span class=\"token key atrule\">passwd</span><span class=\"token punctuation\">:</span> abc\n        <span class=\"token key atrule\">open</span><span class=\"token punctuation\">:</span> \n          <span class=\"token punctuation\">-</span> hosts\n          <span class=\"token punctuation\">-</span> log\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span> <span class=\"token punctuation\">:</span> with_sequence\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span> \n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123; item &#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_subelements</span><span class=\"token punctuation\">:</span> \n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"&#123;&#123;account&#125;&#125;\"</span>\n      <span class=\"token punctuation\">-</span> open<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"with-file\"><a href=\"#with-file\" class=\"headerlink\" title=\"with_file\"></a>with_file</h6><blockquote>\n<p>按行读取一个文件的内容</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span> <span class=\"token punctuation\">:</span> with_file\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span> \n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123; item &#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_file</span><span class=\"token punctuation\">:</span> \n      <span class=\"token punctuation\">-</span> /etc/hosts<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"with-fileglob\"><a href=\"#with-fileglob\" class=\"headerlink\" title=\"with_fileglob\"></a>with_fileglob</h6><blockquote>\n<p>读取文件名字</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span> <span class=\"token punctuation\">:</span> with_fileglob\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span> \n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123; item &#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_fileglob</span><span class=\"token punctuation\">:</span> \n      <span class=\"token punctuation\">-</span> /etc/*<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"判断\"><a href=\"#判断\" class=\"headerlink\" title=\"判断\"></a>判断</h5><h6 id=\"比较符\"><a href=\"#比较符\" class=\"headerlink\" title=\"比较符\"></a>比较符</h6><ul>\n<li>== 相等</li>\n<li>!= 不等</li>\n<li>&gt; 大于</li>\n<li>&lt;  小于</li>\n<li>&gt;=小于等于</li>\n<li>&lt;=大于等于</li>\n</ul>\n<h6 id=\"逻辑运算符\"><a href=\"#逻辑运算符\" class=\"headerlink\" title=\"逻辑运算符\"></a>逻辑运算符</h6><ul>\n<li>and 与</li>\n<li>or 或</li>\n<li>not 非</li>\n<li>() 组合</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span> <span class=\"token punctuation\">:</span> 判断\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span> \n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123; item &#125;&#125;\"</span>\n    <span class=\"token key atrule\">with_items</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token number\">1</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token number\">2</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token number\">3</span>\n    <span class=\"token key atrule\">when</span><span class=\"token punctuation\">:</span> item <span class=\"token punctuation\">></span> 2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"文件判断\"><a href=\"#文件判断\" class=\"headerlink\" title=\"文件判断\"></a>文件判断</h6><ul>\n<li>is exists 如果文件存在则为真</li>\n<li>is not exists  如果文件不存在则为假</li>\n<li>not &lt;path&gt; is exists 和is not相同</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token comment\">#gather_facts: false</span>\n  <span class=\"token key atrule\">vars</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">testpath</span><span class=\"token punctuation\">:</span> /tmp/test\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 判断/tmp/test文件是否存在\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span> \n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> 是centos\n    <span class=\"token key atrule\">when</span><span class=\"token punctuation\">:</span>  testpath is not exists<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"变量判断\"><a href=\"#变量判断\" class=\"headerlink\" title=\"变量判断\"></a>变量判断</h6><ul>\n<li>is defined 定义则为真</li>\n<li>is undefined 没定义则为真</li>\n<li>is none 为空则为真</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token comment\">#gather_facts: false</span>\n  <span class=\"token key atrule\">vars</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">testpath</span><span class=\"token punctuation\">:</span> /tmp/test\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 判断testpath是否存在\n    <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span> \n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> testpath文件存在\n    <span class=\"token key atrule\">when</span><span class=\"token punctuation\">:</span> testpath is defined<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"执行结果判断\"><a href=\"#执行结果判断\" class=\"headerlink\" title=\"执行结果判断\"></a>执行结果判断</h6><ul>\n<li>success 或 succeeded 执行成功则返回真</li>\n<li>failure 或 failed    执行失败则返回真</li>\n<li>change 或 changed    执行状态为changed则返回真</li>\n<li>skip 或 skipped      没有满足条件，而被跳过执行时，则返回真</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token comment\">#gather_facts: false</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">shell</span><span class=\"token punctuation\">:</span> cat /etc/hosts\n    <span class=\"token key atrule\">register</span><span class=\"token punctuation\">:</span> ret\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"执行成功\"</span>\n    <span class=\"token key atrule\">when</span><span class=\"token punctuation\">:</span> ret is success<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"文件类型判断\"><a href=\"#文件类型判断\" class=\"headerlink\" title=\"文件类型判断\"></a>文件类型判断</h6><ul>\n<li>file 是文件则为真</li>\n<li>directory 是目录则为真</li>\n<li>link 软连接则为真</li>\n<li>mount 挂载点则为真</li>\n<li>exists 存在则为真</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token comment\">#gather_facts: false</span>\n  <span class=\"token key atrule\">vars</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /etc/hosts\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123; path &#125;&#125; 是个文件\"</span> \n    <span class=\"token key atrule\">when</span><span class=\"token punctuation\">:</span> path is file<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"字符串判断\"><a href=\"#字符串判断\" class=\"headerlink\" title=\"字符串判断\"></a>字符串判断</h6><ul>\n<li>lower 字符为小写则为真</li>\n<li>upper 字符为大写则为真</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token comment\">#gather_facts: false</span>\n  <span class=\"token key atrule\">vars</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> TEST\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123; path &#125;&#125; 是大写\"</span> \n    <span class=\"token key atrule\">when</span><span class=\"token punctuation\">:</span> path is upper<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"整除判断\"><a href=\"#整除判断\" class=\"headerlink\" title=\"整除判断\"></a>整除判断</h6><ul>\n<li>even  偶数为真</li>\n<li>odd  奇数为真</li>\n<li>divisibleby(num) 整除则为真</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">vars</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">X</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n    <span class=\"token key atrule\">Y</span><span class=\"token punctuation\">:</span> <span class=\"token number\">6</span>\n    <span class=\"token key atrule\">Z</span><span class=\"token punctuation\">:</span> <span class=\"token number\">66</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123; X &#125;&#125; 是奇数\"</span> \n    <span class=\"token key atrule\">when</span><span class=\"token punctuation\">:</span> X is odd\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123; Y &#125;&#125; 是偶数\"</span> \n    <span class=\"token key atrule\">when</span><span class=\"token punctuation\">:</span> Y is even\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123; Z &#125;&#125; 能被66整除\"</span> \n    <span class=\"token key atrule\">when</span><span class=\"token punctuation\">:</span> Z is divisibleby(66)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"其他判断\"><a href=\"#其他判断\" class=\"headerlink\" title=\"其他判断\"></a>其他判断</h6><ul>\n<li>version 判断版本大小</li>\n<li>string 是字符则为真</li>\n<li>number 是数字则为真</li>\n<li>subset 一个list是另一个list的子集则为真</li>\n<li>superset 一个list<code>不</code>是另一个list的子集则为真</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">vars</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">Versions</span><span class=\"token punctuation\">:</span> 1.2.4\n    <span class=\"token key atrule\">A</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token number\">2</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token number\">3</span>\n    <span class=\"token key atrule\">B</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">str</span><span class=\"token punctuation\">:</span> test\n    <span class=\"token key atrule\">str2</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123; Versions &#125;&#125; 版本是否大于1.2.1\"</span> \n    <span class=\"token key atrule\">when</span><span class=\"token punctuation\">:</span> Versions is version(\"1.2.1\"<span class=\"token punctuation\">,</span>\"<span class=\"token punctuation\">></span>\")\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> b是a的子集\n    <span class=\"token key atrule\">when</span><span class=\"token punctuation\">:</span> B is subset(A)\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> str是字符串\n    <span class=\"token key atrule\">when</span><span class=\"token punctuation\">:</span> str is string\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> str2 是数字\n    <span class=\"token key atrule\">when</span><span class=\"token punctuation\">:</span> str2 is number<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"handler\"><a href=\"#handler\" class=\"headerlink\" title=\"handler\"></a>handler</h5><blockquote>\n<p>在上面的例子中无论前面修改配置文件是否修改都会执行rsyslog重启，这样有些不妥 <br>handler的执行顺序与被notify的顺序无关</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># 这样只有配置文件真正被修改了才会执行重启</span>\n<span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">remote_user</span><span class=\"token punctuation\">:</span> root\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 修改rsyslog配置文件\n      <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> rsyslog\n      <span class=\"token key atrule\">lineinfile</span><span class=\"token punctuation\">:</span>\n         <span class=\"token key atrule\">dest</span><span class=\"token punctuation\">:</span> /etc/rsyslog.conf\n         <span class=\"token key atrule\">regexp</span><span class=\"token punctuation\">:</span> ^<span class=\"token comment\">#kern</span>\n         <span class=\"token key atrule\">line</span><span class=\"token punctuation\">:</span> kern.* /var/log/kern.log\n      <span class=\"token key atrule\">notify</span><span class=\"token punctuation\">:</span>                <span class=\"token comment\"># 引用handlers</span>\n        重启rsyslog服务\n  <span class=\"token key atrule\">handlers</span><span class=\"token punctuation\">:</span>                  <span class=\"token comment\"># 和tasks同级</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 重启rsyslog服务\n      <span class=\"token key atrule\">systemd</span><span class=\"token punctuation\">:</span>\n         <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> rsyslog\n         <span class=\"token key atrule\">state</span><span class=\"token punctuation\">:</span> restarted\n         <span class=\"token key atrule\">enabled</span><span class=\"token punctuation\">:</span> yes<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>meta关键字可以让notify之后立刻执行handlers</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">remote_user</span><span class=\"token punctuation\">:</span> root\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 修改rsyslog配置文件\n      <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> rsyslog\n      <span class=\"token key atrule\">lineinfile</span><span class=\"token punctuation\">:</span>\n         <span class=\"token key atrule\">dest</span><span class=\"token punctuation\">:</span> /etc/rsyslog.conf\n         <span class=\"token key atrule\">regexp</span><span class=\"token punctuation\">:</span> ^<span class=\"token comment\">#kern</span>\n         <span class=\"token key atrule\">line</span><span class=\"token punctuation\">:</span> kern.* /var/log/kern.log\n      <span class=\"token key atrule\">notify</span><span class=\"token punctuation\">:</span>\n        重启rsyslog服务\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">meta</span><span class=\"token punctuation\">:</span> flush_handlers\n    \n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 查看配置文件状态\n      <span class=\"token key atrule\">shell</span><span class=\"token punctuation\">:</span> cat /etc/rsyslog.conf <span class=\"token punctuation\">|</span>grep \"kern.\\<span class=\"token important\">*\"</span>\n      <span class=\"token key atrule\">register</span><span class=\"token punctuation\">:</span> ps\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span> msg=<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> ps.stdout <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token key atrule\">handlers</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 重启rsyslog服务\n      <span class=\"token key atrule\">systemd</span><span class=\"token punctuation\">:</span>\n         <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> rsyslog\n         <span class=\"token key atrule\">state</span><span class=\"token punctuation\">:</span> restarted\n         <span class=\"token key atrule\">enabled</span><span class=\"token punctuation\">:</span> yes<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>listen handlers组</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">remote_user</span><span class=\"token punctuation\">:</span> root\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 修改rsyslog配置文件\n      <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> rsyslog\n      <span class=\"token key atrule\">lineinfile</span><span class=\"token punctuation\">:</span>\n         <span class=\"token key atrule\">dest</span><span class=\"token punctuation\">:</span> /etc/rsyslog.conf\n         <span class=\"token key atrule\">regexp</span><span class=\"token punctuation\">:</span> ^<span class=\"token comment\">#kern</span>\n         <span class=\"token key atrule\">line</span><span class=\"token punctuation\">:</span> kern.* /var/log/kern.log\n      <span class=\"token key atrule\">notify</span><span class=\"token punctuation\">:</span>\n         handler group1 <span class=\"token comment\"># 通知了handler group1</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">meta</span><span class=\"token punctuation\">:</span> flush_handlers \n\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 查看配置文件状态\n      <span class=\"token key atrule\">shell</span><span class=\"token punctuation\">:</span> cat /etc/rsyslog.conf <span class=\"token punctuation\">|</span>grep \"kern.\\<span class=\"token important\">*\"</span>\n      <span class=\"token key atrule\">register</span><span class=\"token punctuation\">:</span> ps\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span> msg=<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> ps.stdout <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token key atrule\">handlers</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 重启rsyslog服务\n      <span class=\"token key atrule\">listen</span><span class=\"token punctuation\">:</span> handler group1\n      <span class=\"token key atrule\">systemd</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> rsyslog\n        <span class=\"token key atrule\">state</span><span class=\"token punctuation\">:</span> restarted\n        <span class=\"token key atrule\">enabled</span><span class=\"token punctuation\">:</span> yes\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 创建测试文件\n      <span class=\"token key atrule\">listen</span><span class=\"token punctuation\">:</span> handler group1\n      <span class=\"token key atrule\">file</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /tmp/test\n        <span class=\"token key atrule\">state</span><span class=\"token punctuation\">:</span> touch<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"include-amp-amp-import-tasks\"><a href=\"#include-amp-amp-import-tasks\" class=\"headerlink\" title=\"include &amp;&amp; import tasks\"></a>include &amp;&amp; import tasks</h5><blockquote>\n<p>当task越来越多的时候如果都在一个文件不是很好管理，将一些相关性很强的写到一个文件然后引用另外的yaml文件 <br>import_tasks静态的，在playbook解析阶段将所有文件中的变量读取加载 <br>include_tasks动态则是在执行playbook之前才会加载自己变量</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">remote_user</span><span class=\"token punctuation\">:</span> root\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 修改rsyslog配置文件\n      <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> rsyslog\n      <span class=\"token key atrule\">lineinfile</span><span class=\"token punctuation\">:</span>\n         <span class=\"token key atrule\">dest</span><span class=\"token punctuation\">:</span> /etc/rsyslog.conf\n         <span class=\"token key atrule\">regexp</span><span class=\"token punctuation\">:</span> ^<span class=\"token comment\">#kern</span>\n         <span class=\"token key atrule\">line</span><span class=\"token punctuation\">:</span> kern.* /var/log/kern.log\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 查看配置文件状态\n      <span class=\"token key atrule\">import_tasks</span><span class=\"token punctuation\">:</span> config.yaml\n<span class=\"token punctuation\">---</span>\n<span class=\"token comment\"># config.yaml</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 查看配置文件状态\n  <span class=\"token key atrule\">shell</span><span class=\"token punctuation\">:</span> cat /etc/rsyslog.conf <span class=\"token punctuation\">|</span>grep \"kern.\\<span class=\"token important\">*\"</span>\n  <span class=\"token key atrule\">register</span><span class=\"token punctuation\">:</span> ps\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span> msg=<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span> ps.stdout <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"模版\"><a href=\"#模版\" class=\"headerlink\" title=\"模版\"></a>模版</h5><blockquote>\n<p>有些时候应用的配置文件会根据部署的机器调整一些参数，但是大部分参数不需要调整额这个时候就需要模版来处理 <br>ansibel的template<code>模块</code>使用python的jinja2模版引擎</p>\n</blockquote>\n<ul>\n<li>参数:<ul>\n<li>owner  在目标主机上通过模版生成的文件的所属者</li>\n<li>group  在目标主机上通过模版生成的文件的所属组</li>\n<li>mode   在目标主机上通过模版生成的文件的权限</li>\n<li>force  目标主机上已经有了文件是否强制覆盖</li>\n<li>backup 目标主机上已经有了文件是否覆盖</li>\n</ul>\n</li>\n</ul>\n<h6 id=\"占位符\"><a href=\"#占位符\" class=\"headerlink\" title=\"占位符\"></a>占位符</h6><ul>\n<li>&lt;!–swig￼52–&gt; 表达式，比如变量、运算表达式、比较表达式等写法参考<a href=\"#%E6%AF%94%E8%BE%83%E7%AC%A6\">比较符</a></li>\n<li>&lt;!–swig￼54–&gt; 控制语句,如if控制结构，for循环控制结构</li>\n<li> 注释，模板文件被渲染后，注释不会包含在最终生成的文件中</li>\n</ul>\n<h6 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h6><p>模版文件：</p>\n<pre class=\"line-numbers language-j2\" data-language=\"j2\"><code class=\"language-j2\">基本变量替换\n&#123;&#123; testvar &#125;&#125;\n\n逻辑计算\n\n&#123;&#123; number &gt; 1 &#125;&#125;\n\n&#123;&#123; number is defined &#125;&#125;\n\n&#123;&#123; &#39;&#x2F;tmp&#39; is exists  &#125;&#125;\n\n数据结构取值\n&#123;&#123; account.user &#125;&#125;\n&#123;&#123; numbers.1 &#125;&#125;\n\n&#123;# 这个是注释 #&#125;\n&#123;# \n这个是多行注释，\n不会在生成的末班中显示\n#&#125;\n\n判断\n&#123;% if numbers.1&gt;1 %&#125;\n嘿嘿嘿\n&#123;% endif %&#125;\n\n循环\n&#123;% for i in [3,14,15,9,26] -%&#125;\n&#123;&#123; i &#125;&#125; &#123;&#123;&#39; &#39;&#125;&#125;\n&#123;%- endfor %&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>playbook如下：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">vars</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">testvar</span><span class=\"token punctuation\">:</span> footest\n    <span class=\"token key atrule\">number</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span>\n    <span class=\"token key atrule\">account</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> root\n        <span class=\"token key atrule\">passwd</span><span class=\"token punctuation\">:</span> <span class=\"token number\">123456</span>\n    <span class=\"token key atrule\">numbers</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token number\">1</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token number\">2</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token number\">3</span>\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"test\"</span> \n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">src</span><span class=\"token punctuation\">:</span> test.j2\n      <span class=\"token key atrule\">dest</span><span class=\"token punctuation\">:</span> /tmp/test<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>执行 <code>ansible-playbook  -i inventories test.yaml</code></p>\n<h5 id=\"角色\"><a href=\"#角色\" class=\"headerlink\" title=\"角色\"></a>角色</h5><blockquote>\n<p>当任务越来越多时一个文件放这么多有些不一样配合include和import分门别类的存放ansible资源文件</p>\n</blockquote>\n<h6 id=\"目录结构\"><a href=\"#目录结构\" class=\"headerlink\" title=\"目录结构\"></a>目录结构</h6><blockquote>\n<p>每个目录下都有an.yaml用语导入此目录其他的yaml</p>\n</blockquote>\n<pre class=\"line-numbers language-dir\" data-language=\"dir\"><code class=\"language-dir\">.\n├── inventories\n├── roles\n│   ├── defaults\n│   ├── files       # 文件的目录\n│   ├── handlers    # handler目录\n│   ├── meta        # 特殊设定及其依赖关系\n│   ├── tasks       # 存放task的目录\n│   ├── templates   # 存放模版\n│   └── vars        # 存放变量\n└── test.yaml       # 剧本文件<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"角色例子\"><a href=\"#角色例子\" class=\"headerlink\" title=\"角色例子\"></a>角色例子</h6><p>在和roles文件同级目录创建剧本</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">roles</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">role</span><span class=\"token punctuation\">:</span> roles\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>在roles文件夹的task中创建task</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span> \n    <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> hahaha\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>运行<code>ansible-playbook  -i inventories test.yaml</code></p>\n<h5 id=\"过滤器\"><a href=\"#过滤器\" class=\"headerlink\" title=\"过滤器\"></a>过滤器</h5><blockquote>\n<p>对一些数据进行处理</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">remote_user</span><span class=\"token punctuation\">:</span> root\n  <span class=\"token key atrule\">vars</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">testvar</span><span class=\"token punctuation\">:</span> haha\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">debug</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">msg</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"&#123;&#123; testvar | upper &#125;&#125;\"</span>    <span class=\"token comment\"># 将全部字母转换成大写</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>基本格式就像上面一样其他功能只需要将<code>upper</code>替换为其他的字段即可</p>\n<p>常用过滤器</p>\n<ul>\n<li>upper 字符转换为大写</li>\n<li>lower 字符转换为小写</li>\n<li>indent 设置缩进</li>\n<li>json_query 将字符串作为json</li>\n<li>dirname 路径字符串的路径名</li>\n<li>hash() 进行hash处理</li>\n<li>password_hash 密码专用的hash</li>\n<li>checksum  计算md5</li>\n<li>ipaddr() 需要安装netaddr，针对ip地址处理</li>\n</ul>\n<h5 id=\"lookup\"><a href=\"#lookup\" class=\"headerlink\" title=\"lookup\"></a>lookup</h5><blockquote>\n<p>上面的过滤器和lookup其实都是插件具体介绍:<a href=\"https://docs.ansible.com/ansible/latest/plugins/plugins.html\">https://docs.ansible.com/ansible/latest/plugins/plugins.html</a></p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 渲染模版到变量\n  <span class=\"token key atrule\">set_fact</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">yaml</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'&#123;&#123; lookup(\"template\", \"test.j2\") &#125;&#125;'</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 读取文件到变量\n  <span class=\"token key atrule\">set_fact</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">file</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'&#123;&#123; lookup(\"file\", \"/etc/hosts\") &#125;&#125;'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"在本地-amp-amp-只执行一次\"><a href=\"#在本地-amp-amp-只执行一次\" class=\"headerlink\" title=\"在本地&amp;&amp;只执行一次\"></a>在本地&amp;&amp;只执行一次</h5><blockquote>\n<p>有些时候一些剧本在本地执行，就像本地执行shell一样,由于在本地执行所以需要搭配<code>run_once</code></p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> localhost\n  <span class=\"token key atrule\">connection</span><span class=\"token punctuation\">:</span> local\n  <span class=\"token key atrule\">remote_user</span><span class=\"token punctuation\">:</span> root\n  <span class=\"token key atrule\">run_once</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> no\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n     <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">shell</span><span class=\"token punctuation\">:</span> echo \"test\" <span class=\"token punctuation\">></span> /tmp/test<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"并行执行\"><a href=\"#并行执行\" class=\"headerlink\" title=\"并行执行\"></a>并行执行</h5><blockquote>\n<p>在机器比较多时一台一台执行太慢<code>serial</code>可以指定并行执行的数量</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> test\n  <span class=\"token key atrule\">remote_user</span><span class=\"token punctuation\">:</span> root\n  <span class=\"token key atrule\">serial</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token comment\">#serial: 20% 按百分比</span>\n  <span class=\"token key atrule\">gather_facts</span><span class=\"token punctuation\">:</span> no\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n     <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">shell</span><span class=\"token punctuation\">:</span> echo \"test\" <span class=\"token punctuation\">></span> /tmp/test<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"http://www.zsythink.net/archives/category/%e8%bf%90%e7%bb%b4%e7%9b%b8%e5%85%b3/ansible/\">http://www.zsythink.net/archives/category/%e8%bf%90%e7%bb%b4%e7%9b%b8%e5%85%b3/ansible/</a><br><a href=\"https://docs.ansible.com/\">https://docs.ansible.com/</a><br><a href=\"http://www.ansible.com.cn/\">http://www.ansible.com.cn/</a></p>\n","categories":["运维"],"tags":["ansible"]},{"title":"K8s动态准入控制","url":"/2021/06/17/K8s%E5%8A%A8%E6%80%81%E5%87%86%E5%85%A5%E6%8E%A7%E5%88%B6/","content":"<p>准入控制是k8s中用来提供安全控制的一个控制器，而动态控制则是用户定制的安全策略</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>说明，模版文件不要发布出来</p>\n</blockquote>\n<h4 id=\"种类\"><a href=\"#种类\" class=\"headerlink\" title=\"种类\"></a>种类</h4><blockquote>\n<p>动态准入控制分为两种，分别为Mutating，Validating</p>\n</blockquote>\n<h5 id=\"Mutating\"><a href=\"#Mutating\" class=\"headerlink\" title=\"Mutating\"></a>Mutating</h5><p>Mutating主要为修改性质的，在api调用完成之后k8s会根据<code>ValidatingWebhookConfiguration</code>中的条件发送给配置的webhook服务，webhook服务根据业务逻辑进行修改，比如说大名鼎鼎的istio的Sidecar注入就是于此</p>\n<h5 id=\"Validating\"><a href=\"#Validating\" class=\"headerlink\" title=\"Validating\"></a>Validating</h5><p>Validating主要为验证性质的，主要看是不是符合条件集群要求，比方说为了高可用不允许设置副本数为1的类型为deployment的请求</p>\n<h4 id=\"架构\"><a href=\"#架构\" class=\"headerlink\" title=\"架构\"></a>架构</h4><blockquote>\n<p>下图所显的是api请求的流程<br><img src=\"/images/pasted-24.png\" alt=\"upload successful\"></p>\n</blockquote>\n<h4 id=\"编写webhook\"><a href=\"#编写webhook\" class=\"headerlink\" title=\"编写webhook\"></a>编写webhook</h4><h5 id=\"创建证书\"><a href=\"#创建证书\" class=\"headerlink\" title=\"创建证书\"></a>创建证书</h5><blockquote>\n<p>创建证书的的程序很多比较出名的是<code>openssl</code>，这里我们使用rancher提供的一个自动生成证书的脚本</p>\n</blockquote>\n<h6 id=\"1-将下面的脚本保存为create-self-signed-cert-sh\"><a href=\"#1-将下面的脚本保存为create-self-signed-cert-sh\" class=\"headerlink\" title=\"1. 将下面的脚本保存为create_self-signed-cert.sh\"></a>1. 将下面的脚本保存为<code>create_self-signed-cert.sh</code></h6><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"><span class=\"token shebang important\">#!/bin/bash -e</span>\n\n<span class=\"token function-name function\">help</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin class-name\">echo</span>  <span class=\"token string\">' ================================================================ '</span>\n    <span class=\"token builtin class-name\">echo</span>  <span class=\"token string\">' --ssl-domain: 生成ssl证书需要的主域名，如不指定则默认为www.rancher.local，如果是ip访问服务，则可忽略；'</span>\n    <span class=\"token builtin class-name\">echo</span>  <span class=\"token string\">' --ssl-trusted-ip: 一般ssl证书只信任域名的访问请求，有时候需要使用ip去访问server，那么需要给ssl证书添加扩展IP，多个IP用逗号隔开；'</span>\n    <span class=\"token builtin class-name\">echo</span>  <span class=\"token string\">' --ssl-trusted-domain: 如果想多个域名访问，则添加扩展域名（SSL_TRUSTED_DOMAIN）,多个扩展域名用逗号隔开；'</span>\n    <span class=\"token builtin class-name\">echo</span>  <span class=\"token string\">' --ssl-size: ssl加密位数，默认2048；'</span>\n    <span class=\"token builtin class-name\">echo</span>  <span class=\"token string\">' --ssl-cn: 国家代码(2个字母的代号),默认CN;'</span>\n    <span class=\"token builtin class-name\">echo</span>  <span class=\"token string\">' 使用示例:'</span>\n    <span class=\"token builtin class-name\">echo</span>  <span class=\"token string\">' ./create_self-signed-cert.sh --ssl-domain=www.test.com --ssl-trusted-domain=www.test2.com \\ '</span>\n    <span class=\"token builtin class-name\">echo</span>  <span class=\"token string\">' --ssl-trusted-ip=1.1.1.1,2.2.2.2,3.3.3.3 --ssl-size=2048 --ssl-date=3650'</span>\n    <span class=\"token builtin class-name\">echo</span>  <span class=\"token string\">' ================================================================'</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">case</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span>\"</span> <span class=\"token keyword\">in</span>\n    -h<span class=\"token operator\">|</span>--help<span class=\"token punctuation\">)</span> <span class=\"token builtin class-name\">help</span><span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">exit</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">esac</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token variable\">$1</span> <span class=\"token operator\">==</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">help</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin class-name\">exit</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token assign-left variable\">CMDOPTS</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$*</span>\"</span>\n<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">OPTS</span> <span class=\"token keyword\">in</span> <span class=\"token variable\">$CMDOPTS</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">do</span>\n    <span class=\"token assign-left variable\">key</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> $<span class=\"token punctuation\">&#123;</span>OPTS<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> -F<span class=\"token string\">\"=\"</span> <span class=\"token string\">'&#123;print <span class=\"token variable\">$1</span>&#125;'</span> <span class=\"token variable\">)</span></span>\n    <span class=\"token assign-left variable\">value</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> $<span class=\"token punctuation\">&#123;</span>OPTS<span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> -F<span class=\"token string\">\"=\"</span> <span class=\"token string\">'&#123;print <span class=\"token variable\">$2</span>&#125;'</span> <span class=\"token variable\">)</span></span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"<span class=\"token variable\">$key</span>\"</span> <span class=\"token keyword\">in</span>\n        --ssl-domain<span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">SSL_DOMAIN</span><span class=\"token operator\">=</span><span class=\"token variable\">$value</span> <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n        --ssl-trusted-ip<span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">SSL_TRUSTED_IP</span><span class=\"token operator\">=</span><span class=\"token variable\">$value</span> <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n        --ssl-trusted-domain<span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">SSL_TRUSTED_DOMAIN</span><span class=\"token operator\">=</span><span class=\"token variable\">$value</span> <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n        --ssl-size<span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">SSL_SIZE</span><span class=\"token operator\">=</span><span class=\"token variable\">$value</span> <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n        --ssl-date<span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">SSL_DATE</span><span class=\"token operator\">=</span><span class=\"token variable\">$value</span> <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n        --ca-date<span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">CA_DATE</span><span class=\"token operator\">=</span><span class=\"token variable\">$value</span> <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n        --ssl-cn<span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">CN</span><span class=\"token operator\">=</span><span class=\"token variable\">$value</span> <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">esac</span>\n<span class=\"token keyword\">done</span>\n\n<span class=\"token comment\"># CA相关配置</span>\n<span class=\"token assign-left variable\">CA_DATE</span><span class=\"token operator\">=</span><span class=\"token variable\">$&#123;CA_DATE<span class=\"token operator\">:-</span>3650&#125;</span>\n<span class=\"token assign-left variable\">CA_KEY</span><span class=\"token operator\">=</span><span class=\"token variable\">$&#123;CA_KEY<span class=\"token operator\">:-</span>cakey.pem&#125;</span>\n<span class=\"token assign-left variable\">CA_CERT</span><span class=\"token operator\">=</span><span class=\"token variable\">$&#123;CA_CERT<span class=\"token operator\">:-</span>cacerts.pem&#125;</span>\n<span class=\"token assign-left variable\">CA_DOMAIN</span><span class=\"token operator\">=</span>cattle-ca\n\n<span class=\"token comment\"># ssl相关配置</span>\n<span class=\"token assign-left variable\">SSL_CONFIG</span><span class=\"token operator\">=</span><span class=\"token variable\">$&#123;SSL_CONFIG<span class=\"token operator\">:-</span>$PWD<span class=\"token operator\">/</span>openssl.cnf&#125;</span>\n<span class=\"token assign-left variable\">SSL_DOMAIN</span><span class=\"token operator\">=</span><span class=\"token variable\">$&#123;SSL_DOMAIN<span class=\"token operator\">:-</span>'www.rancher.local'&#125;</span>\n<span class=\"token assign-left variable\">SSL_DATE</span><span class=\"token operator\">=</span><span class=\"token variable\">$&#123;SSL_DATE<span class=\"token operator\">:-</span>3650&#125;</span>\n<span class=\"token assign-left variable\">SSL_SIZE</span><span class=\"token operator\">=</span><span class=\"token variable\">$&#123;SSL_SIZE<span class=\"token operator\">:-</span>2048&#125;</span>\n\n<span class=\"token comment\">## 国家代码(2个字母的代号),默认CN;</span>\n<span class=\"token assign-left variable\">CN</span><span class=\"token operator\">=</span><span class=\"token variable\">$&#123;CN<span class=\"token operator\">:-</span>CN&#125;</span>\n\n<span class=\"token assign-left variable\">SSL_KEY</span><span class=\"token operator\">=</span><span class=\"token variable\">$SSL_DOMAIN</span>.key\n<span class=\"token assign-left variable\">SSL_CSR</span><span class=\"token operator\">=</span><span class=\"token variable\">$SSL_DOMAIN</span>.csr\n<span class=\"token assign-left variable\">SSL_CERT</span><span class=\"token operator\">=</span><span class=\"token variable\">$SSL_DOMAIN</span>.crt\n\n<span class=\"token builtin class-name\">echo</span> -e <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[32m ---------------------------- <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n<span class=\"token builtin class-name\">echo</span> -e <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[32m       | 生成 SSL Cert |       <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n<span class=\"token builtin class-name\">echo</span> -e <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[32m ---------------------------- <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> -e ./<span class=\"token variable\">$&#123;CA_KEY&#125;</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> -e <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[32m ====> 1. 发现已存在CA私钥，备份\"</span><span class=\"token variable\">$&#123;CA_KEY&#125;</span><span class=\"token string\">\"为\"</span><span class=\"token variable\">$&#123;CA_KEY&#125;</span><span class=\"token string\">\"-bak，然后重新创建 <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n    <span class=\"token function\">mv</span> <span class=\"token variable\">$&#123;CA_KEY&#125;</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;CA_KEY&#125;</span>\"</span>-bak\n    openssl genrsa -out <span class=\"token variable\">$&#123;CA_KEY&#125;</span> <span class=\"token variable\">$&#123;SSL_SIZE&#125;</span>\n<span class=\"token keyword\">else</span>\n    <span class=\"token builtin class-name\">echo</span> -e <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[32m ====> 1. 生成新的CA私钥 <span class=\"token variable\">$&#123;CA_KEY&#125;</span> <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n    openssl genrsa -out <span class=\"token variable\">$&#123;CA_KEY&#125;</span> <span class=\"token variable\">$&#123;SSL_SIZE&#125;</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> -e ./<span class=\"token variable\">$&#123;CA_CERT&#125;</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> -e <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[32m ====> 2. 发现已存在CA证书，先备份\"</span><span class=\"token variable\">$&#123;CA_CERT&#125;</span><span class=\"token string\">\"为\"</span><span class=\"token variable\">$&#123;CA_CERT&#125;</span><span class=\"token string\">\"-bak，然后重新创建 <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n    <span class=\"token function\">mv</span> <span class=\"token variable\">$&#123;CA_CERT&#125;</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;CA_CERT&#125;</span>\"</span>-bak\n    openssl req -x509 -sha256 -new -nodes -key <span class=\"token variable\">$&#123;CA_KEY&#125;</span> -days <span class=\"token variable\">$&#123;CA_DATE&#125;</span> -out <span class=\"token variable\">$&#123;CA_CERT&#125;</span> -subj <span class=\"token string\">\"/C=<span class=\"token variable\">$&#123;CN&#125;</span>/CN=<span class=\"token variable\">$&#123;CA_DOMAIN&#125;</span>\"</span>\n<span class=\"token keyword\">else</span>\n    <span class=\"token builtin class-name\">echo</span> -e <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[32m ====> 2. 生成新的CA证书 <span class=\"token variable\">$&#123;CA_CERT&#125;</span> <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n    openssl req -x509 -sha256 -new -nodes -key <span class=\"token variable\">$&#123;CA_KEY&#125;</span> -days <span class=\"token variable\">$&#123;CA_DATE&#125;</span> -out <span class=\"token variable\">$&#123;CA_CERT&#125;</span> -subj <span class=\"token string\">\"/C=<span class=\"token variable\">$&#123;CN&#125;</span>/CN=<span class=\"token variable\">$&#123;CA_DOMAIN&#125;</span>\"</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token builtin class-name\">echo</span> -e <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[32m ====> 3. 生成Openssl配置文件 <span class=\"token variable\">$&#123;SSL_CONFIG&#125;</span> <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n<span class=\"token function\">cat</span> <span class=\"token operator\">></span> <span class=\"token variable\">$&#123;SSL_CONFIG&#125;</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOM\n[req]\nreq_extensions = v3_req\ndistinguished_name = req_distinguished_name\n[req_distinguished_name]\n[ v3_req ]\nbasicConstraints = CA:FALSE\nkeyUsage = nonRepudiation, digitalSignature, keyEncipherment\nextendedKeyUsage = clientAuth, serverAuth\nEOM</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> -n <span class=\"token variable\">$&#123;SSL_TRUSTED_IP&#125;</span> <span class=\"token operator\">||</span> -n <span class=\"token variable\">$&#123;SSL_TRUSTED_DOMAIN&#125;</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token function\">cat</span> <span class=\"token operator\">>></span> <span class=\"token variable\">$&#123;SSL_CONFIG&#125;</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOM\nsubjectAltName = @alt_names\n[alt_names]\nEOM</span>\n    <span class=\"token assign-left variable\"><span class=\"token environment constant\">IFS</span></span><span class=\"token operator\">=</span><span class=\"token string\">\",\"</span>\n    <span class=\"token assign-left variable\">dns</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$&#123;SSL_TRUSTED_DOMAIN&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token assign-left variable\">dns</span><span class=\"token operator\">+=</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$&#123;SSL_DOMAIN&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;<span class=\"token operator\">!</span>dns<span class=\"token punctuation\">[</span>@<span class=\"token punctuation\">]</span>&#125;</span>\"</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span>\n      <span class=\"token builtin class-name\">echo</span> DNS.<span class=\"token variable\"><span class=\"token variable\">$((</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token variable\">))</span></span> <span class=\"token operator\">=</span> <span class=\"token variable\">$&#123;dns<span class=\"token punctuation\">[</span>$i<span class=\"token punctuation\">]</span>&#125;</span> <span class=\"token operator\">>></span> <span class=\"token variable\">$&#123;SSL_CONFIG&#125;</span>\n    <span class=\"token keyword\">done</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> -n <span class=\"token variable\">$&#123;SSL_TRUSTED_IP&#125;</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n        <span class=\"token assign-left variable\">ip</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$&#123;SSL_TRUSTED_IP&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">i</span> <span class=\"token keyword\">in</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;<span class=\"token operator\">!</span>ip<span class=\"token punctuation\">[</span>@<span class=\"token punctuation\">]</span>&#125;</span>\"</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span>\n          <span class=\"token builtin class-name\">echo</span> IP.<span class=\"token variable\"><span class=\"token variable\">$((</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token variable\">))</span></span> <span class=\"token operator\">=</span> <span class=\"token variable\">$&#123;ip<span class=\"token punctuation\">[</span>$i<span class=\"token punctuation\">]</span>&#125;</span> <span class=\"token operator\">>></span> <span class=\"token variable\">$&#123;SSL_CONFIG&#125;</span>\n        <span class=\"token keyword\">done</span>\n    <span class=\"token keyword\">fi</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token builtin class-name\">echo</span> -e <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[32m ====> 4. 生成服务SSL KEY <span class=\"token variable\">$&#123;SSL_KEY&#125;</span> <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\nopenssl genrsa -out <span class=\"token variable\">$&#123;SSL_KEY&#125;</span> <span class=\"token variable\">$&#123;SSL_SIZE&#125;</span>\n\n<span class=\"token builtin class-name\">echo</span> -e <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[32m ====> 5. 生成服务SSL CSR <span class=\"token variable\">$&#123;SSL_CSR&#125;</span> <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\nopenssl req -sha256 -new -key <span class=\"token variable\">$&#123;SSL_KEY&#125;</span> -out <span class=\"token variable\">$&#123;SSL_CSR&#125;</span> -subj <span class=\"token string\">\"/C=<span class=\"token variable\">$&#123;CN&#125;</span>/CN=<span class=\"token variable\">$&#123;SSL_DOMAIN&#125;</span>\"</span> -config <span class=\"token variable\">$&#123;SSL_CONFIG&#125;</span>\n\n<span class=\"token builtin class-name\">echo</span> -e <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[32m ====> 6. 生成服务SSL CERT <span class=\"token variable\">$&#123;SSL_CERT&#125;</span> <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\nopenssl x509 -sha256 -req -in <span class=\"token variable\">$&#123;SSL_CSR&#125;</span> -CA <span class=\"token variable\">$&#123;CA_CERT&#125;</span> <span class=\"token punctuation\">\\</span>\n    -CAkey <span class=\"token variable\">$&#123;CA_KEY&#125;</span> -CAcreateserial -out <span class=\"token variable\">$&#123;SSL_CERT&#125;</span> <span class=\"token punctuation\">\\</span>\n    -days <span class=\"token variable\">$&#123;SSL_DATE&#125;</span> -extensions v3_req <span class=\"token punctuation\">\\</span>\n    -extfile <span class=\"token variable\">$&#123;SSL_CONFIG&#125;</span>\n\n<span class=\"token builtin class-name\">echo</span> -e <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[32m ====> 7. 证书制作完成 <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n<span class=\"token builtin class-name\">echo</span>\n<span class=\"token builtin class-name\">echo</span> -e <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[32m ====> 8. 以YAML格式输出结果 <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"----------------------------------------------------------\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"ca_key: |\"</span>\n<span class=\"token function\">cat</span> <span class=\"token variable\">$CA_KEY</span> <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token string\">'s/^/  /'</span>\n<span class=\"token builtin class-name\">echo</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"ca_cert: |\"</span>\n<span class=\"token function\">cat</span> <span class=\"token variable\">$CA_CERT</span> <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token string\">'s/^/  /'</span>\n<span class=\"token builtin class-name\">echo</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"ssl_key: |\"</span>\n<span class=\"token function\">cat</span> <span class=\"token variable\">$SSL_KEY</span> <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token string\">'s/^/  /'</span>\n<span class=\"token builtin class-name\">echo</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"ssl_csr: |\"</span>\n<span class=\"token function\">cat</span> <span class=\"token variable\">$SSL_CSR</span> <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token string\">'s/^/  /'</span>\n<span class=\"token builtin class-name\">echo</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"ssl_cert: |\"</span>\n<span class=\"token function\">cat</span> <span class=\"token variable\">$SSL_CERT</span> <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token string\">'s/^/  /'</span>\n<span class=\"token builtin class-name\">echo</span>\n\n<span class=\"token builtin class-name\">echo</span> -e <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[32m ====> 9. 附加CA证书到Cert文件 <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n<span class=\"token function\">cat</span> <span class=\"token variable\">$&#123;CA_CERT&#125;</span> <span class=\"token operator\">>></span> <span class=\"token variable\">$&#123;SSL_CERT&#125;</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"ssl_cert: |\"</span>\n<span class=\"token function\">cat</span> <span class=\"token variable\">$SSL_CERT</span> <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token string\">'s/^/  /'</span>\n<span class=\"token builtin class-name\">echo</span>\n\n<span class=\"token builtin class-name\">echo</span> -e <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[32m ====> 10. 重命名服务证书 <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"cp <span class=\"token variable\">$&#123;SSL_DOMAIN&#125;</span>.key tls.key\"</span>\n<span class=\"token function\">cp</span> <span class=\"token variable\">$&#123;SSL_DOMAIN&#125;</span>.key tls.key\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"cp <span class=\"token variable\">$&#123;SSL_DOMAIN&#125;</span>.crt tls.crt\"</span>\n<span class=\"token function\">cp</span> <span class=\"token variable\">$&#123;SSL_DOMAIN&#125;</span>.crt tls.crt\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h6 id=\"2-然后执行下面的命令\"><a href=\"#2-然后执行下面的命令\" class=\"headerlink\" title=\"2. 然后执行下面的命令\"></a>2. 然后执行下面的命令</h6><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">./create_self-signed-cert.sh --ssl-domain<span class=\"token operator\">=</span>admission-example.admission-example.svc.cluster.local  --ssl-trusted-domain<span class=\"token operator\">=</span>admission-example,admission-example.admission-example.svc -ssl-trusted-ip<span class=\"token operator\">=</span><span class=\"token number\">127.0</span>.0.1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h6 id=\"3-会在目录里生成一套证书和秘钥\"><a href=\"#3-会在目录里生成一套证书和秘钥\" class=\"headerlink\" title=\"3. 会在目录里生成一套证书和秘钥\"></a>3. 会在目录里生成一套证书和秘钥</h6><ul>\n<li>.key的为秘钥</li>\n<li>.crt为域名的证书</li>\n<li>csr文件为证书申请文件</li>\n<li>ca开头的为根证书和秘钥</li>\n</ul>\n<h5 id=\"编写yaml文件\"><a href=\"#编写yaml文件\" class=\"headerlink\" title=\"编写yaml文件\"></a>编写yaml文件</h5><blockquote>\n<p>编写MutatingWebhookConfiguration和ValidatingWebhookConfiguration</p>\n</blockquote>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> admissionregistration.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> MutatingWebhookConfiguration\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mutating<span class=\"token punctuation\">-</span>example\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> admission<span class=\"token punctuation\">-</span>example\n<span class=\"token key atrule\">webhooks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> admission<span class=\"token punctuation\">-</span>example.naturelr.cc\n    <span class=\"token key atrule\">clientConfig</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">service</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> admission<span class=\"token punctuation\">-</span>example\n        <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> admission<span class=\"token punctuation\">-</span>example\n        <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"/mutate\"</span>\n        <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n      <span class=\"token comment\"># 证书进行base64编码</span>\n      <span class=\"token key atrule\">caBundle</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>CA<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n    <span class=\"token key atrule\">rules</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">operations</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"CREATE\"</span> <span class=\"token punctuation\">]</span>\n        <span class=\"token key atrule\">apiGroups</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"apps\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">]</span>\n        <span class=\"token key atrule\">apiVersions</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"v1\"</span><span class=\"token punctuation\">]</span>\n        <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"deployments\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"services\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">admissionReviewVersions</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"v1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"v1beta1\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">sideEffects</span><span class=\"token punctuation\">:</span> None\n    <span class=\"token comment\"># 只有ns上拥有admission-webhook-example: enabled才生效</span>\n    <span class=\"token key atrule\">namespaceSelector</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">admission-webhook-example</span><span class=\"token punctuation\">:</span> enabled\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> admissionregistration.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ValidatingWebhookConfiguration\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> validation<span class=\"token punctuation\">-</span>example\n  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> admission<span class=\"token punctuation\">-</span>example\n<span class=\"token key atrule\">webhooks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> admission<span class=\"token punctuation\">-</span>example.naturelr.cc\n    <span class=\"token key atrule\">clientConfig</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">service</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> admission<span class=\"token punctuation\">-</span>example\n        <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> admission<span class=\"token punctuation\">-</span>example\n        <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"/validate\"</span>\n        <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n      <span class=\"token key atrule\">caBundle</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>CA<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n    <span class=\"token key atrule\">rules</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">operations</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"CREATE\"</span> <span class=\"token punctuation\">]</span>\n        <span class=\"token key atrule\">apiGroups</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"apps\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">]</span>\n        <span class=\"token key atrule\">apiVersions</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"v1\"</span><span class=\"token punctuation\">]</span>\n        <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"deployments\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"services\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">admissionReviewVersions</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"v1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"v1beta1\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token key atrule\">sideEffects</span><span class=\"token punctuation\">:</span> None\n    <span class=\"token key atrule\">namespaceSelector</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">admission-webhook-example</span><span class=\"token punctuation\">:</span> enabled<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"开发webhook\"><a href=\"#开发webhook\" class=\"headerlink\" title=\"开发webhook\"></a>开发webhook</h5><blockquote>\n<p>开发上面定义的两个接口validate，mutate</p>\n</blockquote>\n<p>监听的端口和上面配置的端口一直，且使用创建的证书</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token operator\">...</span>\n  http<span class=\"token punctuation\">.</span><span class=\"token function\">HandleFunc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/validate\"</span><span class=\"token punctuation\">,</span> validate<span class=\"token punctuation\">)</span>\n  http<span class=\"token punctuation\">.</span><span class=\"token function\">HandleFunc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/mutate\"</span><span class=\"token punctuation\">,</span> mutate<span class=\"token punctuation\">)</span>\n  http<span class=\"token punctuation\">.</span><span class=\"token function\">HandleFunc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/ping\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>w http<span class=\"token punctuation\">.</span>ResponseWriter<span class=\"token punctuation\">,</span> r <span class=\"token operator\">*</span>http<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Fprintln</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> <span class=\"token string\">\"pong\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\n  svr <span class=\"token operator\">:=</span> http<span class=\"token punctuation\">.</span>Server<span class=\"token punctuation\">&#123;</span>\n    Addr<span class=\"token punctuation\">:</span>         <span class=\"token string\">\":8080\"</span><span class=\"token punctuation\">,</span>\n    ReadTimeout<span class=\"token punctuation\">:</span>  time<span class=\"token punctuation\">.</span>Minute<span class=\"token punctuation\">,</span>\n    WriteTimeout<span class=\"token punctuation\">:</span> time<span class=\"token punctuation\">.</span>Minute<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">go</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token operator\">*</span>key <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span> <span class=\"token operator\">||</span> <span class=\"token operator\">*</span>cert <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">&#123;</span>\n      fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http服务启动成功\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> svr<span class=\"token punctuation\">.</span><span class=\"token function\">ListenAndServe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">Fatalln</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https服务启动成功\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> svr<span class=\"token punctuation\">.</span><span class=\"token function\">ListenAndServeTLS</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>cert<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      log<span class=\"token punctuation\">.</span><span class=\"token function\">Fatalln</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  \n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>实现mutate的部分，我们需要给满足条件的deployment和service添加一个名为<code>admission-example.naturelr.cc/status&quot;: &quot;test&quot;</code>的注解<br>这里和使用kubectl操作上很像只不过由代码返回给k8s</p>\n</blockquote>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">mutate</span><span class=\"token punctuation\">(</span>w http<span class=\"token punctuation\">.</span>ResponseWriter<span class=\"token punctuation\">,</span> r <span class=\"token operator\">*</span>http<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 请求结构体</span>\n  qar <span class=\"token operator\">:=</span> admissionv1<span class=\"token punctuation\">.</span>AdmissionReview<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> serializer<span class=\"token punctuation\">.</span><span class=\"token function\">NewCodecFactory</span><span class=\"token punctuation\">(</span>runtime<span class=\"token punctuation\">.</span><span class=\"token function\">NewScheme</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">UniversalDeserializer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Decode</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>qar<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">checkErr</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>  \n  <span class=\"token keyword\">type</span> patchOperation <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span>\n    Op    <span class=\"token builtin\">string</span>      <span class=\"token string\">`json:\"op\"`</span>\n    Path  <span class=\"token builtin\">string</span>      <span class=\"token string\">`json:\"path\"`</span>\n    Value <span class=\"token keyword\">interface</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token string\">`json:\"value,omitempty\"`</span>\n  <span class=\"token punctuation\">&#125;</span>  \n  p <span class=\"token operator\">:=</span> patchOperation<span class=\"token punctuation\">&#123;</span>\n    Op<span class=\"token punctuation\">:</span>    <span class=\"token string\">\"add\"</span><span class=\"token punctuation\">,</span>\n    Path<span class=\"token punctuation\">:</span>  <span class=\"token string\">\"/metadata/annotations\"</span><span class=\"token punctuation\">,</span>\n    Value<span class=\"token punctuation\">:</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"admission-example.naturelr.cc/status\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span>\n  patch<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> json<span class=\"token punctuation\">.</span><span class=\"token function\">Marshal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>patchOperation<span class=\"token punctuation\">&#123;</span>p<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">checkErr</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// 返回给k8s的消息</span>\n  are <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>admissionv1<span class=\"token punctuation\">.</span>AdmissionReview<span class=\"token punctuation\">&#123;</span>\n    TypeMeta<span class=\"token punctuation\">:</span> apimetav1<span class=\"token punctuation\">.</span>TypeMeta<span class=\"token punctuation\">&#123;</span>\n      APIVersion<span class=\"token punctuation\">:</span> qar<span class=\"token punctuation\">.</span>APIVersion<span class=\"token punctuation\">,</span>\n      Kind<span class=\"token punctuation\">:</span>       qar<span class=\"token punctuation\">.</span>Kind<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    Response<span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>admissionv1<span class=\"token punctuation\">.</span>AdmissionResponse<span class=\"token punctuation\">&#123;</span>\n      Allowed<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      Patch<span class=\"token punctuation\">:</span>   patch<span class=\"token punctuation\">,</span>\n      PatchType<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>admissionv1<span class=\"token punctuation\">.</span>PatchType <span class=\"token punctuation\">&#123;</span>\n        pt <span class=\"token operator\">:=</span> admissionv1<span class=\"token punctuation\">.</span>PatchTypeJSONPatch\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>pt\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      UID<span class=\"token punctuation\">:</span> qar<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">.</span>UID<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  resp<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> json<span class=\"token punctuation\">.</span><span class=\"token function\">Marshal</span><span class=\"token punctuation\">(</span>are<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">checkErr</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"响应:\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  w<span class=\"token punctuation\">.</span><span class=\"token function\">WriteHeader</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n  w<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>validate中主要验证service和deployment中标签是否有admission字段如果就没有则拒绝访问</p>\n</blockquote>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">validate</span><span class=\"token punctuation\">(</span>w http<span class=\"token punctuation\">.</span>ResponseWriter<span class=\"token punctuation\">,</span> r <span class=\"token operator\">*</span>http<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 请求结构体</span>\n  qar <span class=\"token operator\">:=</span> admissionv1<span class=\"token punctuation\">.</span>AdmissionReview<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n  <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> serializer<span class=\"token punctuation\">.</span><span class=\"token function\">NewCodecFactory</span><span class=\"token punctuation\">(</span>runtime<span class=\"token punctuation\">.</span><span class=\"token function\">NewScheme</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">UniversalDeserializer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Decode</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>qar<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">checkErr</span><span class=\"token punctuation\">(</span>err\n  <span class=\"token comment\">// 处理逻辑 从请求的结构体判断是是否满足条件</span>\n  <span class=\"token keyword\">var</span>  availableLabels <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span>\n  \n  requiredLabels <span class=\"token operator\">:=</span> <span class=\"token string\">\"admission\"</span>\n  <span class=\"token keyword\">var</span> errMsg <span class=\"token builtin\">error</span>\n  <span class=\"token keyword\">switch</span> qar<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">.</span>Kind<span class=\"token punctuation\">.</span>Kind <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">case</span> <span class=\"token string\">\"Deployment\"</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">var</span> deploy appsv1<span class=\"token punctuation\">.</span>Deployment\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> json<span class=\"token punctuation\">.</span><span class=\"token function\">Unmarshal</span><span class=\"token punctuation\">(</span>qar<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">.</span>Object<span class=\"token punctuation\">.</span>Raw<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>deploy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      log<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"无法解析格式:\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n      errMsg <span class=\"token operator\">=</span> err\n    <span class=\"token punctuation\">&#125;</span>\n    availableLabels <span class=\"token operator\">=</span> deploy<span class=\"token punctuation\">.</span>Labels\n  <span class=\"token keyword\">case</span> <span class=\"token string\">\"Service\"</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">var</span> service corev1<span class=\"token punctuation\">.</span>Service\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> json<span class=\"token punctuation\">.</span><span class=\"token function\">Unmarshal</span><span class=\"token punctuation\">(</span>qar<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">.</span>Object<span class=\"token punctuation\">.</span>Raw<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>service<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n      log<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"无法解析格式:\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n      errMsg <span class=\"token operator\">=</span> err\n    <span class=\"token punctuation\">&#125;</span>\n    availableLabels <span class=\"token operator\">=</span> service<span class=\"token punctuation\">.</span>Labels\n  <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n    msg <span class=\"token operator\">:=</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintln</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"不能处理的类型：\"</span><span class=\"token punctuation\">,</span> qar<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">.</span>Kind<span class=\"token punctuation\">.</span>Kind<span class=\"token punctuation\">)</span>\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span>\n    errMsg <span class=\"token operator\">=</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">var</span> status <span class=\"token operator\">*</span>apimetav1<span class=\"token punctuation\">.</span>Status\n  <span class=\"token keyword\">var</span> allowed <span class=\"token builtin\">bool</span>\n  <span class=\"token keyword\">if</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> ok <span class=\"token operator\">:=</span> availableLabels<span class=\"token punctuation\">[</span>requiredLabels<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">!</span>ok <span class=\"token operator\">||</span> errMsg <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n    msg <span class=\"token operator\">:=</span> <span class=\"token string\">\"不符合条件\"</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n        msg <span class=\"token operator\">=</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintln</span><span class=\"token punctuation\">(</span>errMsg<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  status <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>apimetav1<span class=\"token punctuation\">.</span>Status<span class=\"token punctuation\">&#123;</span>\n      Message<span class=\"token punctuation\">:</span> msg<span class=\"token punctuation\">,</span>\n      Reason<span class=\"token punctuation\">:</span>  apimetav1<span class=\"token punctuation\">.</span><span class=\"token function\">StatusReason</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      Code<span class=\"token punctuation\">:</span>    <span class=\"token number\">304</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n    allowed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    Message<span class=\"token punctuation\">:</span> <span class=\"token string\">\"通过\"</span><span class=\"token punctuation\">,</span>\n    status <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>apimetav1<span class=\"token punctuation\">.</span>Status<span class=\"token punctuation\">&#123;</span>\n     Reason<span class=\"token punctuation\">:</span>  <span class=\"token string\">\"通过\"</span><span class=\"token punctuation\">,</span>\n     Code<span class=\"token punctuation\">:</span>    <span class=\"token number\">200</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n    allowed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// 返回给k8s的消息</span>\n  are <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>admissionv1<span class=\"token punctuation\">.</span>AdmissionReview<span class=\"token punctuation\">&#123;</span>\n    TypeMeta<span class=\"token punctuation\">:</span> apimetav1<span class=\"token punctuation\">.</span>TypeMeta<span class=\"token punctuation\">&#123;</span>\n      APIVersion<span class=\"token punctuation\">:</span> qar<span class=\"token punctuation\">.</span>APIVersion<span class=\"token punctuation\">,</span>\n      Kind<span class=\"token punctuation\">:</span>       qar<span class=\"token punctuation\">.</span>Kind<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    Response<span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>admissionv1<span class=\"token punctuation\">.</span>AdmissionResponse<span class=\"token punctuation\">&#123;</span>\n      Allowed<span class=\"token punctuation\">:</span> allowed<span class=\"token punctuation\">,</span>\n      Result<span class=\"token punctuation\">:</span>  status<span class=\"token punctuation\">,</span>\n      UID<span class=\"token punctuation\">:</span>     qar<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">.</span>UID<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  resp<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> json<span class=\"token punctuation\">.</span><span class=\"token function\">Marshal</span><span class=\"token punctuation\">(</span>are<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">checkErr</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n  fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"响应:\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  w<span class=\"token punctuation\">.</span><span class=\"token function\">WriteHeader</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n  w<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"测试验证\"><a href=\"#测试验证\" class=\"headerlink\" title=\"测试验证\"></a>测试验证</h5><ul>\n<li>在打了<code>admission-webhook-example: enabled</code>标签下的ns中随便创建一个应用会发现被拒绝</li>\n<li>在给deployment打上了设定的标签之后就可以创建了，且deployment多了一个注解</li>\n</ul>\n<h4 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h4><p><a href=\"https://kubernetes.io/zh/docs/reference/access-authn-authz/admission-controllers/\">https://kubernetes.io/zh/docs/reference/access-authn-authz/admission-controllers/</a><br><a href=\"https://kubernetes.io/zh/docs/reference/access-authn-authz/extensible-admission-controllers/\">https://kubernetes.io/zh/docs/reference/access-authn-authz/extensible-admission-controllers/</a></p>\n","categories":["开发"],"tags":["k8s"]},{"title":"about","url":"/about/index.html","content":"<p>随着年纪的增长和技术解除的越来越多<br>有些东西记不太住<br>遂用此博客记录解决问题的过程和方法</p>\n"},{"title":"tags","url":"/tags/index.html","content":""},{"title":"文章分类","url":"/categories/index.html","content":""},{"title":"404","url":"//404.html","content":"<pre class=\"line-numbers language-none\"><code class=\"language-none\">██╗  ██╗ ██████╗ ██╗  ██╗    ███╗   ██╗ ██████╗ ████████╗\n██║  ██║██╔═████╗██║  ██║    ████╗  ██║██╔═══██╗╚══██╔══╝\n███████║██║██╔██║███████║    ██╔██╗ ██║██║   ██║   ██║\n╚════██║████╔╝██║╚════██║    ██║╚██╗██║██║   ██║   ██║\n     ██║╚██████╔╝     ██║    ██║ ╚████║╚██████╔╝   ██║\n     ╚═╝ ╚═════╝      ╚═╝    ╚═╝  ╚═══╝ ╚═════╝    ╚═╝\n\n    ███████╗ ██████╗ ██╗   ██╗███╗   ██╗██████╗\n    ██╔════╝██╔═══██╗██║   ██║████╗  ██║██╔══██╗\n    █████╗  ██║   ██║██║   ██║██╔██╗ ██║██║  ██║\n    ██╔══╝  ██║   ██║██║   ██║██║╚██╗██║██║  ██║\n    ██║     ╚██████╔╝╚██████╔╝██║ ╚████║██████╔╝\n    ╚═╝      ╚═════╝  ╚═════╝ ╚═╝  ╚═══╝╚═════╝<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n"}]